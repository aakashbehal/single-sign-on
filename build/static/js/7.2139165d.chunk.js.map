{"version":3,"sources":["containers/DocumentManager/DocumentManager.module.sass","components/modal/DocumentUpload.tsx","components/Table/pagination.tsx","components/Table/Table.tsx","store/actions/myDocuments.actions.tsx","components/modal/Modal.module.sass","components/modal/ViewDocument.tsx","containers/DocumentManager/DocumentsList.tsx"],"names":["module","exports","DocumentUpload","show","onHide","accountId","Styles","parentComponent","addToast","useToasts","editRef","useRef","useDispatch","React","useState","dragActive","setDragActive","inputRef","userLoggedIn","setUserLoggedIn","dateFrom","fileTypeSelected","formSubmitted","setFormSubmitted","file","fileType","generationDate","pdfOnly","fileSize","formError","setFormError","useEffect","user","userService","getUser","validateUpload","formObj","formIsValid","error","key","k","onSubmitHandler","e","a","preventDefault","docFile","current","config","headers","Array","from","files","length","type","formData","FormData","append","dateFormatterForRequestFileUpload","loginKey","orgType","partnerId","clientId","axiosCustom","post","process","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","onButtonClick","console","log","click","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","sm","md","onDragEnter","onSubmit","ref","multiple","onChange","target","color","onClick","cursor","style","fontSize","margin","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","Footer","padding","details_warning","variant","disabled","width","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","max","min","marginTop","Row","Col","xs","First","Prev","Next","Last","TableComponent","data","isLoading","map","onPaginationChange","totalCount","isPagination","actionArray","setCurrentPage","handleNavigate","colorArray","currencyColumns","sorting","sortElement","sortType","addEditArray","tableAction","loadingHeight","history","searchCriteria","useHistory","isCheckAll","setIsCheckAll","isCheck","setIsCheck","setHeaders","pageSize","setPageSize","pageSizes","Object","keys","servicingRequestIndicator","header","d","position","left","requestStatus","OverlayTrigger","placement","delay","hide","overlay","Tooltip","ragStatus","priorityIndicator","priorityExecution","sortBy","descElements","document","querySelectorAll","ascElements","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","index","pathname","search","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","checked","filter","item","dueDateHandler","fulfillment","Date","dueDate","setShow","Button","Form","Group","as","Label","column","Control","name","value","defaultValue","Table","striped","bordered","hover","responsive","lineHeight","backgroundColor","li","folderName","indexOf","edit","view","minWidth","openSolModal","zIndex","includes","index2","slaStatus","checkType","display","justifyContent","alignItems","contacts","contact","phone","sharedWith","sW","email","marginLeft","charAt","href","recordStatusVal","delete","update","execute","undefined","download","share","page","MyDocumentsActionCreator","getMyDocumentFolders","payload","dispatch","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","then","MY_DOCUMENTS_FOLDER_SUCCESS","success","MY_DOCUMENTS_FOLDER_FAILURE","failure","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","finally","MY_DOCUMENTS_LIST_RESET","ViewDocument","documentData","documentType","setDocumentType","splitDocumentName","fileName","Modal","Container","center_document","src","filePath","alt","height","tenuresInit","statusCode","status","DocumentsList","location","AccountId","URLSearchParams","get","tenures","showAdvanceSearch","setShowAdvanceSearch","setSortElement","setSortType","pageCount","setPageCount","uploadDocModal","setUploadDocModal","showDocument","setShowDocument","documentToShow","setDocumentToShow","useSelector","state","documents","myDocuments","loading","pageNumber","search_input","my_document_search","onMouseDown","placeholder","advanceSearch","advance_search","lg","tenure","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","originalAccountNo","equabliAccountNo","clientAccountNo","generateDate","uploadDate","shareDate","receiveDate","sharedBy","handlePagination"],"mappings":"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","file":"static/js/7.2139165d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\"};","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, dateFormatterForRequestFileUpload } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\n\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        file: false,\r\n        fileType: false,\r\n        generationDate: false,\r\n        pdfOnly: false,\r\n        fileSize: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false,\r\n            fileType: false,\r\n            generationDate: false,\r\n            pdfOnly: false\r\n        }\r\n        if (formObj.file !== 0 && formObj['pdfOnly'] !== 'application/pdf') {\r\n            error['pdfOnly'] = true\r\n        }\r\n        delete formObj.pdfOnly\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        const {\r\n            docFile\r\n        } = editRef.current\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        if (validateUpload({\r\n            file: (Array.from(docFile.files)).length,\r\n            pdfOnly: docFile.files && docFile.files[0] ? docFile.files[0].type : '',\r\n            fileType: fileTypeSelected,\r\n            generationDate: dateFrom\r\n        })) {\r\n\r\n            setFormSubmitted(true)\r\n            let formData: any = new FormData()\r\n            formData.append(\"docType\", fileTypeSelected)\r\n            formData.append(\"docDate\", dateFormatterForRequestFileUpload(dateFrom))\r\n            formData.append(\"file\", docFile.files[0])\r\n            formData.append(\"accountId\", accountId)\r\n            formData.append(\"createdBy\", userLoggedIn.loginKey)\r\n            try {\r\n                const user = userService.getUser();\r\n                if (user.orgType === \"PT\") {\r\n                    formData.append('partnerId', user.partnerId)\r\n                } else if (user.orgType === \"CL\") {\r\n                    formData.append('clientId', user.clientId)\r\n                }\r\n                const response = await axiosCustom.post(`${process.env.REACT_APP_BASE_URL1}${process.env.REACT_APP_AWS_SERVICE}/uploadDocument`, formData, config)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } catch (error: any) {\r\n                setFormSubmitted(false)\r\n                addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n                throw error\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            console.log(e.dataTransfer.files)\r\n            // handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        console.log(`handle changes`)\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            console.log(e.target.files)\r\n            // handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        console.log(`clicked`);\r\n        inputRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {parentComponent === 'myDocument' ? \"Upload New Document\" : parentComponent === 'sentDocumentRequest' ? 'Upload file for bulk document request' : ''}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input ref={inputRef} type=\"file\" id=\"input-file-upload\" multiple={true} onChange={handleChange} />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"file\"] ? 'File is required' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{formError[\"pdfOnly\"] ? 'File should be PDF format' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileSize\"] ? 'File size cannot be more than 50MB' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button, Dropdown\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    searchCriteria\r\n}: any) => {\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const pageSizes = [10, 50, 100];\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            // var allHeaders: any = []\r\n            // for (let i in data) {\r\n            //     allHeaders = [...allHeaders, ...(Object.keys(data[i]))]\r\n            // }\r\n            // var uniqueHeaders: any = Array.from(new Set(allHeaders))\r\n            setHeaders(Object.keys(map));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data]);\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'myDocuments' || parentComponent === 'sentDocumentRequest')\r\n                && <>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Export</Button>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Show/Hide Columns</Button>\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId, data) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds, data) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId, index) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts) => {\r\n        return (\r\n            contacts && contacts.map((contact, index) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service, index) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(data.map(li => li.folderName));\r\n        if (isCheckAll) {\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        const { id, checked } = e.target;\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data) => {\r\n        if (parentComponent === 'sentDocumentRequest') {\r\n            if (!data.fulfillment && new Date(data.dueDate) >= new Date()) {\r\n                return '#fbbdc3'\r\n            } else if (!data.fulfillment && new Date(data.dueDate) < new Date()) {\r\n                return '#b2e7d0'\r\n            } else {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith) => {\r\n        if (!sharedWith) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW, index) => {\r\n                            return <OverlayTrigger\r\n                                key={`sw_${index}`}\r\n                                placement=\"bottom\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={(\r\n                                    <Tooltip id=\"tooltip-error\">\r\n                                        {sW.name} - {sW.email}\r\n                                    </Tooltip>\r\n                                )}\r\n                            >\r\n                                <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW.name.charAt(0)}</span>\r\n                            </OverlayTrigger>\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            <thead>\r\n                <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                    {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                    {(parentComponent === 'myRequests'\r\n                        || parentComponent === 'pendingForApproval'\r\n                        || parentComponent === 'pendingMyApproval'\r\n                    ) && <th>#</th>}\r\n                    {\r\n                        (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                        && <th className=\"span1\">\r\n                            <div\r\n                                className=\"table_header_container\"\r\n                                style={\r\n                                    {\r\n                                        'minWidth': '20px',\r\n                                        'height': '30px',\r\n                                        'alignItems': 'center'\r\n                                    }\r\n                                }>\r\n                                <Form.Control type='Checkbox' onChange={() => handleAllSelect()} style={{ cursor: 'pointer' }}></Form.Control>\r\n                            </div>\r\n                        </th>\r\n                    }\r\n                    {\r\n                        // eslint-disable-next-line array-callback-return\r\n                        headers && headers.map((header, index) => {\r\n                            if (header !== 'clientId'\r\n                                && header !== 'recordStatusVal'\r\n                                && header !== 'batchSchedulerGroupId'\r\n                                && header !== 'logDescription'\r\n                                && header !== 'queueId'\r\n                                && header !== 'slaStatus'\r\n                                && header !== 'alertDefinition'\r\n                                && header !== 'RFILink'\r\n                                && header !== 'auditLink'\r\n                            ) {\r\n                                return (\r\n                                    <th\r\n                                        className=\"span1\"\r\n                                        key={`header_${index}`}\r\n                                    >\r\n                                        <div\r\n                                            className=\"table_header_container\"\r\n                                            style={\r\n                                                {\r\n                                                    'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                        ? '300px'\r\n                                                        : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                                }\r\n                                            }>\r\n                                            <div>\r\n                                                {map[header] ? map[header] : header}\r\n                                            </div>\r\n                                            {\r\n                                                sorting\r\n                                                && (\r\n                                                    <div className=\"sorting\">\r\n                                                        <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                        <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </th>\r\n                                );\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                    {\r\n                        ((typeof addEditArray.edit !== 'undefined')\r\n                            || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                        && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                    }\r\n                    {\r\n                        ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                        && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                    }\r\n                    {\r\n                        (parentComponent === 'myDocuments' || parentComponent === 'documents') && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                    }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    data && data.map((d: any, index: number) => (\r\n                        <tr\r\n                            key={`data_${index}`} style={{\r\n                                lineHeight: '30px',\r\n                                textAlign: 'center',\r\n                                position: 'relative',\r\n                                zIndex: 9,\r\n                                backgroundColor: dueDateHandler(d)\r\n                            }}\r\n\r\n                        >\r\n                            {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                            {(parentComponent === 'myRequests'\r\n                                || parentComponent === 'pendingForApproval'\r\n                                || parentComponent === 'pendingMyApproval'\r\n                            ) && <th>{index + 1}</th>}\r\n                            {\r\n                                (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                                && <th className=\"span1\">\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': '20px',\r\n                                                'height': '30px',\r\n                                                'alignItems': 'center'\r\n                                            }\r\n                                        }>\r\n                                        <Form.Control type='Checkbox' id={d.folderName} checked={isCheck.includes(d.folderName)} style={{ cursor: 'pointer' }} onChange={handleClick} ></Form.Control>\r\n                                    </div>\r\n                                </th>\r\n                            }\r\n                            {\r\n                                // eslint-disable-next-line array-callback-return\r\n                                headers.map((header: any, index2) => {\r\n                                    if (header !== 'clientId'\r\n                                        && header !== 'recordStatusVal'\r\n                                        && header !== 'batchSchedulerGroupId'\r\n                                        && header !== 'logDescription'\r\n                                        && header !== 'slaStatus'\r\n                                        && header !== 'queueId'\r\n                                        && header !== 'alertDefinition'\r\n                                        && header !== 'RFILink'\r\n                                        && header !== 'auditLink'\r\n                                    ) {\r\n                                        if (actionArray.includes(header)) {\r\n                                            return (\r\n                                                <td\r\n                                                    style={\r\n                                                        {\r\n                                                            background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                            color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                        }\r\n                                                    }\r\n                                                    key={`data_2${index2}`}\r\n                                                    className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                                >\r\n                                                    {\r\n                                                        servicingRequestIndicator(header, d)\r\n                                                    }\r\n                                                    {\r\n                                                        priorityIndicator(header, d)\r\n                                                    }\r\n                                                    {\r\n                                                        header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                        <div style={{\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center',\r\n                                                            alignItems: 'center'\r\n                                                        }}><AiFillFolder size={20} /><span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\">\r\n                                                                {d[header]}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    }\r\n                                                    {\r\n                                                        header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                        <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    }\r\n\r\n                                                </td>\r\n                                            );\r\n                                        }\r\n                                        if (header === 'isValidationRequired') {\r\n                                            return <td>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                        }\r\n                                        if (header === 'isExcluded') {\r\n                                            return <td>{d[header] ? 'Y' : 'N'}</td>;\r\n                                        }\r\n                                        if (header === 'isAdditionalTimeRequired') {\r\n                                            return <td>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                        }\r\n                                        if (header === 'keyContacts') {\r\n                                            return <td>{keyContactsHandler(d[header])}</td>\r\n                                        }\r\n                                        if (header === 'servicesOffered'\r\n                                            || header === \"accountTypeServiced\"\r\n                                        ) {\r\n                                            return <td>{serviceOfferedHandler(d[header])}</td>\r\n                                        }\r\n                                        if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                            || header === 'productType')) {\r\n                                            return <td>{serviceOfferedHandler(d[header])}</td>\r\n                                        }\r\n                                        if (header === \"capacity\") {\r\n                                            return <td>{capacityHandler(d[header])}</td>\r\n                                        }\r\n                                        if (header === \"commissionRate\") {\r\n                                            return <td>{commissionRateHandler(d[header])}</td>\r\n                                        }\r\n                                        if (header === \"compliance\") {\r\n                                            return <td>{complianceHandler(d[header])}</td>\r\n                                        }\r\n                                        if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                            return <td>{collectionsHandler(d[header])}</td>\r\n                                        }\r\n                                        if (header === \"sharedWith\") {\r\n                                            return <td>{handleSharedWith(d[header])}</td>\r\n                                        }\r\n                                        if (header === \"preview\") {\r\n                                            return <td><BsFileEarmarkText size={24} /></td>\r\n                                        }\r\n                                        if (header === 'upload') {\r\n                                            return <td><AiOutlineCloudUpload size={24} /></td>\r\n                                        }\r\n                                        if (header === 'download') {\r\n                                            return <td><AiOutlineCloudDownload size={24} /></td>\r\n                                        }\r\n                                        if (!d[header]) {\r\n                                            return <td><b>-</b></td>\r\n                                        }\r\n                                        if (header === \"partnerStatus\") {\r\n                                            return <td style={{ textAlign: 'left' }}>\r\n                                                <span style={{\r\n                                                    backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                    color: 'white',\r\n                                                    padding: '.3rem 1rem',\r\n                                                    borderRadius: '.3rem'\r\n                                                }}>{d[header]}</span><br />\r\n                                                {\r\n                                                    (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                    && <>\r\n                                                        <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                        <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                    </>\r\n                                                }\r\n                                            </td>\r\n                                        }\r\n                                        if (header === 'executionStatusVal') {\r\n                                            return (<td>\r\n                                                <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                    {d[header]}\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"right\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                {d['logDescription']}\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                    </OverlayTrigger>\r\n                                                </span>\r\n                                            </td>)\r\n                                        }\r\n                                        if (header === 'complianceIds') {\r\n                                            return (\r\n                                                <td className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                    {complianceSplitter(d[header], d)}\r\n                                                </td>\r\n                                            )\r\n                                        }\r\n                                        if (colorArray.includes(header)) {\r\n                                            return (\r\n                                                <td\r\n                                                    style={{ backgroundColor: `${d[header]}` }}\r\n                                                    key={`data_2${index2}`}\r\n                                                >{''}\r\n                                                </td>\r\n                                            );\r\n                                        }\r\n                                        return (\r\n                                            <td\r\n                                                className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                                key={`data_2${index2}`}\r\n                                            >\r\n                                                {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                                {' '}\r\n                                                {d[header]}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n\r\n                                })\r\n                            }\r\n                            {\r\n                                ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                                && <td className=\"span1\" >\r\n                                    <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                                </td>\r\n                            }\r\n                            {\r\n                                typeof addEditArray.edit !== 'undefined'\r\n                                && (\r\n                                    <>\r\n                                        <td className=\"span1\" >\r\n                                            <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                                {\r\n                                                    d.recordStatusVal !== \"Deleted\"\r\n                                                    && <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                Edit\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <BiPencil onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                                {\r\n                                                    d.recordStatusVal === \"Deleted\"\r\n                                                    && <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                View\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <BsEye onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                                {\r\n                                                    d.recordStatusVal !== \"Deleted\"\r\n                                                    &&\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                Delete\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <CgTrash onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                                {\r\n                                                    d.recordStatusVal === \"Disabled\"\r\n                                                    &&\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                Click to unlock\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                                {\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    &&\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                Click to lock\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                                {\r\n                                                    (\r\n                                                        d.recordStatusVal === \"Enabled\"\r\n                                                        || d.recordStatusVal === \"Disabled\"\r\n                                                    )\r\n                                                    && (typeof addEditArray.execute !== 'undefined')\r\n                                                    &&\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                Execute\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                                {\r\n                                                    d.recordStatusVal === \"Deleted\"\r\n                                                    &&\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        delay={{ show: 250, hide: 400 }}\r\n                                                        overlay={\r\n                                                            <Tooltip id={`tooltip-error`}>\r\n                                                                Deleted\r\n                                                            </Tooltip>\r\n                                                        }\r\n                                                    >\r\n                                                        <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                    </OverlayTrigger>\r\n                                                }\r\n                                            </span>\r\n                                        </td>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            {\r\n                                typeof addEditArray.view !== 'undefined'\r\n                                && d['alertDefinition'] !== undefined\r\n                                && (\r\n                                    <>\r\n                                        <td className=\"span1\" >\r\n                                            <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                                {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                            </span>\r\n                                        </td>\r\n                                    </>\r\n                                )\r\n                            }\r\n                            {\r\n                                (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                                && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span> &nbsp;\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload onClick={() => addEditArray.download(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span> &nbsp;\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span> &nbsp;\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                </th>\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <th>No Records</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        <div className={`table_loading ${loadingHeight ? null : 'no_min_height'}`} >\r\n            <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        </div >\r\n    );\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {totalCount > 0 ? tableHandler() : emptyTable()}\r\n            </Table>\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;\r\n","import { MyDocumentsFolder, MyDocumentsList } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi_select_container\":\"Modal_multi_select_container__2TE8W\",\"checkbox_wrapper\":\"Modal_checkbox_wrapper__3YO7R\",\"label_select\":\"Modal_label_select__qIb3F\",\"download_modal\":\"Modal_download_modal__2Q8Qv\",\"center_document\":\"Modal_center_document__1lIsg\"};","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nimport Styles from \"./Modal.module.sass\";\r\n\r\nconst ViewDocument = ({ onHide, show, documentData }) => {\r\n\r\n    const [documentType, setDocumentType] = useState('')\r\n\r\n    useEffect(() => {\r\n        const splitDocumentName = documentData.fileName.split('.')\r\n        setDocumentType(splitDocumentName[splitDocumentName.length - 1])\r\n    }, [documentData])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"xl\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <p>{documentData.fileName}</p>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document}>\r\n                    {\r\n                        documentType === 'png'\r\n                        && <img src={documentData.filePath} alt=\"\" />\r\n                    }\r\n                    {\r\n                        documentType === 'pdf'\r\n                        && <object data={documentData.filePath}\r\n                            width=\"800\"\r\n                            height=\"500\">\r\n                        </object>\r\n                    }\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default ViewDocument\r\n","import { useState, useEffect } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst DocumentsList = ({ location }) => {\r\n    const dispatch = useDispatch();\r\n    const params = new URLSearchParams(location.search);\r\n    const AccountId = params.get('account_id');\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null)\r\n\r\n    const { documents, totalCount, error, loading } = useSelector((state: any) => ({\r\n        documents: state.myDocuments.documents.data,\r\n        totalCount: state.myDocuments.documents.totalCount,\r\n        error: state.myDocuments.documents.error,\r\n        loading: state.myDocuments.documents.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentList({\r\n            pageSize,\r\n            pageNumber,\r\n            AccountId\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                {/* <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col> */}\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={documents}\r\n                isLoading={false}\r\n                map={{\r\n                    fileName: \"Name\",\r\n                    documentType: \"Document Type\",\r\n                    originalAccountNo: \"Original Account Number\",\r\n                    equabliAccountNo: \"Equabli Account Number\",\r\n                    clientAccountNo: \"Client Account Number\",\r\n                    generateDate: \"Generated Date\",\r\n                    uploadDate: \"upload Date\",\r\n                    shareDate: \"Share Date\",\r\n                    receiveDate: \"Receive Date\",\r\n                    fileSize: \"File Size\",\r\n                    sharedBy: \"Shared By\",\r\n                    sharedWith: \"Shared With\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['fileName']}\r\n                handleNavigate={(data) => {\r\n                    setShowDocument(true)\r\n                    setDocumentToShow(data)\r\n                }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'documents'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => console.log(`download Action`, data),\r\n                        share: (data) => console.log(`share action`, data),\r\n                        view: (data) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        },\r\n                        delete: (data) => console.log(`Delete Action`, data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload show={uploadDocModal} onHide={() => setUploadDocModal(false)} accountId={123} Styles={Styles} />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default DocumentsList\r\n\r\n"],"sourceRoot":""}