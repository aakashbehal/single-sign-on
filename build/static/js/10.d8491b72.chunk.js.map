{"version":3,"sources":["store/actions/common/types.actions.tsx","components/modal/DeleteConfirm.tsx","containers/User/User.module.sass","store/actions/requiredDocuments.actions.tsx","containers/User/RequiredDocuments.tsx"],"names":["TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","DeleteConfirm","onHide","show","confirmDelete","text","actionText","details","deleteRef","useRef","useEffect","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","documentType","productName","requestedFrom","Footer","variant","ref","onClick","module","exports","RequiredDocumentActionCreator","userType","RequiredDocuments","REQUIRED_DOCUMENTS_REQUEST","requiredDocumentService","getRequiredDocuments","costs","REQUIRED_DOCUMENTS_SUCCESS","REQUIRED_DOCUMENTS_FAILURE","requestData","SaveRequiredDocuments","SAVE_REQUIRED_DOCUMENTS_REQUEST","saveRequiredDocuments","SAVE_REQUIRED_DOCUMENTS_SUCCESS","SAVE_REQUIRED_DOCUMENTS_FAILURE","finally","SAVE_REQUIRED_DOCUMENTS_RESET","DeleteRequiredDocuments","DELETE_REQUIRED_DOCUMENTS_REQUEST","deleteRequiredDocuments","DELETE_REQUIRED_DOCUMENTS_SUCCESS","DELETE_REQUIRED_DOCUMENTS_FAILURE","DELETE_REQUIRED_DOCUMENTS_RESET","AddEditRequiredDocuments","documentTypes","Styles","editRequired","productTypes","selectedProduct","formRef","useState","documentTypesSelected","setDocumentTypesSelected","Modal","Form","onSubmit","e","preventDefault","productType","current","value","map","dT","shortCode","handleSubmit","Container","Col","md","sm","Group","as","Control","name","disabled","defaultValue","productCode","length","index","indexOf","Label","style","padding","Button","width","PublicMethodsExample","defaultSelected","documents","labelKey","multiple","options","onChange","selected","ignoreDiacritics","placeholder","useDispatch","addToast","useToasts","showAdvanceSearch","setShowAdvanceSearch","addEditRequired","setAddEditRequired","setEditRequired","showDeleteConfirm","setShowDeleteConfirm","setDetails","setSelectedProduct","useSelector","state","requiredDocuments","data","loading","loadingProductTypes","errorProductTypes","loadingDocumentTypes","errorDocumentTypes","adding","addSuccessful","addError","editing","editSuccessful","editError","deleteSuccessful","deleteError","tempRequiredDocuments","Object","assign","tRD","d","documentCode","documentName","description","tempC","c","createMessage","appearance","autoDismiss","Row","search_input","search","my_document_search","onMouseDown","advanceSearch","advance_search","marginTop","lg","button_center","Table","striped","bordered","hover","responsive","marginBottom","lineHeight","backgroundColor","textAlign","color","cT","dL","required_documents","minWidth","OverlayTrigger","placement","delay","hide","overlay","Tooltip","cursor"],"mappings":"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","file":"static/js/10.d8491b72.chunk.js","sourcesContent":["import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes()\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes()\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'receiveDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movement_group\":\"User_movement_group__hN-zZ\",\"button_center\":\"User_button_center__jLzXE\",\"search_input\":\"User_search_input__1yonV\",\"search\":\"User_search__kQVRZ\",\"advanceSearch\":\"User_advanceSearch__28VFr\",\"my_document_search\":\"User_my_document_search__3qvbe\",\"collapse_summary\":\"User_collapse_summary__2ZBSi\",\"advance_search\":\"User_advance_search__3O2qV\",\"required_documents\":\"User_required_documents__1ToGB\"};","import { RequiredDocuments, SaveRequiredDocuments, DeleteRequiredDocuments } from \"../types.d\";\r\nimport { requiredDocumentService } from \"../../services\"\r\n\r\nexport const RequiredDocumentActionCreator = {\r\n    getRequiredDocuments: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: RequiredDocuments.REQUIRED_DOCUMENTS_REQUEST })\r\n        const success = (costs: any) => ({ type: RequiredDocuments.REQUIRED_DOCUMENTS_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: RequiredDocuments.REQUIRED_DOCUMENTS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        requiredDocumentService.getRequiredDocuments(userType)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    saveRequiredDocuments: (requestData) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveRequiredDocuments.SAVE_REQUIRED_DOCUMENTS_REQUEST })\r\n        const success = (costs: any) => ({ type: SaveRequiredDocuments.SAVE_REQUIRED_DOCUMENTS_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: SaveRequiredDocuments.SAVE_REQUIRED_DOCUMENTS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        requiredDocumentService.saveRequiredDocuments(requestData)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveRequiredDocuments.SAVE_REQUIRED_DOCUMENTS_RESET }))\r\n    },\r\n    deleteRequiredDocuments: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteRequiredDocuments.DELETE_REQUIRED_DOCUMENTS_REQUEST })\r\n        const success = (costs: any) => ({ type: DeleteRequiredDocuments.DELETE_REQUIRED_DOCUMENTS_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: DeleteRequiredDocuments.DELETE_REQUIRED_DOCUMENTS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        requiredDocumentService.deleteRequiredDocuments(id)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteRequiredDocuments.DELETE_REQUIRED_DOCUMENTS_RESET }))\r\n    }\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, OverlayTrigger, Row, Table, Tooltip } from \"react-bootstrap\";\r\nimport { AiOutlineCloudDownload, AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport { CgOptions, CgSearch, CgSpinnerAlt } from \"react-icons/cg\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport Styles from \"./User.module.sass\";\r\nimport { RequiredDocumentActionCreator } from \"../../store/actions/requiredDocuments.actions\";\r\nimport { createMessage } from \"../../helpers/messages\"\r\n\r\nconst RequiredDocuments = () => {\r\n    const dispatch = useDispatch()\r\n    const { addToast } = useToasts();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [addEditRequired, setAddEditRequired] = useState(false)\r\n    const [editRequired, setEditRequired] = useState(null)\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null)\r\n    const [selectedProduct, setSelectedProduct] = useState<any>([])\r\n    const [requiredDocumentsUpdated, setRequiredDocumentsUpdated] = useState<any>([])\r\n    const { requiredDocuments,\r\n        loading,\r\n        error,\r\n        productTypes,\r\n        loadingProductTypes,\r\n        errorProductTypes,\r\n        documentTypes,\r\n        loadingDocumentTypes,\r\n        errorDocumentTypes,\r\n        adding,\r\n        addSuccessful,\r\n        addError,\r\n        editing,\r\n        editSuccessful,\r\n        editError,\r\n        deleteSuccessful,\r\n        deleteError\r\n    } = useSelector((state: any) => ({\r\n        requiredDocuments: state.requiredDocuments.data,\r\n        loading: state.requiredDocuments.loading,\r\n        error: state.requiredDocuments.error,\r\n        productTypes: state.types.productType.data,\r\n        loadingProductTypes: state.types.productType.loading,\r\n        errorProductTypes: state.types.productType.error,\r\n        documentTypes: state.types.documentType.data,\r\n        loadingDocumentTypes: state.types.documentType.loading,\r\n        errorDocumentTypes: state.types.documentType.error,\r\n        adding: state.requiredDocuments.adding,\r\n        addSuccessful: state.requiredDocuments.addSuccessful,\r\n        addError: state.requiredDocuments.addError,\r\n        editing: state.requiredDocuments.editing,\r\n        editSuccessful: state.requiredDocuments.editSuccessful,\r\n        editError: state.requiredDocuments.editError,\r\n        deleteSuccessful: state.requiredDocuments.deleteSuccessful,\r\n        deleteError: state.requiredDocuments.deleteError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        getRequiredDocuments()\r\n        dispatch(TypesActionCreator.getProductTypes())\r\n        dispatch(TypesActionCreator.getDocumentTypes())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (requiredDocuments && requiredDocuments.length > 0) {\r\n            let tempRequiredDocuments = Object.assign([], requiredDocuments)\r\n            tempRequiredDocuments = tempRequiredDocuments.map((tRD) => {\r\n                tRD.documents = tRD.documents.map((d) => {\r\n                    d.shortCode = d.documentCode\r\n                    d.documentType = d.documentName\r\n                    d.description = d.documentName\r\n                    delete d.documentCode\r\n                    delete d.documentName\r\n                    return d\r\n                })\r\n                return tRD\r\n            })\r\n            // setRequiredDocumentsUpdated()\r\n            let tempC = requiredDocuments.map((c) => {\r\n                return c.productCode\r\n            })\r\n            setSelectedProduct(tempC)\r\n        }\r\n    }, [requiredDocuments])\r\n\r\n    useEffect(() => {\r\n        if (addSuccessful) {\r\n            addToast(createMessage('success', `added`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setAddEditRequired(false);\r\n            getRequiredDocuments()\r\n        }\r\n        if (addError) { addToast(createMessage('error', `adding`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n        if (editSuccessful) {\r\n            addToast(createMessage('success', `edit`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setAddEditRequired(false)\r\n            getRequiredDocuments()\r\n        }\r\n        if (editError) { addToast(createMessage('error', `editing`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteSuccessful) {\r\n            addToast(createMessage('success', `delete`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            getRequiredDocuments()\r\n        }\r\n        if (deleteError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [addSuccessful,\r\n        addError,\r\n        editSuccessful,\r\n        editError,\r\n        deleteSuccessful,\r\n        deleteError])\r\n\r\n    const handleEdit = (required) => {\r\n        setEditRequired(required)\r\n        setAddEditRequired(true)\r\n    }\r\n\r\n    const getRequiredDocuments = () => {\r\n        dispatch(RequiredDocumentActionCreator.getRequiredDocuments('CL'))\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(RequiredDocumentActionCreator.deleteRequiredDocuments(details.productCode))\r\n    }\r\n\r\n    const handleDetails = (required) => {\r\n        setDetails(required)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={`${Styles.search_input} required_document_input`}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (productTypes && productTypes.length > 0) &&\r\n                                                    productTypes.map((dT: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={dT.productCode}>{dT.name}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\" onClick={() => setShowAdvanceSearch(!showAdvanceSearch)}>Cancel</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2} className=\"required_document_button\">\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => {\r\n                        setEditRequired(null)\r\n                        setAddEditRequired(true)\r\n                    }}>Add New Document Configuration</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            {\r\n                loading &&\r\n                <div className={`table_loading`} >\r\n                    <CgSpinnerAlt className=\"spinner\" size={50} />\r\n                </div >\r\n            }\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {\r\n                    !loading && requiredDocuments.length === 0\r\n                    && <thead>\r\n                        <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                            <th>No Records</th>\r\n                        </tr>\r\n                    </thead>\r\n                }\r\n                {\r\n                    !loading && requiredDocuments.length > 0\r\n                    && <>\r\n                        <thead>\r\n                            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                                <th>Product</th>\r\n                                <th>Required Documents</th>\r\n                                <th style={{ width: '120px' }}>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                requiredDocuments && requiredDocuments.map((cT, index) => {\r\n                                    return (<tr key={`rD_${index}`}>\r\n                                        <td>{cT.productName}</td>\r\n                                        <td>\r\n                                            {cT.documents && cT.documents.map((dL, index) => {\r\n                                                return <span key={`dL_${index}`} className={Styles.required_documents}>{dL.documentType}</span>\r\n                                            })}\r\n                                        </td>\r\n                                        <td className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                            <span>\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FiEdit2 onClick={() => handleEdit(cT)} size={20} style={{ cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span> &nbsp;\r\n                                            <span>\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiOutlineDelete onClick={() => handleDetails(cT)} size={20} style={{ cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>)\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </>\r\n                }\r\n            </Table>\r\n        </Col>\r\n        {\r\n            addEditRequired\r\n            && <AddEditRequiredDocuments\r\n                show={addEditRequired}\r\n                onHide={() => setAddEditRequired(false)}\r\n                editRequired={editRequired}\r\n                Styles={Styles}\r\n                documentTypes={documentTypes}\r\n                dispatch={dispatch}\r\n                productTypes={productTypes}\r\n                selectedProduct={selectedProduct}\r\n            />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='requiredDocuments'\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nconst AddEditRequiredDocuments = ({ show, onHide, Styles, documentTypes, editRequired, productTypes, dispatch, selectedProduct }) => {\r\n    const formRef = useRef<any>()\r\n    const [documentTypesSelected, setDocumentTypesSelected] = useState<any>([])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {\r\n            productType\r\n        } = formRef.current\r\n        dispatch(RequiredDocumentActionCreator.saveRequiredDocuments({\r\n            \"productCode\": productType.value,\r\n            \"docTypeCode\": documentTypesSelected.map((dT) => {\r\n                return dT.shortCode\r\n            })\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Form ref={formRef} onSubmit={(e) => handleSubmit(e)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                        {editRequired ? 'Edit Required Document Configuration' : \"Add New Required Document Configuration\"}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <br />\r\n                        <Col md={12} sm={12} >\r\n                            <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12} >\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"productType\"\r\n                                        disabled={editRequired}\r\n                                        defaultValue={editRequired ? editRequired.productCode : ''}\r\n                                        className=\"select_custom white\">\r\n                                        <option></option>\r\n                                        {\r\n                                            (productTypes && productTypes.length > 0) &&\r\n                                            productTypes.map((dT: any, index: number) => {\r\n                                                return <option key={`cr_${index}`} disabled={selectedProduct.indexOf(dT.productCode) !== -1} value={dT.productCode}>{dT.name}</option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">Product</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <br />\r\n                        <Col sm={12}>\r\n                            <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12}>\r\n                                    {/* <Form.Control defaultValue={editCost ? editCost.cost : ''} className=\"select_custom white\" type=\"number\" name=\"document_name\" /> */}\r\n                                    <PublicMethodsExample documentTypes={documentTypes} editRequired={editRequired} setDocumentTypesSelected={setDocumentTypesSelected} />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">Required Documents</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer style={{ padding: '1rem 4rem 2rem' }}>\r\n                    {\r\n                        editRequired\r\n                        &&\r\n                        <>\r\n                            <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Save</Button>\r\n                            <Button variant=\"dark\" style={{ width: '100%' }} onClick={onHide}>Cancel</Button>\r\n                        </>\r\n                    }\r\n                    {\r\n                        !editRequired\r\n                        &&\r\n                        <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Add</Button>\r\n                    }\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nconst PublicMethodsExample = ({ documentTypes, editRequired, setDocumentTypesSelected }) => {\r\n    const ref = useRef<any>();\r\n    return (\r\n        <>\r\n            <Typeahead\r\n                defaultSelected={editRequired ? editRequired.documents : []}\r\n                id=\"public-methods-example\"\r\n                labelKey=\"documentType\"\r\n                multiple\r\n                options={documentTypes}\r\n                onChange={(selected) => {\r\n                    setDocumentTypesSelected(selected)\r\n                }}\r\n                ignoreDiacritics={false}\r\n                placeholder=\"Choose Document Types...\"\r\n                ref={ref}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RequiredDocuments;"],"sourceRoot":""}