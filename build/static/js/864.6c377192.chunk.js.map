{"version":3,"file":"static/js/864.6c377192.chunk.js","mappings":"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","sources":["components/Common/NoResult.tsx","store/actions/fileNameConfig.actions.tsx","helpers/useDocumentTitle.tsx","containers/User/DocumentGeneralConfiguration.tsx","store/actions/common/types.actions.tsx","../node_modules/react-bootstrap/esm/Table.js","webpack://equabli-front-end/./src/containers/User/User.module.sass?4b5b"],"sourcesContent":["import { BsFolder2Open } from \"react-icons/bs\";\r\n\r\nconst NoRecord = ({ size = 30 }: any) => {\r\n    return (\r\n        <div className=\"no_result\">\r\n            <div>\r\n                <BsFolder2Open size={size} />\r\n                <p><b>No Result</b></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoRecord","import {\r\n    Conjunction,\r\n    FieldOptions,\r\n    UserFileNamingConfig,\r\n    UserRetentionPolicy,\r\n    UserSeparator,\r\n    UserDocumentPolicy,\r\n    SaveUserConfiguration,\r\n    RetentionPolicy,\r\n    DocumentPolicy,\r\n    UserListOfUserConfig\r\n} from \"../types.d\";\r\nimport { commonServices, fileNameConfigService } from \"../../services\"\r\n\r\nexport const FileNameConfigActionCreator = {\r\n    getConjunction: () => (dispatch: any) => {\r\n        const request = () => ({ type: Conjunction.CONJUNCTION_REQUEST })\r\n        const success = (user: any) => ({ type: Conjunction.CONJUNCTION_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: Conjunction.CONJUNCTION_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getLookupValues({ lookupGroupKeyValue: 'CONJUNCTION_TYPE' })\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getFieldOptions: () => (dispatch: any) => {\r\n        const request = () => ({ type: FieldOptions.FIELD_OPTIONS_REQUEST })\r\n        const success = (user: any) => ({ type: FieldOptions.FIELD_OPTIONS_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: FieldOptions.FIELD_OPTIONS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getRetentionPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: RetentionPolicy.RETENTION_POLICY_REQUEST })\r\n        const success = (user: any) => ({ type: RetentionPolicy.RETENTION_POLICY_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: RetentionPolicy.RETENTION_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentPolicy.DOCUMENT_POLICY_REQUEST })\r\n        const success = (user: any) => ({ type: DocumentPolicy.DOCUMENT_POLICY_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: DocumentPolicy.DOCUMENT_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserConfig: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'FIELD' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getListOfUserConfig: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserListOfUserConfig.USER_LIST_OF_FILE_NAMING_CONFIG_REQUEST })\r\n        const success = (list: any) => ({ type: UserListOfUserConfig.USER_LIST_OF_FILE_NAMING_CONFIG_SUCCESS, payload: list })\r\n        const failure = (error: any) => ({ type: UserListOfUserConfig.USER_LIST_OF_FILE_NAMING_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getListOfUserConfig()\r\n            .then(\r\n                list => {\r\n                    dispatch(success(list))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserRetentionPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'RETENTION_POLICY' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserSeparator: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserSeparator.USER_SEPARATOR_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserSeparator.USER_SEPARATOR_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserSeparator.USER_SEPARATOR_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'SEPARATOR' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserDocumentPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'DOCUMENT_POLICY' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    saveUserConfiguration: (requestBody: any) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.saveUserConfiguration(requestBody)\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveUserConfiguration.SAVE_USER_CONFIG_RESET }))\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nconst UseDocumentTitle = (title: any, prevailOnUnmount = false) => {\r\n    const defaultTitle = useRef(document.title)\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n\r\n    useEffect(() => () => {\r\n        if (!prevailOnUnmount) {\r\n            document.title = defaultTitle.current;\r\n        }\r\n    }, [])\r\n}\r\n\r\nexport default UseDocumentTitle;","import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\"\r\nimport { Col, Row, Form, Button, OverlayTrigger, Tooltip, Table, Modal } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { HiArrowNarrowDown, HiArrowNarrowUp } from \"react-icons/hi\"\r\n\r\nimport Styles from \"./User.module.sass\"\r\nimport { FileNameConfigActionCreator } from \"../../store/actions/fileNameConfig.actions\";\r\nimport { fileNameConfigService, userService } from \"../../services\";\r\nimport UseDocumentTitle from \"../../helpers/useDocumentTitle\"\r\nimport { useToasts } from \"react-toast-notifications\"\r\nimport { createMessage } from \"../../helpers/messages\"\r\nimport { CgSpinnerAlt } from \"react-icons/cg\"\r\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\"\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\"\r\nimport xlsx from \"json-as-xlsx\"\r\nimport { FiEdit2 } from \"react-icons/fi\"\r\nimport { AiOutlineDelete } from \"react-icons/ai\"\r\nimport NoRecord from \"../../components/Common/NoResult\"\r\n\r\nexport interface IDocConfig {\r\n    docMgrConfigSelectedCode: string,\r\n    domainAttributeMappingSelectedCode: string,\r\n    attributeName: string,\r\n    isMandatory: boolean,\r\n    regex: string | null\r\n}\r\nexport interface IConfiguration {\r\n    namingConfigGroupCode: string\r\n    namingConfigGroupName: string\r\n    separatorCode: string\r\n    userDocConfig: IDocConfig[]\r\n}\r\n\r\nconst DocumentGeneralConfiguration = () => {\r\n    UseDocumentTitle('Document General Configuration')\r\n    const ref = useRef<any>();\r\n    const { addToast } = useToasts();\r\n    const dispatch = useDispatch();\r\n    const [userType, setUserType] = useState(null)\r\n    const [showConfig, setShowConfig] = useState(false)\r\n    const [configurationDetails, setConfigurationDetails] = useState(null)\r\n    useEffect(() => {\r\n        const user = userService.getUser();\r\n        setUserType(user.recordSource);\r\n    }, [])\r\n\r\n    const {\r\n        saveSuccess,\r\n        saveError,\r\n    } = useSelector((state: any) => ({\r\n        saveSuccess: state.fileNameConfig.saveConfig.success,\r\n        saveError: state.fileNameConfig.saveConfig.error,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (saveSuccess) {\r\n            addToast(createMessage('', `FILE_NAME_CONFIGURATION_SAVED_SUCCESS`, ''), { appearance: 'success', autoDismiss: true });\r\n            ref.current.refreshData()\r\n            setConfigurationDetails(null)\r\n            setShowConfig(false)\r\n        }\r\n        if (saveError) {\r\n            addToast(createMessage('error', `User Configuration`, 'Save'), { appearance: 'error', autoDismiss: false });\r\n        }\r\n    }, [saveSuccess, saveError])\r\n\r\n    return <>\r\n        {<ListOfUserFileNamingConfiguration ref={ref} dispatch={dispatch} setConfigurationDetails={setConfigurationDetails} setShowConfig={setShowConfig} />}\r\n        {showConfig && <FileNamingModal userType={userType} dispatch={dispatch} show={showConfig} onHide={() => {\r\n            setShowConfig(false)\r\n        }} details={configurationDetails} />}\r\n        <br />\r\n        {\r\n            (userType === 'Client' || userType === 'Equabli')\r\n            && <Row>\r\n                <Col sm={6}>\r\n                    <RetentionPolicy dispatch={dispatch} />\r\n                </Col>\r\n                <Col sm={6}><DocumentPolicy dispatch={dispatch} /></Col>\r\n            </Row>\r\n        }\r\n    </>\r\n}\r\n\r\nconst ListOfUserFileNamingConfiguration = forwardRef(({ dispatch, setConfigurationDetails, setShowConfig }: any, ref) => {\r\n    const {\r\n        confListLoading,\r\n        confListError,\r\n        confList,\r\n    } = useSelector((state: any) => ({\r\n        confListLoading: state.fileNameConfig.fileNamingConfigList.loading,\r\n        confListError: state.fileNameConfig.fileNamingConfigList.error,\r\n        confList: state.fileNameConfig.fileNamingConfigList.data,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        getListOfUserConfig()\r\n    }, [])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        refreshData() {\r\n            getListOfUserConfig()\r\n        }\r\n    }));\r\n\r\n    const getListOfUserConfig = () => {\r\n        dispatch(FileNameConfigActionCreator.getListOfUserConfig())\r\n    }\r\n\r\n    const formatConfiguration = (confArr: IDocConfig[], separatorCode: string, type: string): string => {\r\n        let confString = ``\r\n        for (let index = 0; index < confArr.length; index++) {\r\n            let text = type === 'short' ? (confArr[index].domainAttributeMappingSelectedCode) : `\"${confArr[index].attributeName}\"`\r\n            confString += (text).trim() + ((index < confArr.length - 1) ? separatorCode : '')\r\n        }\r\n        return confString\r\n    }\r\n\r\n    const handleEdit = (config: IConfiguration) => {\r\n        setConfigurationDetails(config)\r\n        setShowConfig(true)\r\n    }\r\n\r\n    const addNewHandler = () => {\r\n        setShowConfig(true)\r\n    }\r\n\r\n    return (\r\n        <Row className=\"form_container\" style={{ margin: 0 }}>\r\n            <Col sm={12} className=\"no_padding\" style={{ textAlign: 'right', marginBottom: '1rem' }}>\r\n                <Button variant=\"dark\" className=\"pull-right\" onClick={() => addNewHandler()}>+ Add New</Button>\r\n            </Col>\r\n            {\r\n                !confListLoading && confList.length === 0\r\n                && <thead>\r\n                    <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                        <NoRecord />\r\n                    </tr>\r\n                </thead>\r\n            }\r\n            {\r\n                !confListLoading && <Table striped hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                    <thead>\r\n                        <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                            <th>#</th>\r\n                            <th style={{ width: \"15%\" }}>Name</th>\r\n                            <th style={{ width: \"25%\" }}>File Name</th>\r\n                            <th style={{ width: \"60%\" }}>File Name Description</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            confList && confList.map((conf: IConfiguration, index: number) => {\r\n                                return <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{conf.namingConfigGroupName}</td>\r\n                                    <td>{formatConfiguration(conf.userDocConfig, conf.separatorCode, 'short')}</td>\r\n                                    <td>{formatConfiguration(conf.userDocConfig, conf.separatorCode, 'long')}</td>\r\n                                    <td className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                        <span>\r\n                                            <OverlayTrigger\r\n                                                placement=\"bottom\"\r\n                                                delay={{ show: 250, hide: 400 }}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-error`}>\r\n                                                        Edit\r\n                                                    </Tooltip>\r\n                                                }\r\n                                            >\r\n                                                <FiEdit2 onClick={() => handleEdit(conf)} size={20} style={{ cursor: 'pointer' }} />\r\n                                            </OverlayTrigger>\r\n                                        </span> &nbsp;\r\n                                        <span>\r\n                                            <OverlayTrigger\r\n                                                placement=\"bottom\"\r\n                                                delay={{ show: 250, hide: 400 }}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-error`}>\r\n                                                        Delete\r\n                                                    </Tooltip>\r\n                                                }\r\n                                            >\r\n                                                {/* onClick={() => handleDetails(cT)} */}\r\n                                                <AiOutlineDelete size={20} style={{ cursor: 'pointer' }} />\r\n                                            </OverlayTrigger>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            }\r\n\r\n        </Row>\r\n\r\n    )\r\n})\r\n\r\nconst FileNamingModal = ({ show, onHide, details, userType, dispatch }: any) => {\r\n    const clientDefault = [\"CAN\", \"DT\", \"PC\"]\r\n    const partnerDefault = [\"CIDSC\", \"DT\", \"CAN\", \"PC\"]\r\n    const configRef = useRef<any>();\r\n    const configNameSaveRef = useRef<any>();\r\n\r\n    const [filteredOptions, setFilteredOptions] = useState<any>([]);\r\n    const [fieldsSelected, setFieldSelected] = useState<any>({});\r\n\r\n    const {\r\n        isLoading,\r\n        dataConjunction,\r\n        dataFieldOptions,\r\n        dataFileNamingConfig,\r\n        dataUserConjunction,\r\n        productTypes,\r\n        documentTypes\r\n    } = useSelector((state: any) => ({\r\n        isLoading: state.fileNameConfig.conjunction.loading,\r\n        dataConjunction: state.fileNameConfig.conjunction.data,\r\n        dataFieldOptions: state.fileNameConfig.fieldOptions.data,\r\n        dataFileNamingConfig: state.fileNameConfig.fileNamingConfig.data,\r\n        dataUserConjunction: state.fileNameConfig.userConjunction.data,\r\n        productTypes: state.types.productType.data,\r\n        documentTypes: state.types.documentType.data,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        let selectedTemp = {}\r\n        if (userType === 'Client' || userType === 'Equabli') {\r\n            selectedTemp = {\r\n                1: 'CAN',\r\n                2: 'DT',\r\n                3: 'PC',\r\n                4: null,\r\n                5: null,\r\n                6: null,\r\n            }\r\n        } else {\r\n            selectedTemp = {\r\n                1: 'CIDSC',\r\n                2: 'DT',\r\n                3: 'CAN',\r\n                4: 'PC',\r\n                5: null,\r\n                6: null,\r\n                7: null\r\n            }\r\n        }\r\n        setFieldSelected(selectedTemp)\r\n        dispatch(FileNameConfigActionCreator.getUserConfig())\r\n        dispatch(FileNameConfigActionCreator.getFieldOptions())\r\n        dispatch(FileNameConfigActionCreator.getConjunction())\r\n        // dispatch(FileNameConfigActionCreator.getUserSeparator())\r\n        dispatch(TypesActionCreator.getProductTypes())\r\n        dispatch(TypesActionCreator.getDocumentTypes())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataFieldOptions?.length > 0\r\n        ) {\r\n            handleDefaultAndSavedSelection()\r\n        }\r\n    }, [dataFieldOptions, dataFileNamingConfig])\r\n\r\n    const handleDefaultAndSavedSelection = async () => {\r\n        const { fieldFinal, selectionFinal }: { fieldFinal: any, selectionFinal: any } = await fileNameConfigService.handleDefaultAndSavedSelection(dataFieldOptions, dataFileNamingConfig, userType, fieldsSelected, details)\r\n        setFilteredOptions(fieldFinal)\r\n        setFieldSelected(selectionFinal)\r\n    }\r\n\r\n    const handleSave = (e: any, type: any) => {\r\n        e.preventDefault();\r\n        const {\r\n            config_name,\r\n            conjunction,\r\n            field_1,\r\n            field_2,\r\n            field_3,\r\n            field_4,\r\n            field_5,\r\n            field_6,\r\n            field_7\r\n        } = configRef.current\r\n        const configRequest: any = {\r\n            \"namingConfigGroupName\": config_name.value,\r\n            \"separatorCode\": conjunction.value,\r\n            userDocConfig: []\r\n        }\r\n        if (field_1.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field1\",\r\n                \"domainAttributeMappingSelectedCode\": field_1.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        if (field_2.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field2\",\r\n                \"domainAttributeMappingSelectedCode\": field_2.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        if (field_3.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field3\",\r\n                \"domainAttributeMappingSelectedCode\": field_3.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        if (field_4.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field4\",\r\n                \"domainAttributeMappingSelectedCode\": field_4.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        if (field_5.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field5\",\r\n                \"domainAttributeMappingSelectedCode\": field_5.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        if (field_6.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field6\",\r\n                \"domainAttributeMappingSelectedCode\": field_6.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        if (field_7 && field_7.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field7\",\r\n                \"domainAttributeMappingSelectedCode\": field_7.value,\r\n                isMandatory: true\r\n            })\r\n        }\r\n        dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n    }\r\n\r\n    const resetHandler = async (e: any, type: any) => {\r\n        if (type === 'config') {\r\n            let selectedTemp = {}\r\n            if (userType === 'Client' || userType === 'Equabli') {\r\n                selectedTemp = {\r\n                    1: 'CAN',\r\n                    2: 'DT',\r\n                    3: 'PC',\r\n                    4: null,\r\n                    5: null,\r\n                    6: null,\r\n                }\r\n            } else {\r\n                selectedTemp = {\r\n                    1: 'CIDSC',\r\n                    2: 'DT',\r\n                    3: 'CAN',\r\n                    4: 'PC',\r\n                    5: null,\r\n                    6: null,\r\n                    7: null\r\n                }\r\n            }\r\n            configRef.current.conjunction.value = '_'\r\n            setFieldSelected(selectedTemp)\r\n            const tempMap = Object.values(selectedTemp)\r\n            let dataFieldOptionsFiltered = filteredOptions.map((fO: any) => {\r\n                if (tempMap.indexOf(fO.shortCode) === -1) {\r\n                    fO.selected = false\r\n                    fO.available = true\r\n                }\r\n                return fO\r\n            })\r\n            setFilteredOptions(dataFieldOptionsFiltered)\r\n            setTimeout(async () => {\r\n                configNameSaveRef.current.click()\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    const handleMove = async (field: any, direction: any) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        let temp = null\r\n        if (direction === 'down') {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field + 1]\r\n            fieldsSelectedTemp[field + 1] = temp\r\n        } else {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field - 1]\r\n            fieldsSelectedTemp[field - 1] = temp\r\n        }\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const handleSelection = (field: any, selected: any) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        fieldsSelectedTemp[field] = selected\r\n        const tempMap = Object.values(fieldsSelectedTemp)\r\n        let dataFieldOptionsFiltered = filteredOptions.map((fO: any) => {\r\n            if (selected === fO.shortCode) {\r\n                fO.available = false\r\n            }\r\n            if (!selected && (fieldsSelectedTemp[field] === fO.shortCode)) {\r\n                fO.available = true\r\n            }\r\n            if (tempMap.indexOf(fO.shortCode) === -1) {\r\n                fO.selected = false\r\n                fO.available = true\r\n            }\r\n            return fO\r\n        })\r\n        setFilteredOptions(dataFieldOptionsFiltered)\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const disableHandler = (fieldName: any) => {\r\n        let flag = false\r\n        if ((userType === 'Client' || userType === 'Equabli') && clientDefault.indexOf(fieldName) !== -1) {\r\n            flag = true\r\n        } else if (partnerDefault.indexOf(fieldName) !== -1) {\r\n            flag = true\r\n        }\r\n        return flag\r\n    }\r\n\r\n    const downloadProductCodes = (fileName: string) => {\r\n        let settings = {\r\n            fileName: fileName\r\n        }\r\n        let objToDownload: any = []\r\n        let tempJson: any = []\r\n        if (fileName === 'Product Codes') {\r\n            objToDownload = [\r\n                {\r\n                    sheet: \"Matrix\",\r\n                    columns: [\r\n                        { label: \"Product Code\", value: \"productCode\" },\r\n                        { label: \"Product Name\", value: \"productName\" }\r\n                    ],\r\n                    content: [],\r\n                }\r\n            ]\r\n            tempJson = productTypes && productTypes.map((data: any) => {\r\n                let obj: any = {\r\n                    \"productCode\": data.shortName,\r\n                    \"productName\": data.fullName\r\n                }\r\n                return obj\r\n            })\r\n        } else {\r\n            objToDownload = [\r\n                {\r\n                    sheet: \"Matrix\",\r\n                    columns: [\r\n                        { label: \"Document Code\", value: \"documentCode\" },\r\n                        { label: \"Document Name\", value: \"documentName\" }\r\n                    ],\r\n                    content: [],\r\n                }\r\n            ]\r\n            tempJson = documentTypes && documentTypes.map((data: any) => {\r\n                let obj: any = {\r\n                    \"documentCode\": data.shortCode,\r\n                    \"documentName\": data.documentType\r\n                }\r\n                return obj\r\n            })\r\n        }\r\n\r\n        objToDownload[0].content = tempJson\r\n        xlsx(objToDownload, settings)\r\n    }\r\n\r\n    const showExample = (json: any) => {\r\n        let index: number = 0\r\n        let documentNameGenerated = ''\r\n        for (let key in fieldsSelected) {\r\n            if (json[fieldsSelected[key]]) {\r\n                documentNameGenerated += `${index === 0 ? '' : json.conj}${json[fieldsSelected[key]]}`\r\n            }\r\n            index++\r\n        }\r\n        return documentNameGenerated\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            className='fileNamingConfigurationModal'\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add File Naming Configuration\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                {\r\n                    isLoading\r\n                    && <CgSpinnerAlt style={{ textAlign: 'center', width: '100%' }} className=\"spinner\" size={50} />\r\n                }\r\n                {\r\n                    !isLoading\r\n                    &&\r\n                    <Row style={{ margin: 0 }}>\r\n                        <Col lg={7} sm={12}>\r\n                            <br />\r\n                            <Form ref={configRef} onSubmit={(e) => handleSave(e, 'config')}>\r\n                                {\r\n                                    <Row>\r\n                                        <Col lg={12} md={12} className=\"no_padding\">\r\n                                            <Form.Group as={Col} className=\"mb-5\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <Form.Control\r\n                                                        as=\"input\"\r\n                                                        name=\"config_name\"\r\n                                                        defaultValue={details ? details.namingConfigGroupName : ''}\r\n                                                        className=\"select_custom\">\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Name</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                                {\r\n                                    <Row>\r\n                                        <Col lg={12} md={12} className=\"no_padding\">\r\n                                            <Form.Group as={Col} className=\"mb-5\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        name=\"conjunction\"\r\n                                                        defaultValue={details ? details.separatorCode : \"_\"}\r\n                                                        className=\"select_custom\">\r\n                                                        {\r\n                                                            dataConjunction &&\r\n                                                            dataConjunction.map((cR: any, index: number) => {\r\n                                                                return <option key={`cr_${index}`} value={cR.keyCode}>{cR.description}</option>\r\n                                                            })\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Conjunction / Concatenation Parameter</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                                {\r\n                                    fieldsSelected\r\n                                    && Object.keys(fieldsSelected).map((keyName, keyIndex) => {\r\n                                        return (\r\n                                            <Row key={`options_${keyIndex}`}>\r\n                                                <Col lg={12} md={12} className=\"no_padding\">\r\n                                                    <Form.Group as={Col} className=\"mb-5\">\r\n                                                        <Col md={12} sm={12}>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                name={`field_${keyIndex + 1}`}\r\n                                                                className=\"select_custom\"\r\n                                                                disabled={\r\n                                                                    disableHandler(fieldsSelected[keyName])\r\n                                                                }\r\n                                                                onChange={(e) => handleSelection(keyIndex + 1, e.target.value)}\r\n                                                                value={fieldsSelected[keyName] || ''}>\r\n                                                                {\r\n                                                                    !fieldsSelected[Number(keyName) + 1]\r\n                                                                    && <option></option>\r\n                                                                }\r\n                                                                {\r\n                                                                    (filteredOptions && filteredOptions.length > 0) &&\r\n                                                                    filteredOptions.map((cR: any, index: number) => {\r\n                                                                        return <option disabled={!cR.available} key={`cr_${index}`} value={cR.attributeCode}>\r\n                                                                            {cR.attributeName}\r\n                                                                        </option>\r\n                                                                    })\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                        <Form.Label className=\"label_custom white\">Field {keyIndex + 1}\r\n                                                            {\r\n                                                                (fieldsSelected[keyName] === 'PC' || fieldsSelected[keyName] === 'DT') &&\r\n                                                                <BsFillQuestionCircleFill size={14} style={{ marginLeft: '1rem', color: 'black', cursor: 'pointer' }} onClick={() => downloadProductCodes(fieldsSelected[keyName] === 'DT' ? 'Document Types' : 'Product Codes')} />\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                (fieldsSelected[keyName] === 'DGD') && <span className={Styles.date_format}>Format: DDMMYYYY</span>\r\n                                                            }\r\n                                                        </Form.Label>\r\n                                                        <div className={Styles.movement_group}>\r\n                                                            {\r\n                                                                keyIndex !== 0\r\n                                                                && fieldsSelected[keyName]\r\n                                                                && <HiArrowNarrowUp onClick={() => handleMove(keyIndex + 1, 'up')} />\r\n                                                            }\r\n                                                            {\r\n                                                                keyIndex !== (Object.keys(fieldsSelected).length - 1)\r\n                                                                && fieldsSelected[keyName]\r\n                                                                && fieldsSelected[Number(keyName) + 1]\r\n                                                                && <HiArrowNarrowDown onClick={() => handleMove(keyIndex + 1, 'down')} />\r\n                                                            }\r\n                                                        </div>\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>)\r\n                                    })\r\n                                }\r\n                                <Col sm={12}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} ref={configNameSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                    {/* <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler(e, 'config')}>Reset to Default</Button> */}\r\n                                </Col>\r\n                            </Form>\r\n                        </Col >\r\n                        <Col lg={5} sm={12} >\r\n                            <Row>\r\n                                <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Examples</h5></Col>\r\n                            </Row>\r\n                            <br />\r\n                            <Row style={{ padding: '1rem 2rem' }} className=\"form_container\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <span> Conjunction = </span><b>[{details ? details.separatorCode : \"_\"}]</b><br />\r\n                                        <span> Client Account Number =</span> <b>40001</b><br />\r\n                                        <span> Document Type = </span><b>Bill of Sales </b><br />\r\n                                        <span> Product Code = </span><b>Credit Card</b><br />\r\n                                        <span> Original Account Number = </span><b>250001</b><br />\r\n                                        <span> Document Generation Date = </span><b>20 December 2023</b><br />\r\n                                        <span> Document Name =</span> <b>Bills</b><br />\r\n                                    </li>\r\n                                </ul>\r\n                                <p className={Styles.document_name_example_p}>\r\n                                    {\r\n                                        showExample({\r\n                                            conj: details ? details.separatorCode : \"_\",\r\n                                            CAN: 40001,\r\n                                            DT: 'BS',\r\n                                            PC: 'CC',\r\n                                            OAN: 250001,\r\n                                            DGD: 20122023,\r\n                                            DN: 'Bills'\r\n                                        })\r\n                                    }\r\n                                </p>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row >\r\n                }\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst RetentionPolicy = ({ dispatch }: any) => {\r\n    const retentionSaveRef = useRef<any>();\r\n    const retentionRef = useRef<any>();\r\n    const [retention, setRetention] = useState<any>(60)\r\n    const [minMaxError, setMinMaxError] = useState<any>(false)\r\n\r\n    const {\r\n        isLoadingRetention,\r\n        dataUserRetentionPolicy,\r\n        dataRetentionPolicy,\r\n    } = useSelector((state: any) => ({\r\n        isLoadingRetention: state.fileNameConfig.userRetentionPolicy.loading,\r\n        dataUserRetentionPolicy: state.fileNameConfig.userRetentionPolicy.data,\r\n        dataRetentionPolicy: state.fileNameConfig.retentionPolicy.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(FileNameConfigActionCreator.getRetentionPolicy())\r\n        dispatch(FileNameConfigActionCreator.getUserRetentionPolicy())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (dataUserRetentionPolicy) {\r\n            setRetention(dataUserRetentionPolicy ? dataUserRetentionPolicy.configValSelectedCode : dataRetentionPolicy.defaultValue)\r\n        }\r\n    }, [dataUserRetentionPolicy])\r\n\r\n    const handleSave = () => {\r\n        if (Number(retention) < 60 || Number(retention) > 365) {\r\n            setMinMaxError(true)\r\n            return\r\n        } else {\r\n            setMinMaxError(false)\r\n            let configRequest = [{\r\n                \"configShortCode\": \"RP\",\r\n                \"configValShortCode\": retention,\r\n                \"orgTypeCode\": \"CT\"\r\n            }]\r\n            dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n        }\r\n    }\r\n\r\n    const resetHandler = () => {\r\n        setRetention(60)\r\n        setTimeout(() => {\r\n            retentionSaveRef.current.click()\r\n        }, 0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoadingRetention && <Row style={{ margin: 0 }} className=\"form_container\">\r\n                    <Col lg={12} sm={12}>\r\n                        <Row>\r\n                            <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Document Retention Policy</h5></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <br />\r\n                        <Form ref={retentionRef} onSubmit={(e) => handleSave()}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Row>\r\n                                            <Col md={11} sm={11}>\r\n                                                <Form.Control\r\n                                                    className=\"select_custom\"\r\n                                                    type=\"number\"\r\n                                                    name=\"retention_policy\"\r\n                                                    onChange={(e) => {\r\n                                                        setRetention(e.target.value)\r\n                                                    }}\r\n                                                    value={retention} />\r\n                                            </Col>\r\n                                            <Col md={1} style={{ display: 'flex', alignItems: 'center' }}><p style={{ margin: 0 }}>Days</p></Col>\r\n                                            <span style={{ color: 'red', marginLeft: \"1rem\" }}><small>{minMaxError ? 'Retention Policy Should be between 60 to 365 days' : ''}</small></span>\r\n                                        </Row>\r\n                                        <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Retain document after closure of account till</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} ref={retentionSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler()}>Reset to Default</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst DocumentPolicy = ({ dispatch }: any) => {\r\n    const otherSaveRef = useRef<any>()\r\n    const [modeSelected, setModeSelected] = useState('KBF');\r\n    const [mode, setMode] = useState([\r\n        {\r\n            keycode: 'KBF',\r\n            keyvalue: 'Keep Both Files'\r\n        },\r\n        {\r\n            keycode: 'RE',\r\n            keyvalue: 'Replace Existing'\r\n        }\r\n    ])\r\n\r\n    const {\r\n        isLoadingDocumentPolicy,\r\n        dataDocumentPolicy,\r\n        dataUserDocumentPolicy,\r\n    } = useSelector((state: any) => ({\r\n        isLoadingDocumentPolicy: state.fileNameConfig.userDocumentPolicy.loading,\r\n        dataUserDocumentPolicy: state.fileNameConfig.userDocumentPolicy.data,\r\n        dataDocumentPolicy: state.fileNameConfig.documentPolicy.data,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (dataUserDocumentPolicy) {\r\n            setModeSelected((dataUserDocumentPolicy ? dataUserDocumentPolicy.configValSelectedCode : \"KBF\"))\r\n        }\r\n    }, [dataUserDocumentPolicy])\r\n\r\n    useEffect(() => {\r\n        dispatch(FileNameConfigActionCreator.getDocumentPolicy())\r\n        dispatch(FileNameConfigActionCreator.getUserDocumentPolicy())\r\n    }, [])\r\n\r\n    const resetHandler = () => {\r\n        setModeSelected('KBF')\r\n        setTimeout(() => {\r\n            otherSaveRef.current.click()\r\n        }, 0)\r\n    }\r\n    const handleSave = () => {\r\n        let configRequest = [{\r\n            \"configShortCode\": \"DP\",\r\n            \"configValShortCode\": modeSelected,\r\n            \"orgTypeCode\": \"CT\"\r\n        }]\r\n        dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                !isLoadingDocumentPolicy && <Row style={{ margin: 0 }} className=\"form_container\">\r\n                    <Col lg={12} sm={12}>\r\n                        <Row>\r\n                            <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Other Configuration</h5></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <br />\r\n                        <Form onSubmit={(e) => handleSave()}>\r\n                            <Row>\r\n                                <Col lg={12} md={6}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Row>\r\n                                            <Col md={12} sm={12}>\r\n                                                {\r\n                                                    mode && mode.map((m: any, index: number) => (\r\n                                                        <Form.Check\r\n                                                            key={`default-${index}`}\r\n                                                            inline\r\n                                                            type=\"radio\"\r\n                                                            onChange={(e: any) => {\r\n                                                                setModeSelected(e.target.value)\r\n                                                            }}\r\n                                                            checked={m.keycode == modeSelected}\r\n                                                            value={m.keycode}\r\n                                                            name='mode'\r\n                                                            label={m.keyvalue}\r\n                                                        />\r\n                                                    ))\r\n                                                }\r\n                                            </Col>\r\n                                            <span style={{ color: 'red', marginLeft: \"1rem\" }}><small></small></span>\r\n                                        </Row>\r\n                                        <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Incase of Document Duplication</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} className=\"mt-4\" style={{ marginLeft: '1rem' }}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} ref={otherSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler()}>Reset to Default</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentGeneralConfiguration","import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a: any, b: any) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes()\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes()\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"movement_group\":\"User_movement_group__rXgoz\",\"button_center\":\"User_button_center__6vxGS\",\"search_input\":\"User_search_input__T8WWv\",\"search\":\"User_search__MehqM\",\"advanceSearch\":\"User_advanceSearch__nPdKC\",\"my_document_search\":\"User_my_document_search__5paaV\",\"collapse_summary\":\"User_collapse_summary__edJ8p\",\"advance_search\":\"User_advance_search__xOTlC\",\"required_documents\":\"User_required_documents__ITyrR\",\"document_name_example_p\":\"User_document_name_example_p__Dxc5b\",\"date_format\":\"User_date_format__VX8lq\"};"],"names":["_ref","_ref$size","size","_jsx","className","children","_jsxs","BsFolder2Open","FileNameConfigActionCreator","dispatch","type","Conjunction","CONJUNCTION_REQUEST","commonServices","getLookupValues","lookupGroupKeyValue","then","user","CONJUNCTION_SUCCESS","payload","success","error","CONJUNCTION_FAILURE","failure","FieldOptions","FIELD_OPTIONS_REQUEST","fileNameConfigService","getConfig","FIELD_OPTIONS_SUCCESS","FIELD_OPTIONS_FAILURE","RetentionPolicy","RETENTION_POLICY_REQUEST","RETENTION_POLICY_SUCCESS","RETENTION_POLICY_FAILURE","DocumentPolicy","DOCUMENT_POLICY_REQUEST","DOCUMENT_POLICY_SUCCESS","DOCUMENT_POLICY_FAILURE","UserFileNamingConfig","USER_FILE_NAMING_CONFIG_REQUEST","getUserConfig","fileNameConfig","userNameConfig","USER_FILE_NAMING_CONFIG_SUCCESS","USER_FILE_NAMING_CONFIG_FAILURE","UserListOfUserConfig","USER_LIST_OF_FILE_NAMING_CONFIG_REQUEST","getListOfUserConfig","list","USER_LIST_OF_FILE_NAMING_CONFIG_SUCCESS","USER_LIST_OF_FILE_NAMING_CONFIG_FAILURE","UserRetentionPolicy","USER_RETENTION_POLICY_REQUEST","USER_RETENTION_POLICY_SUCCESS","USER_RETENTION_POLICY_FAILURE","UserDocumentPolicy","USER_DOCUMENT_POLICY_REQUEST","USER_DOCUMENT_POLICY_SUCCESS","USER_DOCUMENT_POLICY_FAILURE","requestBody","SaveUserConfiguration","SAVE_USER_CONFIG_REQUEST","saveUserConfiguration","SAVE_USER_CONFIG_SUCCESS","SAVE_USER_CONFIG_FAILURE","finally","SAVE_USER_CONFIG_RESET","title","prevailOnUnmount","arguments","length","undefined","defaultTitle","useRef","document","useEffect","current","ListOfUserFileNamingConfiguration","forwardRef","ref","setConfigurationDetails","setShowConfig","_useSelector2","useSelector","state","confListLoading","fileNamingConfigList","loading","confListError","confList","data","useImperativeHandle","refreshData","formatConfiguration","confArr","separatorCode","confString","index","domainAttributeMappingSelectedCode","concat","attributeName","trim","Row","style","margin","Col","sm","textAlign","marginBottom","Button","variant","onClick","lineHeight","backgroundColor","NoRecord","Table","striped","hover","responsive","color","width","map","conf","namingConfigGroupName","userDocConfig","minWidth","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","id","FiEdit2","cursor","AiOutlineDelete","FileNamingModal","_ref2","onHide","details","userType","clientDefault","partnerDefault","configRef","configNameSaveRef","_useState7","useState","_useState8","_slicedToArray","filteredOptions","setFilteredOptions","_useState9","_useState10","fieldsSelected","setFieldSelected","_useSelector3","isLoading","conjunction","dataConjunction","dataFieldOptions","fieldOptions","dataFileNamingConfig","fileNamingConfig","dataUserConjunction","userConjunction","productTypes","types","productType","documentTypes","documentType","TypesActionCreator","getProductTypes","getDocumentTypes","handleDefaultAndSavedSelection","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fileNameConfig","fieldFinal","selectionFinal","wrap","_context","prev","next","sent","stop","apply","handleMove","_ref6","_callee4","field","direction","fieldsSelectedTemp","temp","_context4","Object","assign","_x3","_x4","disableHandler","fieldName","flag","indexOf","Modal","centered","animation","Header","closeButton","Title","Body","CgSpinnerAlt","lg","Form","onSubmit","e","preventDefault","_configRef$current","config_name","field_1","field_2","field_3","field_4","field_5","field_6","field_7","configRequest","value","push","isMandatory","handleSave","md","Group","as","Control","name","defaultValue","Label","cR","keyCode","description","keys","keyName","keyIndex","disabled","onChange","selected","tempMap","values","dataFieldOptionsFiltered","fO","shortCode","available","handleSelection","target","Number","attributeCode","BsFillQuestionCircleFill","marginLeft","fileName","settings","objToDownload","tempJson","sheet","columns","label","content","shortName","fullName","xlsx","downloadProductCodes","Styles","date_format","movement_group","HiArrowNarrowUp","HiArrowNarrowDown","padding","document_name_example_p","json","documentNameGenerated","key","conj","showExample","CAN","DT","PC","OAN","DGD","DN","_ref7","retentionSaveRef","retentionRef","_useState11","_useState12","retention","setRetention","_useState13","_useState14","minMaxError","setMinMaxError","_useSelector4","isLoadingRetention","userRetentionPolicy","dataUserRetentionPolicy","dataRetentionPolicy","retentionPolicy","configValSelectedCode","_Fragment","display","alignItems","left","setTimeout","click","_ref8","otherSaveRef","_useState15","_useState16","modeSelected","setModeSelected","_useState17","keycode","keyvalue","_useState18","mode","_useSelector5","isLoadingDocumentPolicy","userDocumentPolicy","dataUserDocumentPolicy","dataDocumentPolicy","documentPolicy","m","Check","inline","checked","UseDocumentTitle","addToast","useToasts","useDispatch","_useState","_useState2","setUserType","_useState3","_useState4","showConfig","_useState5","_useState6","configurationDetails","userService","getUser","recordSource","_useSelector","saveSuccess","saveConfig","saveError","createMessage","appearance","autoDismiss","getDocTypes","DocTypes","DOC_TYPES_REQUEST","getFilterTypes","compliance","sort","a","b","DOC_TYPES_SUCCESS","DOC_TYPES_FAILURE","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","_excluded","React","bsPrefix","bordered","borderless","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}