{"version":3,"sources":["containers/DocumentManager/DocumentManager.module.sass","store/actions/common/types.actions.tsx","components/modal/DeleteConfirm.tsx","components/Table/pagination.tsx","components/Table/Table.tsx","components/modal/DocumentUpload.tsx","store/actions/downloadHistory.actions.tsx","store/actions/myDocuments.actions.tsx","containers/DocumentManager/MyDocuments.tsx","store/actions/sentDocumentRequest.actions.tsx","store/actions/receivedDocumentRequest.actions.tsx","containers/DocumentManager/ReceivedDocumentRequests.tsx","store/actions/user.actions.tsx","containers/DocumentManager/SentDocumentRequests.tsx","containers/DocumentManager/DownloadHistory.tsx","store/actions/summary.actions.tsx","containers/DocumentManager/Documents.tsx"],"names":["module","exports","TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","userType","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","DeleteConfirm","onHide","show","confirmDelete","text","actionText","details","deleteRef","useRef","useEffect","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","documentType","productName","requestedFrom","Footer","variant","ref","onClick","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","useState","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","max","min","style","marginTop","Row","Col","md","xs","First","disabled","Prev","Next","Last","TableComponent","data","isLoading","map","onPaginationChange","totalCount","isPagination","actionArray","setCurrentPage","handleNavigate","colorArray","currencyColumns","sorting","sortElement","sortType","addEditArray","tableAction","parentComponent","loadingHeight","history","searchCriteria","useHistory","isCheckAll","setIsCheckAll","isCheck","setIsCheck","headers","setHeaders","pageSize","setPageSize","setShow","pageSizes","length","Object","keys","servicingRequestIndicator","header","d","position","left","requestStatus","OverlayTrigger","placement","delay","hide","overlay","Tooltip","color","ragStatus","priorityIndicator","priorityExecution","sortBy","descElements","document","querySelectorAll","ascElements","Array","from","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","index","pathname","search","clientId","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","padding","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","e","target","checked","filter","item","dueDateHandler","fulfillment","Date","dueDate","tableHeaderHandler","lineHeight","backgroundColor","Form","Control","onChange","li","folderName","cursor","indexOf","edit","view","minWidth","openSolModal","tableBodyHandler","zIndex","includes","index2","slaStatus","checkType","display","alignItems","contacts","contact","name","phone","sharedWith","sW","email","marginLeft","charAt","handleDocumentName","href","justifyContent","Button","recordStatusVal","margin","delete","update","execute","undefined","upload","download","share","Group","as","Label","column","sm","value","defaultValue","Table","striped","bordered","hover","responsive","page","DocumentUpload","Styles","accountId","addToast","useToasts","useDispatch","files","state","setState","zipTargetFiles","zipFile","file","zip","require","matrixFile","generateAsync","content","File","FileUploadHook","fileToUpload","React","dragActive","setDragActive","inputRef","setFiles","setUserLoggedIn","formSubmitted","setFormSubmitted","fileLengthSingle","fileSize","formError","setFormError","user","userService","getUser","validateUpload","formObj","formIsValid","key","k","JSON","stringify","uploadFile","onSubmitHandler","preventDefault","zippedFile","console","log","config","API_URL","process","formData","FormData","append","axiosCustom","post","response","urls","handleResponse","fileUrl","responseFilePath","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","handleFiles","tempFiles","assign","onButtonClick","current","click","downloadSampleFile","sampleFile","axios","get","responseType","blob","Blob","saveAs","list_upload_container","list_upload","splice","deleteHandler","onDragEnter","onSubmit","accept","multiple","fontSize","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","details_warning","width","DownloadHistoryActionCreator","getDownloadHistory","requestPayload","GetDownloadHistory","GET_DOWNLOAD_HISTORY_REQUEST","downloadHistory","sent","GET_DOWNLOAD_HISTORY_SUCCESS","GET_DOWNLOAD_HISTORY_FAILURE","saveDownloadHistory","SaveDownloadHistory","SAVE_DOWNLOAD_HISTORY_REQUEST","SAVE_DOWNLOAD_HISTORY_SUCCESS","SAVE_DOWNLOAD_HISTORY_FAILURE","finally","SAVE_DOWNLOAD_HISTORY_RESET","deleteDownloadHistory","DeleteDownloadHistory","DELETE_DOWNLOAD_HISTORY_REQUEST","DELETE_DOWNLOAD_HISTORY_SUCCESS","DELETE_DOWNLOAD_HISTORY_FAILURE","DELETE_DOWNLOAD_HISTORY_RESET","MyDocumentsActionCreator","getMyDocumentFolders","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","MY_DOCUMENTS_FOLDER_SUCCESS","MY_DOCUMENTS_FOLDER_FAILURE","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","resetDocumentList","MY_DOCUMENTS_LIST_RESET","tenuresInit","statusCode","status","MyDocuments","tenures","showAdvanceSearch","setShowAdvanceSearch","setSortElement","setSortType","pageCount","setPageCount","uploadDocModal","setUploadDocModal","useSelector","folders","myDocuments","loading","pageNumber","orgType","search_input","my_document_search","onMouseDown","placeholder","advanceSearch","advance_search","lg","tenure","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","button_center","showDocumentListPage","downloadDocument","handlePagination","SentDocumentRequestActionCreator","GetSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequestService","getSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_SUCCESS","GET_SENT_DOCUMENT_REQUEST_FAILURE","SentDocumentRequest","SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequest","SENT_DOCUMENT_REQUEST_SUCCESS","SENT_DOCUMENT_REQUEST_FAILURE","SENT_DOCUMENT_REQUEST_RESET","DeleteDocumentRequest","DELETE_DOCUMENT_REQUEST_REQUEST","deleteDocumentRequest","DELETE_DOCUMENT_REQUEST_SUCCESS","DELETE_DOCUMENT_REQUEST_FAILURE","DELETE_DOCUMENT_REQUEST_RESET","ReceiveDocumentRequestActionCreator","GetReceiveDocumentRequest","GET_RECEIVE_DOCUMENT_REQUEST_REQUEST","receiveDocumentRequest","getReceiveDocumentRequest","GET_RECEIVE_DOCUMENT_REQUEST_SUCCESS","GET_RECEIVE_DOCUMENT_REQUEST_FAILURE","ReceivedDocumentRequests","showDeleteConfirm","setShowDeleteConfirm","setDetails","receiveDocumentRequests","documentTypes","loadingDocumentTypes","errorDocumentTypes","downloadRequest","downloadRequestSuccess","downloadRequestError","deleteRequest","deleteRequestSuccess","deleteRequestError","handleDetails","UserActionCreator","ConnectedUsers","CONNECTED_USER_REQUEST","getConnectedUsers","users","CONNECTED_USER_SUCCESS","CONNECTED_USER_FAILURE","RequestNewDocument","sendRequestRef","defaultSelect","usersSelected","setUserSelected","Modal","Container","center_document","originalAccountNumber","docTypeCode","handleRequest","labelKey","defaultSelected","allowNew","newSelectionPrefix","selected","selectedUpdated","s","firstName","principleId","orgCode","options","dT","shortCode","SentDocumentRequests","aRef","showBulkRequest","setShowBulkRequest","showRequestNewDocument","setShowRequestNewDocument","sentDocumentRequests","sendRequest","sendRequestSuccess","sendRequestError","downloadHandler","getSignedURL","filePath","documentName","DownloadHistory","saveDownload","saveDownloadSuccess","saveDownloadError","deleteDownloadHistorySuccess","deleteDownloadHistoryError","documentsize","downloadDate","downloadStatus","pause","restartDownload","SummaryActionCreator","RequestedDocumentSummary","REQUESTED_DOCUMENT_SUMMARY_REQUEST","summaryService","getReceiveSummary","REQUESTED_DOCUMENT_SUMMARY_SUCCESS","REQUESTED_DOCUMENT_SUMMARY_FAILURE","SentDocumentSummary","SENT_DOCUMENT_SUMMARY_REQUEST","getSentSummary","SENT_DOCUMENT_SUMMARY_SUCCESS","SENT_DOCUMENT_SUMMARY_FAILURE","ChartJS","register","ArcElement","Legend","ChartDataLabels","productsInit","portfolioInit","usersInit","documentCoverageArr","title","accountsDone","accountsTotal","cutout","plugins","datalabels","legend","DATA_REQUESTED","labels","datasets","label","borderColor","borderWidth","DATA_SENT","Documents","location","portfolios","documentCoverage","collapse","setCollapse","selectedTab","setSelectedTab","dataRequested","setDataRequested","dataSent","setDataSent","requestedSummary","summary","sentSummary","errorSent","loadingSent","loadingRequest","errorRequest","values","dataRequestedTemp","dataSentTemp","tab","memoRequested","memoSent","paddingRight","collapse_summary","inner_document_summary","portfolio","product","progress_container_outer","dC","progress_container","ProgressTitle","ProgressBar","progressbar","now","ProgressDesc","clickable","chart_container","right_border","Tabs","activeKey","fill","onSelect","Tab","eventKey"],"mappings":"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","file":"static/js/7.ad61a010.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\",\"list_upload_container\":\"DocumentManager_list_upload_container__1v3Pa\",\"list_upload\":\"DocumentManager_list_upload__2y6p7\"};","import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes(userType)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes(userType)\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button, Dropdown\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye, AiFillFileExclamation, AiOutlineUpload } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    searchCriteria\r\n}: any) => {\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [show, setShow] = useState(false)\r\n    const pageSizes = [10, 50, 100];\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            // var allHeaders: any = []\r\n            // for (let i in data) {\r\n            //     allHeaders = [...allHeaders, ...(Object.keys(data[i]))]\r\n            // }\r\n            // var uniqueHeaders: any = Array.from(new Set(allHeaders))\r\n            setHeaders(Object.keys(map));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data]);\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (\r\n                    parentComponent === 'myDocuments'\r\n                    || parentComponent === 'sentDocumentRequest'\r\n                    || parentComponent === 'receiveDocumentRequest'\r\n                )\r\n                && <>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Export</Button>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Show/Hide Columns</Button>\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId, data) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds, data) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId, index) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts) => {\r\n        return (\r\n            contacts && contacts.map((contact, index) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service, index) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(data.map(li => li.folderName));\r\n        if (isCheckAll) {\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        const { id, checked } = e.target;\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data) => {\r\n        if (parentComponent === 'sentDocumentRequest' || parentComponent === 'receiveDocumentRequest') {\r\n            if (data.requestStatus === 'Open') {\r\n                return '#fbbdc3'\r\n            } else if (!data.fulfillment && new Date(data.dueDate) > new Date()) {\r\n                return '#b2e7d0'\r\n            } else if (data.requestStatus === 'Fulfilled') {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith) => {\r\n        if (!sharedWith) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW, index) => {\r\n                            return <OverlayTrigger\r\n                                key={`sw_${index}`}\r\n                                placement=\"bottom\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={(\r\n                                    <Tooltip id=\"tooltip-error\">\r\n                                        {sW.name} - {sW.email}\r\n                                    </Tooltip>\r\n                                )}\r\n                            >\r\n                                <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW.name.charAt(0)}</span>\r\n                            </OverlayTrigger>\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleDocumentName = (data) => {\r\n        if (data['documentName']) {\r\n            return <td>\r\n                <div style={{\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <BsFileEarmarkText size={24} />\r\n                    <span>\r\n                        {data['documentName']}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n        } else {\r\n            return <td\r\n                className='center_align_td'\r\n            >\r\n                <AiFillFileExclamation\r\n                    size={24}\r\n                />\r\n                {parentComponent === 'sentDocumentRequest' ? 'Pending' : 'Not Provided Yet'}\r\n            </td>\r\n        }\r\n    }\r\n\r\n    const tableHeaderHandler = () => {\r\n        return <thead>\r\n            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                {(parentComponent === 'myRequests'\r\n                    || parentComponent === 'pendingForApproval'\r\n                    || parentComponent === 'pendingMyApproval'\r\n                ) && <th>#</th>}\r\n                {\r\n                    (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                    && <th className=\"span1\">\r\n                        <div\r\n                            className=\"table_header_container\"\r\n                            style={\r\n                                {\r\n                                    'minWidth': '20px',\r\n                                    'height': '30px',\r\n                                    'alignItems': 'center'\r\n                                }\r\n                            }>\r\n                            <Form.Control type='Checkbox' onChange={() => handleAllSelect()} style={{ cursor: 'pointer' }}></Form.Control>\r\n                        </div>\r\n                    </th>\r\n                }\r\n                {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    headers && headers.map((header, index) => {\r\n                        if (header !== 'clientId'\r\n                            && header !== 'recordStatusVal'\r\n                            && header !== 'batchSchedulerGroupId'\r\n                            && header !== 'logDescription'\r\n                            && header !== 'queueId'\r\n                            && header !== 'slaStatus'\r\n                            && header !== 'alertDefinition'\r\n                            && header !== 'RFILink'\r\n                            && header !== 'auditLink'\r\n                        ) {\r\n                            return (\r\n                                <th\r\n                                    className=\"span1\"\r\n                                    key={`header_${index}`}\r\n                                >\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                    ? '300px'\r\n                                                    : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                            }\r\n                                        }>\r\n                                        <div>\r\n                                            {map[header] ? map[header] : header}\r\n                                        </div>\r\n                                        {\r\n                                            sorting\r\n                                            && (\r\n                                                <div className=\"sorting\">\r\n                                                    <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                    <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </th>\r\n                            );\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    ((typeof addEditArray.edit !== 'undefined')\r\n                        || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                    && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                }\r\n                {\r\n                    ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                    && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                }\r\n                {\r\n                    (\r\n                        parentComponent === 'myDocuments'\r\n                        || parentComponent === 'documents'\r\n                        || parentComponent === 'sentDocumentRequest'\r\n                        || parentComponent === 'receiveDocumentRequest'\r\n                        || parentComponent === 'downloadHistory'\r\n                    )\r\n                    && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n    }\r\n\r\n    const tableBodyHandler = () => {\r\n        return <tbody>\r\n            {\r\n                data && data.map((d: any, index: number) => (\r\n                    <tr\r\n                        key={`data_${index}`} style={{\r\n                            lineHeight: '30px',\r\n                            textAlign: 'center',\r\n                            position: 'relative',\r\n                            zIndex: 9,\r\n                            backgroundColor: dueDateHandler(d)\r\n                        }}\r\n\r\n                    >\r\n                        {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                        {(parentComponent === 'myRequests'\r\n                            || parentComponent === 'pendingForApproval'\r\n                            || parentComponent === 'pendingMyApproval'\r\n                        ) && <th>{index + 1}</th>}\r\n                        {\r\n                            (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                            && <th className=\"span1\">\r\n                                <div\r\n                                    className=\"table_header_container\"\r\n                                    style={\r\n                                        {\r\n                                            'minWidth': '20px',\r\n                                            'height': '30px',\r\n                                            'alignItems': 'center'\r\n                                        }\r\n                                    }>\r\n                                    <Form.Control type='Checkbox' id={d.folderName} checked={isCheck.includes(d.folderName)} style={{ cursor: 'pointer' }} onChange={handleClick} ></Form.Control>\r\n                                </div>\r\n                            </th>\r\n                        }\r\n                        {\r\n                            // eslint-disable-next-line array-callback-return\r\n                            headers.map((header: any, index2) => {\r\n                                if (header !== 'clientId'\r\n                                    && header !== 'recordStatusVal'\r\n                                    && header !== 'batchSchedulerGroupId'\r\n                                    && header !== 'logDescription'\r\n                                    && header !== 'slaStatus'\r\n                                    && header !== 'queueId'\r\n                                    && header !== 'alertDefinition'\r\n                                    && header !== 'RFILink'\r\n                                    && header !== 'auditLink'\r\n                                ) {\r\n                                    if (actionArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={\r\n                                                    {\r\n                                                        background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                        color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                    }\r\n                                                }\r\n                                                key={`data_2${index2}`}\r\n                                                className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            >\r\n                                                {\r\n                                                    servicingRequestIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    priorityIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <AiFillFolder size={20} />\r\n                                                        <span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\"\r\n                                                        >\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                    <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                        {d[header]}\r\n                                                    </span>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    if (header === 'isValidationRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isExcluded') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Y' : 'N'}</td>;\r\n                                    }\r\n                                    if (header === 'isAdditionalTimeRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'keyContacts') {\r\n                                        return <td key={`data_2${index2}`}>{keyContactsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === 'servicesOffered'\r\n                                        || header === \"accountTypeServiced\"\r\n                                    ) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                        || header === 'productType')) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"capacity\") {\r\n                                        return <td key={`data_2${index2}`}>{capacityHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"commissionRate\") {\r\n                                        return <td key={`data_2${index2}`}>{commissionRateHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"compliance\") {\r\n                                        return <td key={`data_2${index2}`}>{complianceHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                        return <td key={`data_2${index2}`}>{collectionsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"sharedWith\") {\r\n                                        return <td key={`data_2${index2}`}>{handleSharedWith(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"preview\") {\r\n                                        return <td key={`data_2${index2}`}><BsFileEarmarkText size={24} /></td>\r\n                                    }\r\n                                    if (header === 'upload') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudUpload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'download') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudDownload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'fileName') {\r\n                                        return handleDocumentName(d)\r\n                                    }\r\n                                    if (!d[header]) {\r\n                                        return <td key={`data_2${index2}`}><b>-</b></td>\r\n                                    }\r\n                                    if (header === \"partnerStatus\") {\r\n                                        return <td key={`data_2${index2}`} style={{ textAlign: 'left' }}>\r\n                                            <span style={{\r\n                                                backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                color: 'white',\r\n                                                padding: '.3rem 1rem',\r\n                                                borderRadius: '.3rem'\r\n                                            }}>{d[header]}</span><br />\r\n                                            {\r\n                                                (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                && <>\r\n                                                    <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                    <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                </>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    if (header === 'executionStatusVal') {\r\n                                        return (<td >\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                {d[header]}\r\n                                                <OverlayTrigger\r\n                                                    placement=\"right\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            {d['logDescription']}\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>)\r\n                                    }\r\n                                    if (header === 'complianceIds') {\r\n                                        return (\r\n                                            <td className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                {complianceSplitter(d[header], d)}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    if (colorArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={{ backgroundColor: `${d[header]}` }}\r\n                                                key={`data_2${index2}`}\r\n                                            >{''}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            key={`data_2${index2}`}\r\n                                        >\r\n                                            {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                            {' '}\r\n                                            {d[header]}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        {\r\n                            ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                            && <td key={`data_${index}`} className=\"span1\" >\r\n                                <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                            </td>\r\n                        }\r\n                        {\r\n                            typeof addEditArray.edit !== 'undefined'\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BiPencil onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            View\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsEye onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <CgTrash onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Disabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to unlock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Enabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to lock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                (\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    || d.recordStatusVal === \"Disabled\"\r\n                                                )\r\n                                                && (typeof addEditArray.execute !== 'undefined')\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Execute\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Deleted\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            typeof addEditArray.view !== 'undefined'\r\n                            && d['alertDefinition'] !== undefined\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            (\r\n                                parentComponent === 'myDocuments'\r\n                                || parentComponent === 'documents'\r\n                                || parentComponent === 'sentDocumentRequest'\r\n                                || parentComponent === 'receiveDocumentRequest'\r\n                                || parentComponent === 'downloadHistory'\r\n                            )\r\n                            && <td key={`data_${index}`} className='span1' style={{ minWidth: '140px', textAlign: 'center' }}>\r\n                                {\r\n                                    typeof addEditArray.upload !== 'undefined'\r\n                                    && !d[\"documentName\"]\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Upload\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudUpload onClick={() => addEditArray.upload(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.view !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.download !== 'undefined'\r\n                                    && (\r\n                                        (parentComponent === 'receiveDocumentRequest' && d[\"documentName\"])\r\n                                        || parentComponent === 'myDocuments'\r\n                                        || parentComponent === 'documents'\r\n                                        || parentComponent === 'sentDocumentRequest'\r\n                                    )\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload\r\n                                                style={{\r\n                                                    color: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"#bebebe\" : \"black\",\r\n                                                    cursor: 'pointer'\r\n                                                }}\r\n                                                onClick={() => addEditArray.download(d)} size={20} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.share !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.delete !== 'undefined'\r\n                                    &&\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            {\r\n                tableHeaderHandler()\r\n            }\r\n            {\r\n                tableBodyHandler()\r\n            }\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <th>No Records</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        <div className={`table_loading ${loadingHeight ? null : 'no_min_height'}`} >\r\n            <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        </div >\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {totalCount > 0 ? tableHandler() : emptyTable()}\r\n            </Table>\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { BsFileEarmarkPdf, BsFillFileEarmarkImageFill } from 'react-icons/bs';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\nimport { SiMicrosoftexcel } from 'react-icons/si';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, dateFormatterForRequestFileUpload, handleResponse } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\n\r\nconst FileUploadHook = (files) => {\r\n    const [state, setState] = useState<any>(null)\r\n    const zipTargetFiles: any = async (files) => {\r\n        let zipFile: any = null\r\n        if (files.length === 1) {\r\n            setState({\r\n                zipFile,\r\n                file: files[0]\r\n            })\r\n        } else {\r\n            const zip = require('jszip')();\r\n            let matrixFile: any = null\r\n            for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name === 'matrix.xlsx') {\r\n                    matrixFile = files[i]\r\n                }\r\n                if (files[i].type === 'application/zip' || files[i].type === \"application/x-zip-compressed\") {\r\n                    zipFile = files[i]\r\n                }\r\n                if (!zipFile && files[i].name !== 'matrix.xlsx') {\r\n                    zip.file(files[i].name, files[i]);\r\n                }\r\n            }\r\n            if (!zipFile) {\r\n                zip.generateAsync({ type: \"blob\" })\r\n                    .then((content) => {\r\n                        return new File([content], 'new.zip', { type: 'application/x-zip-compressed' })\r\n                    })\r\n                    .then((file) => {\r\n                        setState({\r\n                            matrixFile,\r\n                            file: file\r\n                        });\r\n                    })\r\n            } else {\r\n                setState({\r\n                    matrixFile,\r\n                    file: zipFile\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        state,\r\n        {\r\n            zipTargetFiles\r\n        }\r\n    ];\r\n}\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent, search, details = null }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n    const [fileToUpload, { zipTargetFiles }] = FileUploadHook(null)\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n    const [files, setFiles] = useState<any>([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        fileLengthSingle: false,\r\n        fileSize: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false\r\n        }\r\n        if (formObj.file === 0) {\r\n            error['fileLengthSingle'] = true\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileToUpload && JSON.stringify(fileToUpload) !== \"{}\") {\r\n            uploadFile()\r\n        }\r\n    }, [fileToUpload])\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        if (validateUpload({\r\n            file: files.length\r\n        })) {\r\n            setFormSubmitted(true)\r\n            const zippedFile = zipTargetFiles(files)\r\n            console.log(zippedFile)\r\n        }\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        let API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload`\r\n        const { file, matrixFile } = fileToUpload\r\n        let formData: any = new FormData()\r\n        try {\r\n            if (file.type === 'application/zip' || file.type === 'application/x-zip-compressed') {\r\n                formData.append(\"files\", file);\r\n                formData.append(\"files\", matrixFile)\r\n                formData.append(\"fileUploadJson\", JSON.stringify({ \"bulkType\": \"upload\", \"orgType\": 'CT' }))\r\n                API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const urls = handleResponse(response)\r\n                const responseFilePath = await axiosCustom.post(`${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk/read`,\r\n                    {\r\n                        \"orgType\": \"CT\",\r\n                        \"excelUrl\": urls.response.fileUrl[1],\r\n                        \"zipUrl\": urls.response.fileUrl[0],\r\n                        \"bulkType\": \"upload\"\r\n                    }\r\n                )\r\n                const data = handleResponse(responseFilePath)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } else {\r\n                formData.append(\"file\", file);\r\n                formData.append(\"orgType\", \"CT\")\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const data = handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            }\r\n            search()\r\n        } catch (error: any) {\r\n            setFormSubmitted(false)\r\n            addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFiles = (file) => {\r\n        let tempFiles = Object.assign([], files)\r\n        if (tempFiles.length === 0) {\r\n            tempFiles = Array.from(file)\r\n        } else {\r\n            tempFiles = [...tempFiles, ...Array.from(file)]\r\n        }\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let tempFiles = Object.assign([], files)\r\n        tempFiles.splice(index, 1);\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    const downloadSampleFile = () => {\r\n        let sampleFile = ''\r\n        if (parentComponent === 'myDocument') {\r\n            sampleFile = \"./sample_file_upload.xlsx\"\r\n        } else {\r\n            sampleFile = \"./sample_file_fulfill.xlsx\"\r\n        }\r\n        console.log(sampleFile)\r\n        axios.get(sampleFile, { responseType: 'arraybuffer' })\r\n            .then((response) => {\r\n                var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                saveAs(blob, 'fixi.xlsx');\r\n            });\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {\r\n                        (\r\n                            parentComponent === 'myDocument'\r\n                            || parentComponent === 'documents'\r\n                        )\r\n                            ? \"Upload New Document\"\r\n                            :\r\n                            (parentComponent === 'sentDocumentRequest'\r\n                                ? 'Upload file for bulk document request'\r\n                                : '')\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <div className={Styles.list_upload_container}>\r\n                            {\r\n                                files && files.length > 0 && files.map((file, index) => {\r\n                                    return <div className={Styles.list_upload} key={`file_${index}`}>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                {\r\n                                                    file.type === 'application/pdf'\r\n                                                    && <BsFileEarmarkPdf />\r\n                                                }\r\n                                                {\r\n                                                    (file.type === 'image/png' || file.type === 'image/jpeg')\r\n                                                    && <BsFillFileEarmarkImageFill />\r\n                                                }\r\n                                                {\r\n                                                    file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                                                    && <SiMicrosoftexcel />\r\n                                                }\r\n                                                <span style={{ marginLeft: '.5rem' }}>{file.name}</span>\r\n                                            </div>\r\n                                            <MdOutlineDelete onClick={() => deleteHandler(index)} size={25} style={{ marginRight: '.5rem', color: 'red', cursor: 'pointer' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input\r\n                                    ref={inputRef}\r\n                                    type=\"file\"\r\n                                    id=\"input-file-upload\"\r\n                                    accept=\"image/png, image/jpeg, application/pdf, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    multiple={true}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileLengthSingle\"] ? 'File is required' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    parentComponent === 'myDocument'\r\n                    && files.length > 1\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the Matrix file and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import {\r\n    GetDownloadHistory,\r\n    SaveDownloadHistory,\r\n    DeleteDownloadHistory\r\n} from \"../types.d\";\r\nimport { downloadHistory } from \"../../services\"\r\n\r\nexport const DownloadHistoryActionCreator = {\r\n    getDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.getDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.saveDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n    deleteDownloadHistory: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.deleteDownloadHistory(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n}","import { MyDocumentsFolder, MyDocumentsList } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    resetDocumentList: () => (dispatch: any) => {\r\n        dispatch(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst MyDocuments = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [documents, setDocuments] = useState([])\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n\r\n    const { folders, totalCount, error, loading } = useSelector((state: any) => ({\r\n        folders: state.myDocuments.folders.data,\r\n        totalCount: state.myDocuments.folders.totalCount,\r\n        error: state.myDocuments.folders.error,\r\n        loading: state.myDocuments.folders.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    const showDocumentListPage = (data, column) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 1) => {\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentFolders({\r\n            pageSize,\r\n            pageNumber,\r\n            orgType: 'CT'\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadDocument = (document) => {\r\n        console.log(document)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={folders}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"folderName\": \"Name\",\r\n                    \"fileSize\": \"Size\",\r\n                    \"modifiedDate\": \"Modified Date\",\r\n                    \"shareDate\": \"Shared Date\",\r\n                    \"receiveDate\": \"Received Date\",\r\n                    \"shareBy\": \"Shared By\",\r\n                    \"sharedWith\": \"Shared With\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data, column) => showDocumentListPage(data, column)}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'myDocuments'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadDocument(data),\r\n                        share: (data) => console.log(`share action`),\r\n                        view: (data) => console.log(`View Action`),\r\n                        delete: (data) => console.log(`Delete Action`)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload\r\n                show={uploadDocModal}\r\n                onHide={() => setUploadDocModal(false)}\r\n                accountId={123}\r\n                Styles={Styles}\r\n                parentComponent=\"myDocument\"\r\n                search={search} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default MyDocuments\r\n\r\n","import { GetSentDocumentRequest, SentDocumentRequest, DeleteDocumentRequest } from \"../types.d\";\r\nimport { sentDocumentRequestService } from \"../../services\"\r\n\r\nexport const SentDocumentRequestActionCreator = {\r\n    getSentDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.getSentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    sentDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.sentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.deleteDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import {\r\n    GetReceiveDocumentRequest,\r\n    DownloadDocumentRequest,\r\n    DeleteReceiveDocumentRequest\r\n} from \"../types.d\";\r\nimport { receiveDocumentRequest } from \"../../services\"\r\n\r\nexport const ReceiveDocumentRequestActionCreator = {\r\n    getReceiveDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.getReceiveDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    DownloadDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.downloadDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.deleteReceiveDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs, Modal, Container } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { SentDocumentRequestActionCreator } from \"../../store/actions/sentDocumentRequest.actions\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { ReceiveDocumentRequestActionCreator } from \"../../store/actions/receivedDocumentRequest.actions\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst ReceivedDocumentRequests = () => {\r\n    const dispatch = useDispatch()\r\n    const { addToast } = useToasts();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [showBulkRequest, setShowBulkRequest] = useState(false)\r\n    const [showRequestNewDocument, setShowRequestNewDocument] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [details, setDetails] = useState<any>(null);\r\n\r\n    const {\r\n        receiveDocumentRequests,\r\n        totalCount,\r\n        loading,\r\n        error,\r\n        documentTypes,\r\n        loadingDocumentTypes,\r\n        errorDocumentTypes,\r\n        downloadRequest,\r\n        downloadRequestSuccess,\r\n        downloadRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError\r\n    } = useSelector((state: any) => ({\r\n        receiveDocumentRequests: state.receiveDocumentRequest.data,\r\n        totalCount: state.receiveDocumentRequest.totalCount,\r\n        loading: state.receiveDocumentRequest.loading,\r\n        error: state.receiveDocumentRequest.error,\r\n        documentTypes: state.types.documentType.data,\r\n        loadingDocumentTypes: state.types.documentType.loading,\r\n        errorDocumentTypes: state.types.documentType.error,\r\n        downloadRequest: state.receiveDocumentRequest.downloadRequest,\r\n        downloadRequestSuccess: state.receiveDocumentRequest.downloadRequestSuccess,\r\n        downloadRequestError: state.receiveDocumentRequest.downloadRequestError,\r\n        deleteRequest: state.receiveDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.receiveDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.receiveDocumentRequest.deleteRequestError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n        dispatch(TypesActionCreator.getDocumentTypes('CL'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // if (sendRequestSuccess) {\r\n        //     addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n        //     setShowRequestNewDocument(false);\r\n        //     search(pageCount, currentPage)\r\n        // }\r\n        // if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [\r\n        // sendRequestSuccess,\r\n        // sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 1) => {\r\n        dispatch(ReceiveDocumentRequestActionCreator.getReceiveDocumentRequest({\r\n            pageSize,\r\n            pageNumber\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(SentDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n    }\r\n\r\n    const handleDetails = (document) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const downloadDocument = (document) => {\r\n        console.log(document)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\">\r\n                            <br />\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Fulfill Bulk Request</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={receiveDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillmentDate\": \"Fulfillment Date\",\r\n                    \"fileName\": \"Document Name\",\r\n                    \"requestedFrom\": \"Requested By\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'receiveDocumentRequest'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadDocument(data),\r\n                        upload: (data) => setUploadDocModal(true),\r\n                        delete: (data) => handleDetails(data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload\r\n                show={uploadDocModal}\r\n                onHide={() => setUploadDocModal(false)}\r\n                accountId={123}\r\n                Styles={Styles}\r\n                parentComponent=\"receiveDocumentRequest\"\r\n                search={search}\r\n                details={details}\r\n            />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='receiveDocumentRequest'\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default ReceivedDocumentRequests\r\n\r\n","import { ConnectedUsers } from \"../types.d\";\r\nimport { userService } from \"../../services\"\r\n\r\nexport const UserActionCreator = {\r\n    getConnectedUsers: () => (dispatch: any) => {\r\n        const request = () => ({ type: ConnectedUsers.CONNECTED_USER_REQUEST, payload: [] })\r\n        const success = (users: any) => ({ type: ConnectedUsers.CONNECTED_USER_SUCCESS, payload: users })\r\n        const failure = () => ({ type: ConnectedUsers.CONNECTED_USER_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        userService.getConnectedUsers()\r\n            .then(\r\n                users => {\r\n                    dispatch(success(users))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    }\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs, Modal, Container } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { SentDocumentRequestActionCreator } from \"../../store/actions/sentDocumentRequest.actions\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport { UserActionCreator } from \"../../store/actions/user.actions\";\r\nimport { getSignedURL } from \"../../helpers/util\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst SentDocumentRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const aRef = useRef<any>()\r\n    const { addToast } = useToasts();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [showBulkRequest, setShowBulkRequest] = useState(false)\r\n    const [showRequestNewDocument, setShowRequestNewDocument] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n\r\n    const {\r\n        sentDocumentRequests,\r\n        totalCount,\r\n        loading,\r\n        error,\r\n        documentTypes,\r\n        loadingDocumentTypes,\r\n        errorDocumentTypes,\r\n        sendRequest,\r\n        sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError\r\n    } = useSelector((state: any) => ({\r\n        sentDocumentRequests: state.sentDocumentRequest.data,\r\n        totalCount: state.sentDocumentRequest.totalCount,\r\n        loading: state.sentDocumentRequest.loading,\r\n        error: state.sentDocumentRequest.error,\r\n        documentTypes: state.types.documentType.data,\r\n        loadingDocumentTypes: state.types.documentType.loading,\r\n        errorDocumentTypes: state.types.documentType.error,\r\n        sendRequest: state.sentDocumentRequest.sendRequest,\r\n        sendRequestSuccess: state.sentDocumentRequest.sendRequestSuccess,\r\n        sendRequestError: state.sentDocumentRequest.sendRequestError,\r\n        deleteRequest: state.sentDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.sentDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.sentDocumentRequest.deleteRequestError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n        dispatch(TypesActionCreator.getDocumentTypes('CL'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (sendRequestSuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            setShowRequestNewDocument(false);\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(SentDocumentRequestActionCreator.getSentDocumentRequest({\r\n            pageSize,\r\n            pageNumber\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(SentDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n    }\r\n\r\n    const handleDetails = (document) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const downloadHandler = async (document) => {\r\n        //download file\r\n        let filePath = await getSignedURL(document.filePath)\r\n        aRef.current.href = filePath;\r\n        aRef.current.download = document.documentName;\r\n        aRef.current.click();\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.id]))\r\n    }\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={8} sm={8} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form >\r\n                            <br />\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowBulkRequest(true)}>Import Bulk Request</Button>\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowRequestNewDocument(true)}>Request New Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={sentDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillmentDate\": \"Fulfillment Date\",\r\n                    \"fileName\": \"File Name\",\r\n                    \"requestedFrom\": \"Requested From\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'sentDocumentRequest'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadHandler(data),\r\n                        delete: (data) => handleDetails(data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n\r\n        {\r\n            showRequestNewDocument\r\n            && <RequestNewDocument show={showRequestNewDocument} onHide={() => setShowRequestNewDocument(false)} documentTypes={documentTypes} dispatch={dispatch} />\r\n        }\r\n        {\r\n            showBulkRequest\r\n            && <DocumentUpload show={showBulkRequest} onHide={() => setShowBulkRequest(false)} accountId={123} Styles={Styles} parentComponent=\"sentDocumentRequest\" />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='sentDocumentRequest'\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nconst RequestNewDocument = ({ show, onHide, documentTypes, dispatch }) => {\r\n    const ref = useRef<any>();\r\n    const sendRequestRef = useRef<any>()\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [users, setUsers] = useState(['aakashbehal@gmail.com', 'abc@gmail.com']);\r\n    const [defaultSelect, setDefaultSelect] = useState<any>([])\r\n    const [usersSelected, setUserSelected] = useState<any>([])\r\n\r\n    const {\r\n        users,\r\n        loading,\r\n        error\r\n    } = useSelector((state: any) => ({\r\n        users: state.users.data,\r\n        loading: state.users.loading,\r\n        error: state.users.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(UserActionCreator.getConnectedUsers())\r\n    }, [])\r\n\r\n    const handleRequest = (e) => {\r\n        e.preventDefault()\r\n        const {\r\n            originalAccountNumber,\r\n            clientAccountNumber,\r\n            docTypeCode\r\n        } = sendRequestRef.current\r\n        usersSelected.push({\r\n            \"firstName\": \"Sachin\",\r\n            \"principleId\": 21,\r\n            \"orgTypeCode\": \"CL\",\r\n            \"orgCode\": \"MRLT\"\r\n        })\r\n        dispatch(SentDocumentRequestActionCreator.sentDocumentRequest({\r\n            \"sendRequests\": usersSelected,\r\n            \"originalAccountNumber\": originalAccountNumber.value,\r\n            \"clientAccountNumber\": clientAccountNumber.value,\r\n            \"docTypeCode\": docTypeCode.value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"xl\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Request New Document\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document}>\r\n                    <Form ref={sendRequestRef} onSubmit={(e) => handleRequest(e)}>\r\n                        <br />\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Typeahead\r\n                                            isLoading={loading}\r\n                                            id=\"public-methods-example\"\r\n                                            labelKey=\"firstName\"\r\n                                            multiple\r\n                                            defaultSelected={defaultSelect}\r\n                                            ref={ref}\r\n                                            allowNew={true}\r\n                                            newSelectionPrefix='Not a Platform User: '\r\n                                            onChange={(selected) => {\r\n                                                let selectedUpdated = selected.map((s: any) => {\r\n                                                    let temp = {\r\n                                                        \"firstName\": s.firstName,\r\n                                                        \"principleId\": s.principleId,\r\n                                                        \"orgTypeCode\": s.orgType,\r\n                                                        \"orgCode\": s.orgCode\r\n                                                    }\r\n                                                    return temp\r\n                                                })\r\n                                                setUserSelected(selectedUpdated)\r\n                                            }}\r\n                                            options={users}\r\n                                        />\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Send Request To</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Portfolio Id</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row> */}\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"originalAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Original Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"clientAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Client Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={6} >\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"docTypeCode\"\r\n                                        className=\"select_custom white\">\r\n                                        <option></option>\r\n                                        {\r\n                                            (documentTypes && documentTypes.length > 0) &&\r\n                                            documentTypes.map((dT: any, index: number) => {\r\n                                                return <option key={`cr_${index}`} value={dT.shortCode}>{dT.documentType}</option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                    <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Col className={Styles.button_center}>\r\n                            <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Request</Button>{\" \"}\r\n                        </Col>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default SentDocumentRequests\r\n","import { useState, useEffect } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\n\r\nconst DownloadHistory = () => {\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const history = useHistory();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n\r\n    const {\r\n        data,\r\n        totalCount,\r\n        error,\r\n        loading,\r\n        saveDownload,\r\n        saveDownloadSuccess,\r\n        saveDownloadError,\r\n        deleteDownloadHistory,\r\n        deleteDownloadHistorySuccess,\r\n        deleteDownloadHistoryError\r\n    } = useSelector((state: any) => ({\r\n        data: state.downloadHistory.data,\r\n        totalCount: state.downloadHistory.totalCount,\r\n        error: state.downloadHistory.error,\r\n        loading: state.downloadHistory.loading,\r\n        saveDownload: state.downloadHistory.saveDownload,\r\n        saveDownloadSuccess: state.downloadHistory.saveDownloadSuccess,\r\n        saveDownloadError: state.downloadHistory.saveDownloadError,\r\n        deleteDownloadHistory: state.downloadHistory.deleteDownloadHistory,\r\n        deleteDownloadHistorySuccess: state.downloadHistory.deleteDownloadHistorySuccess,\r\n        deleteDownloadHistoryError: state.downloadHistory.deleteDownloadHistoryError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (deleteDownloadHistorySuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteDownloadHistoryError) {\r\n\r\n        }\r\n    }, [deleteDownloadHistorySuccess, deleteDownloadHistoryError])\r\n\r\n    const showDocumentListPage = (data, column) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(DownloadHistoryActionCreator.getDownloadHistory({\r\n            pageSize,\r\n            pageNumber\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    return (<>\r\n        <Col>\r\n            <TableComponent\r\n                data={data}\r\n                isLoading={loading}\r\n                map={{\r\n                    documentName: \"Document Name\",\r\n                    documentsize: \"Size\",\r\n                    downloadDate: \"Download Date\",\r\n                    downloadStatus: \"Status\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data, column) => showDocumentListPage(data, column)}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'downloadHistory'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        pause: (data) => console.log(`pause Action`),\r\n                        restartDownload: (data) => console.log(`Restart Download action`),\r\n                        delete: (data) => {\r\n                            dispatch(DownloadHistoryActionCreator.deleteDownloadHistory(data.id))\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n    </>)\r\n}\r\n\r\nexport default DownloadHistory;","import {\r\n    RequestedDocumentSummary,\r\n    SentDocumentSummary\r\n} from \"../types.d\";\r\nimport { summaryService } from \"../../services\"\r\n\r\nexport const SummaryActionCreator = {\r\n    getReceiveSummary: () => (dispatch: any) => {\r\n        const request = () => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        summaryService.getReceiveSummary()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    getSentSummary: () => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_SUCCESS, payload: data })\r\n        const failure = () => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        summaryService.getSentSummary()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    }\r\n}","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\n\r\nimport { BsArrowsAngleContract, BsArrowsAngleExpand } from \"react-icons/bs\"\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport MyDocuments from \"./MyDocuments\";\r\nimport ReceivedDocumentRequests from \"./ReceivedDocumentRequests\";\r\nimport SentDocumentRequests from \"./SentDocumentRequests\";\r\nimport DownloadHistory from \"./DownloadHistory\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\nconst productsInit = [\r\n    {\r\n        statusCode: 'all_products',\r\n        status: 'All Products'\r\n    }\r\n]\r\nconst portfolioInit = [\r\n    {\r\n        statusCode: 'all_portfolio',\r\n        status: 'All Portfolio'\r\n    }\r\n]\r\nconst usersInit = [\r\n    {\r\n        statusCode: 'all_users',\r\n        status: 'All Users'\r\n    }\r\n]\r\n\r\nconst documentCoverageArr = [\r\n    {\r\n        percentage: 60,\r\n        title: 'Signed Contract or Term & Conditions',\r\n        accountsDone: 558,\r\n        accountsTotal: 931,\r\n        type: 'Signed contract or T&C'\r\n    },\r\n    {\r\n        percentage: 60,\r\n        title: 'Last Activity Statement',\r\n        accountsDone: 249,\r\n        accountsTotal: 416,\r\n        type: 'Last Activity Statement'\r\n    },\r\n    {\r\n        percentage: 10,\r\n        title: 'Charge-off Statement',\r\n        accountsDone: 42,\r\n        accountsTotal: 416,\r\n        type: 'Charge-off Statement'\r\n    },\r\n    {\r\n        percentage: 30,\r\n        title: 'Copy of Truth in Lending Disclosure',\r\n        accountsDone: 65,\r\n        accountsTotal: 215,\r\n        type: 'Lending Disclosure'\r\n    }\r\n];\r\n\r\nconst options = {\r\n    // responsive: true,\r\n    // maintainAspectRatio: false,\r\n    cutout: 100,\r\n    plugins: {\r\n        datalabels: {\r\n            color: 'white',\r\n            padding: 6,\r\n        },\r\n        legend: {\r\n            position: 'bottom' as const,\r\n        },\r\n    },\r\n}\r\n\r\nexport const DATA_REQUESTED = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\nexport const DATA_SENT = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\n\r\nconst Documents = ({ location }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [products, setProducts] = useState(productsInit)\r\n    const [portfolios, setPortfolios] = useState(portfolioInit)\r\n    const [users, setUsers] = useState(usersInit)\r\n    const [documentCoverage, setDocumentCoverage] = useState(documentCoverageArr)\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [collapse, setCollapse] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [dataRequested, setDataRequested] = useState<any>(DATA_REQUESTED)\r\n    const [dataSent, setDataSent] = useState<any>(DATA_SENT)\r\n\r\n    const {\r\n        requestedSummary,\r\n        sentSummary,\r\n        errorSent,\r\n        loadingSent,\r\n        loadingRequest,\r\n        errorRequest\r\n    } = useSelector((state: any) => ({\r\n        requestedSummary: state.summary.requestedSummary,\r\n        sentSummary: state.summary.sentSummary,\r\n        errorSent: state.summary.errorSent,\r\n        loadingSent: state.summary.loadingSent,\r\n        loadingRequest: state.summary.loadingRequest,\r\n        errorRequest: state.summary.errorRequest\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (JSON.stringify(requestedSummary) !== \"{}\") {\r\n            delete requestedSummary.total\r\n            let labels = ['Fulfilled', 'Open', 'Overdue']\r\n            let values = Object.values(requestedSummary)\r\n            const dataRequestedTemp = Object.assign({}, dataRequested)\r\n            dataRequestedTemp.labels = labels\r\n            dataRequestedTemp.datasets[0].data = values\r\n            setDataRequested(dataRequestedTemp)\r\n        }\r\n        if (JSON.stringify(sentSummary) !== \"{}\") {\r\n            delete sentSummary.total\r\n            let labels = ['Fulfilled', 'Open', 'Overdue']\r\n            let values = Object.values(sentSummary)\r\n            const dataSentTemp = Object.assign({}, dataSent)\r\n            dataSentTemp.labels = labels\r\n            dataSentTemp.datasets[0].data = values\r\n            setDataSent(dataSentTemp)\r\n        }\r\n    }, [requestedSummary, sentSummary])\r\n\r\n    useEffect(() => {\r\n        dispatch(SummaryActionCreator.getSentSummary())\r\n        dispatch(SummaryActionCreator.getReceiveSummary())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const tab = location.pathname.split('/')\r\n        setSelectedTab(tab[tab.length - 1])\r\n    }, [location])\r\n\r\n    const memoRequested = useMemo(() => {\r\n        if (dataRequested.datasets[0].data.length > 0) {\r\n            return <Doughnut data={dataRequested} options={options} />\r\n        }\r\n    }, [dataRequested])\r\n\r\n    const memoSent = useMemo(() => {\r\n        if (dataSent.datasets[0].data.length > 0) {\r\n            return <Doughnut data={dataSent} options={options} />\r\n        }\r\n    }, [dataSent])\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n\r\n    const documentSummary = () => {\r\n        return <Col sm={12} className=\"form_container\">\r\n            <Row>\r\n                <Col sm={11}><h4 style={{ marginLeft: '1rem' }}>Document Summary</h4></Col>\r\n                <Col sm={1} style={{ textAlign: 'right', paddingRight: '2rem', cursor: 'pointer' }} onClick={() => setCollapse((collapse) => !collapse)}>\r\n                    {!collapse && <BsArrowsAngleContract size={20} />}\r\n                    {collapse && <BsArrowsAngleExpand size={20} />}\r\n                </Col>\r\n            </Row>\r\n            <Col sm={12} className={collapse ? Styles.collapse_summary : ''}>\r\n                <Row>\r\n                    <Col sm={5}>\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Coverage</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col >\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row >\r\n                                <hr />\r\n                                <Col sm={12} className={`no_padding ${Styles.progress_container_outer}`}>\r\n                                    {\r\n                                        documentCoverage && documentCoverage.length > 0\r\n                                        && documentCoverage.map((dC, index) => {\r\n                                            return (\r\n                                                <div key={`dC_${index}`} className={Styles.progress_container}>\r\n                                                    <p className={Styles.ProgressTitle}><b>{dC.title}</b></p>\r\n                                                    <ProgressBar className={Styles.progressbar} now={dC.percentage} label={`${dC.percentage}%`} />\r\n                                                    <p className={Styles.ProgressDesc}><span className={Styles.clickable}>{dC.accountsDone}</span> out of <b>{dC.accountsTotal}</b> accounts has {dC.type}</p>\r\n                                                    <hr />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                </Col>\r\n                            </Form >\r\n                        </Col >\r\n                    </Col >\r\n                    <Col sm={5}  >\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Requirement</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col sm={6} className={`${Styles.chart_container} ${Styles.right_border}`}>\r\n                                        <h5>Sent Requests</h5>\r\n                                        {\r\n                                            memoSent\r\n                                        }\r\n                                    </Col>\r\n                                    <Col sm={6} className={Styles.chart_container}>\r\n                                        <h5>Received Requests</h5>\r\n                                        {\r\n                                            memoRequested\r\n                                        }\r\n                                        {/* JSON.stringify(requestedSummary) !== \"{}\"\r\n                                            &&  */}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col sm={2} >\r\n                        <Col className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Usage</h5>\r\n                            <br />\r\n                            <Col sm={12} className=\"no_padding\">\r\n                                <div className={Styles.progress_container}>\r\n                                    <ProgressBar className={Styles.progressbar} now={60} label={`60%`} />\r\n                                    <br />\r\n                                    <p><b>11.58 GB used out of 15 GB</b></p>\r\n                                    <p><b>Total 15K documents</b></p>\r\n                                    <Button variant=\"dark\">Upgrade Your Plan</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Col>\r\n                    </Col>\r\n                </Row >\r\n            </Col >\r\n        </Col >\r\n    }\r\n    const handleSelect = (e) => {\r\n        history.push({\r\n            pathname: `/documents/${e}`\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                documentSummary()\r\n            }\r\n            <br />\r\n            <Col className=\"no_padding\">\r\n                <Tabs\r\n                    activeKey={selectedTab}\r\n                    id=\"fill-tab-example\"\r\n                    fill\r\n                    className=\"mb-3\"\r\n                    onSelect={handleSelect}\r\n                >\r\n                    <Tab eventKey=\"my_documents\" title=\"My Documents\">\r\n                        {selectedTab === \"my_documents\" && <MyDocuments />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"sent_document_requests\" title=\"Sent Document Requests\">\r\n                        {selectedTab === \"sent_document_requests\" && <SentDocumentRequests />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"received_document_requests\" title=\"Received Document Request\">\r\n                        {selectedTab === \"received_document_requests\" && <ReceivedDocumentRequests />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"download_history\" title=\"Download History\">\r\n                        {selectedTab === \"download_history\" && <DownloadHistory />}\r\n                    </Tab>\r\n                    {/*<Tab eventKey=\"templates\" title=\"\">\r\n                    </Tab> */}\r\n                </Tabs >\r\n            </Col >\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Documents"],"sourceRoot":""}