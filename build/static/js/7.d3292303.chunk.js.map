{"version":3,"sources":["store/actions/common/types.actions.tsx","containers/DocumentManager/DocumentManager.module.sass","store/actions/summary.actions.tsx","components/Table/pagination.tsx","components/Table/Table.tsx","components/Common/AdvanceSearch.tsx","store/actions/downloadHistory.actions.tsx","components/CustomHooks/FileUploadHook.tsx","components/modal/DocumentUpload.tsx","components/Common/DocumentType.tsx","components/modal/ViewDocument.tsx","store/actions/myDocuments.actions.tsx","components/Common/Common.module.sass","components/modal/Modal.module.sass","containers/DocumentManager/DocumentsList.tsx"],"names":["TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","module","exports","SummaryActionCreator","getReceiveSummary","RequestedDocumentSummary","REQUESTED_DOCUMENT_SUMMARY_REQUEST","summaryService","data","REQUESTED_DOCUMENT_SUMMARY_SUCCESS","REQUESTED_DOCUMENT_SUMMARY_FAILURE","getSentSummary","SentDocumentSummary","SENT_DOCUMENT_SUMMARY_REQUEST","SENT_DOCUMENT_SUMMARY_SUCCESS","SENT_DOCUMENT_SUMMARY_FAILURE","reRender","ReRender","RE_RENDER_REQUEST","setTimeout","RE_RENDER_RESET","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","useState","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","onClick","max","min","style","marginTop","Row","Col","md","xs","className","First","disabled","Prev","Next","Last","CustomDropdown","trigger","menu","React","open","setOpen","cloneElement","map","menuItem","index","props","TableComponent","isLoading","onPaginationChange","totalCount","isPagination","actionArray","setCurrentPage","handleNavigate","colorArray","currencyColumns","sorting","sortElement","sortType","addEditArray","tableAction","parentComponent","loadingHeight","hideShareArray","searchCriteria","useDispatch","history","useHistory","isCheckAll","setIsCheckAll","isCheck","setIsCheck","headers","setHeaders","pageSize","setPageSize","setShow","pageSizes","showHideColumns","setShowHideColumns","length","Object","keys","filter","item","includes","handleClickHideShow","e","target","id","checked","columnsTemp","assign","columnUpdated","MiscActionCreator","saveColumn","servicingRequestIndicator","header","d","position","left","requestStatus","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","size","color","ragStatus","priorityIndicator","priorityExecution","sortBy","descElements","document","querySelectorAll","ascElements","Array","from","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","pathname","search","clientId","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","padding","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","Number","dueDateHandler","Date","dueDate","tableHeaderHandler","lineHeight","backgroundColor","Form","Control","onChange","li","folderName","cursor","indexOf","edit","view","minWidth","openSolModal","tableBodyHandler","zIndex","index2","slaStatus","checkType","display","alignItems","contacts","contact","name","phone","sharedWith","sW","email","marginLeft","charAt","viewDocument","handleDocumentName","href","justifyContent","Button","variant","recordStatusVal","margin","delete","update","execute","undefined","upload","download","share","h","defaultChecked","width","Group","as","Label","column","sm","value","defaultValue","Table","striped","bordered","hover","responsive","page","AdvanceSearch","Styles","searchHandler","setAdvanceSearchObj","advanceSearchObj","showAdvanceSearch","setShowAdvanceSearch","advanceSearchRef","useRef","documentTypeRef","advanceSearchActive","setAdvanceSearchActive","generationDateFrom","generationDateTo","uploadDateFrom","uploadDateTo","shareDateFrom","shareDateTo","receivedDateFrom","receivedDateTo","dates","setDates","checkIfAdvanceSearchIsActive","debouncedSearch","debounce","criteria","handleReset","current","reset","dateHandler","date","dateTemp","search_input","my_document_search","onMouseDown","handleSearchInput","placeholder","advanceSearch","inActive","advance_search","ref","onSubmit","preventDefault","advanceSearchTemp","document_type","document_name","original_account_number","client_account_number","equabli_account_number","portfolio_id","docTypeCode","documentName","dateFormatterForRequestDocManager","receiveDateFrom","receiveDateTo","originalAccountNumber","portfolioId","advanceSearchHandler","lg","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","button_right","DownloadHistoryActionCreator","getDownloadHistory","requestPayload","GetDownloadHistory","GET_DOWNLOAD_HISTORY_REQUEST","downloadHistory","sent","GET_DOWNLOAD_HISTORY_SUCCESS","GET_DOWNLOAD_HISTORY_FAILURE","saveDownloadHistory","SaveDownloadHistory","SAVE_DOWNLOAD_HISTORY_REQUEST","SAVE_DOWNLOAD_HISTORY_SUCCESS","SAVE_DOWNLOAD_HISTORY_FAILURE","finally","SAVE_DOWNLOAD_HISTORY_RESET","deleteDownloadHistory","DeleteDownloadHistory","DELETE_DOWNLOAD_HISTORY_REQUEST","DELETE_DOWNLOAD_HISTORY_SUCCESS","DELETE_DOWNLOAD_HISTORY_FAILURE","DELETE_DOWNLOAD_HISTORY_RESET","FileUploadHook","files","state","setState","zipTargetFiles","zipFile","file","zip","require","matrixFile","generateAsync","content","File","DocumentUpload","onHide","accountId","addToast","details","useToasts","fileToUpload","dragActive","setDragActive","inputRef","setFiles","setUserLoggedIn","formSubmitted","setFormSubmitted","fileLengthSingle","fileSize","formError","setFormError","noMatrixFile","SetNoMatrixFile","user","userService","getUser","validateUpload","formObj","formIsValid","key","k","JSON","stringify","uploadFile","onSubmitHandler","config","API_URL","process","formData","FormData","append","axiosCustom","post","response","urls","handleResponse","fileUrl","responseFilePath","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","handleFiles","tempFiles","onButtonClick","click","downloadSampleFile","sampleFile","get","responseType","blob","Blob","saveAs","Modal","aria-labelledby","centered","animation","Header","closeButton","Title","Body","Container","list_upload_container","list_upload","splice","deleteHandler","onDragEnter","accept","multiple","fontSize","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","Footer","details_warning","DocumentTypes","forwardRef","selectedValue","isDisabled","useSelector","documentTypes","documentType","loading","setValue","useImperativeHandle","partnerName","agency","shortCode","ViewDocument","documentData","setDocumentType","imageUrl","setImageUrl","loadingImage","setLoadingImage","console","log","splitDocumentName","fileName","viewImage","getSignedURL","objectKey","filePath","center_document","minHeight","onLoad","src","alt","height","MyDocumentsActionCreator","getMyDocumentFolders","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","MY_DOCUMENTS_FOLDER_SUCCESS","MY_DOCUMENTS_FOLDER_FAILURE","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","resetDocumentList","MY_DOCUMENTS_LIST_RESET","DocumentsList","location","params","URLSearchParams","aRef","AccountId","setSortElement","setSortType","pageCount","setPageCount","uploadDocModal","setUploadDocModal","showDocument","setShowDocument","documentToShow","setDocumentToShow","columnsSaved","setColumnsSaved","documents","myDocuments","columns","defaultColumns","misc","allTableColumns","dC","tableName","columnNames","pageNumber","searchObj","accountNumber","sortOrder","sortParam","downloadHandler","obj","flag","originalAccountNo","equabliAccountNo","clientAccountNo","generateDate","uploadDate","shareDate","receiveDate","sharedBy","handlePagination"],"mappings":"8HAAA,qDASaA,EAAqB,CAE9BC,YAAa,SAACC,GAAD,OAAe,SAACC,GAKzBA,EAJuB,CAAED,KAAME,IAASC,oBAMxCC,IAAeC,eAAeL,GACzBM,MACG,SAAAC,GACIA,EAAWC,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEE,SAAWD,EAAEC,SAAiB,EAC3BF,EAAEE,SAAWD,EAAEC,UAAkB,EAC9B,KAEhBV,EAbI,SAACM,GAAD,MAAsB,CAAEP,KAAME,IAASU,kBAAmBC,QAASN,GAa9DO,CAAQP,OAErB,SAAAQ,GACId,EAfI,SAACc,GAAD,MAAiB,CAAEf,KAAME,IAASc,kBAAmBH,QAASE,GAezDE,CAAQF,SAIjCG,qBAAsB,SAAClB,GAAD,OAAe,SAACC,GAKlCA,EAJuB,CAAED,KAAMmB,IAAkBC,6BAMjDhB,IAAeC,eAAeL,GACzBM,MACG,SAAAe,GACIpB,EARI,SAACoB,GAAD,MAAiB,CAAErB,KAAMmB,IAAkBG,2BAA4BT,QAASQ,GAQ3EP,CAAQO,OAErB,SAAAN,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAMmB,IAAkBI,2BAA4BV,QAASE,GAU3EE,CAAQF,SAIjCS,kBAAmB,kBAAM,SAACvB,GAKtBA,EAJuB,CAAED,KAAMyB,IAAeC,0BAM9CtB,IAAeC,eAAf,mBACKC,MACG,SAAAC,GACIN,EARI,SAACM,GAAD,MAAsB,CAAEP,KAAMyB,IAAeE,wBAAyBd,QAASN,GAQ1EO,CAAQP,OAErB,SAAAQ,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAMyB,IAAeG,wBAAyBf,QAASE,GAUrEE,CAAQF,SAIjCc,iBAAkB,kBAAM,SAAC5B,GAKrBA,EAJuB,CAAED,KAAM8B,IAAcC,yBAM7C3B,IAAeyB,mBACVvB,MACG,SAAAC,GACIN,EARI,SAACM,GAAD,MAAsB,CAAEP,KAAM8B,IAAcE,uBAAwBnB,QAASN,GAQxEO,CAAQP,OAErB,SAAAQ,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAM8B,IAAcG,uBAAwBpB,QAASE,GAUnEE,CAAQF,SAIjCmB,gBAAiB,kBAAM,SAACjC,GAKpBA,EAJuB,CAAED,KAAMmC,IAAaC,uBAM5ChC,IAAe8B,kBACV5B,MACG,SAAA+B,GACIpC,EARI,SAACoC,GAAD,MAAoB,CAAErC,KAAMmC,IAAaG,qBAAsBzB,QAASwB,GAQnEvB,CAAQuB,OAErB,SAAAtB,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAMmC,IAAaI,qBAAsB1B,QAASE,GAUhEE,CAAQF,W,oBChGrCyB,EAAOC,QAAU,CAAC,uBAAyB,gDAAgD,YAAc,qCAAqC,cAAgB,uCAAuC,aAAe,sCAAsC,yBAA2B,kDAAkD,mBAAqB,4CAA4C,UAAY,mCAAmC,gBAAkB,yCAAyC,aAAe,sCAAsC,aAAe,sCAAsC,OAAS,gCAAgC,cAAgB,uCAAuC,mBAAqB,4CAA4C,iBAAmB,0CAA0C,eAAiB,wCAAwC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,gCAAgC,SAAW,kCAAkC,sBAAwB,+CAA+C,YAAc,qCAAqC,WAAa,oCAAoC,aAAe,wC,iCCD7sC,qDAOaC,EAAuB,CAChCC,kBAAmB,kBAAM,SAAC1C,GAKtBA,EAJuB,CAAED,KAAM4C,IAAyBC,mCAAoChC,QAAS,KAMrGiC,IAAeH,oBACVrC,MACG,SAAAyC,GACI9C,EARI,SAAC8C,GAAD,MAAgB,CAAE/C,KAAM4C,IAAyBI,mCAAoCnC,QAASkC,GAQzFjC,CAAQiC,OAErB,SAAAhC,GACId,EAVW,CAAED,KAAM4C,IAAyBK,mCAAoCpC,QAAS,UAczGqC,eAAgB,kBAAM,SAACjD,GAKnBA,EAJuB,CAAED,KAAMmD,IAAoBC,8BAA+BvC,QAAS,KAM3FiC,IAAeI,iBACV5C,MACG,SAAAyC,GACI9C,EARI,SAAC8C,GAAD,MAAgB,CAAE/C,KAAMmD,IAAoBE,8BAA+BxC,QAASkC,GAQ/EjC,CAAQiC,OAErB,SAAAhC,GACId,EAVW,CAAED,KAAMmD,IAAoBG,8BAA+BzC,QAAS,UAc/F0C,SAAU,kBAAM,SAACtD,GACbA,EAAS,CAAED,KAAMwD,IAASC,oBAC1BC,YAAW,WACPzD,EAAS,CAAED,KAAMwD,IAASG,oBAC3B,S,wOCUIC,EApDa,SAAC,GAAyE,IAAD,IAAtEC,aAAsE,MAA9D,EAA8D,MAA3DC,oBAA2D,MAA5C,EAA4C,MAAzCC,mBAAyC,MAA3B,EAA2B,EAAxBC,EAAwB,EAAxBA,aACzE,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WAEFD,EADAN,EAAQ,GAAKC,EAAe,EACdO,KAAKC,KAAKT,EAAQC,GAElB,KAEnB,CAACD,EAAOC,EAAcI,IAEzB,IAAMK,EAAkBC,mBAAQ,WAE5B,IADA,IAAMC,EAAa,GADe,WAEzBC,GACLD,EAAME,KACF,cAACC,EAAA,EAAWC,KAAZ,CAAyBC,OAAQJ,EAAI,IAAMX,EAAagB,QAAS,kBAAMf,EAAaU,EAAI,IAAxF,SACKA,EAAI,GADaA,KAFrBA,EAAIL,KAAKW,IAAI,EAAGjB,EAAc,GAAIW,EAAIL,KAAKY,IAAIlB,EAAc,EAAGG,GAAaQ,IAAM,EAAnFA,GAOT,OAAOD,IACR,CAACP,EAAYH,EAAaC,IAQ7B,OAAmB,IAAfE,EAAyB,KAGzB,qBAAKgB,MAAO,CAAEC,UAAW,QAAzB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,SATJ,0CAAcxB,EAAc,GAAKD,EAAgB,EAAjD,OAAyDC,EAAcD,EAAgBD,EAAQA,EAAQE,EAAcD,EAArH,OAAuID,EAAvI,gBAYI,cAACwB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,SACI,eAACX,EAAA,EAAD,CAAYY,UAAU,sBAAtB,UACI,cAACZ,EAAA,EAAWa,MAAZ,CAAkBV,QAAS,kBAAMf,EAAa,IAAI0B,SAA0B,IAAhB3B,IAC5D,cAACa,EAAA,EAAWe,KAAZ,CAAiBZ,QAAS,kBAAMf,EAAaD,EAAc,IAAI2B,SAA0B,IAAhB3B,IACxEQ,EACD,cAACK,EAAA,EAAWgB,KAAZ,CAAiBb,QAAS,kBAAMf,EAAaD,EAAc,IAAI2B,SAAU3B,IAAgBG,IACzF,cAACU,EAAA,EAAWiB,KAAZ,CAAiBd,QAAS,kBAAMf,EAAaE,IAAawB,SAAU3B,IAAgBG,e,wBC0iCtG4B,EAAiB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC/B,EAAwBC,IAAMhC,UAAS,GAAvC,mBAAOiC,EAAP,KAAaC,EAAb,KAMA,OACI,sBAAKX,UAAU,kBAAf,UACKS,IAAMG,aAAaL,EAAS,CACzBhB,QAPO,WACfoB,GAASD,MAQJA,EACG,oBAAIV,UAAU,cAAd,SACKQ,EAAKK,KAAI,SAACC,EAAUC,GAAX,OACN,oBAAgBf,UAAU,YAA1B,SACKS,IAAMG,aAAaE,EAAU,CAC1BvB,QAAS,WACLuB,EAASE,MAAMzB,cAHlBwB,QASjB,SAKDE,IA9lCQ,SAAC,GAsBZ,IArBR1D,EAqBO,EArBPA,KACA2D,EAoBO,EApBPA,UACAL,EAmBO,EAnBPA,IACAM,EAkBO,EAlBPA,mBACAC,EAiBO,EAjBPA,WAiBO,IAhBPC,oBAgBO,aAfPC,mBAeO,MAfO,GAeP,EAdP/C,EAcO,EAdPA,YACAgD,EAaO,EAbPA,eACAC,EAYO,EAZPA,eAYO,IAXPC,kBAWO,MAXM,GAWN,MAVPC,uBAUO,MAVW,GAUX,MATPC,eASO,SARPC,EAQO,EARPA,YACAC,EAOO,EAPPA,SAOO,IANPC,oBAMO,MANQ,GAMR,MALPC,mBAKO,MALO,GAKP,MAJPC,uBAIO,MAJW,GAIX,MAHPC,sBAGO,cAFPC,uBAEO,OAFU,GAEV,GACDzH,IADC,EADP0H,eAEiBC,eACXC,GAAUC,cAChB,GAAoC7D,oBAAS,GAA7C,qBAAO8D,GAAP,MAAmBC,GAAnB,MACA,GAA8B/D,mBAAc,IAA5C,qBAAOgE,GAAP,MAAgBC,GAAhB,MACA,GAA8BjE,mBAAmB,IAAjD,qBAAOkE,GAAP,MAAgBC,GAAhB,MACA,GAAgCnE,mBAAS,IAAzC,qBAAOoE,GAAP,MAAiBC,GAAjB,MACA,GAAwBrE,oBAAS,GAAjC,qBAAasE,IAAb,aACMC,GAAY,CAAC,GAAI,GAAI,KAC3B,GAA8CvE,mBAAcyD,IAA5D,qBAAOe,GAAP,MAAwBC,GAAxB,MAEAtE,qBAAU,WACFyC,GACI9D,GAAQA,EAAK4F,OAAS,GACtBhC,EAAmB0B,GAAUtE,KAItC,CAACA,EAAasE,KAEjBjE,qBAAU,WACFsD,GAAeiB,OAAS,GACxBD,GAAmBhB,MAExB,CAACA,KAEJtD,qBAAU,WACN,GAAIrB,EAAK4F,OAAS,EAAG,CACjB,IAAIR,EAAUS,OAAOC,KAAKxC,GAAKyC,QAAO,SAAAC,GAClC,OAAON,GAAgBO,SAASD,MAEpCX,GAAWD,MAEhB,CAACM,GAAiB1F,IAErB,IASMkG,GAAsB,SAAAC,GACxB,MAAsBA,EAAEC,OAAlBC,EAAN,EAAMA,GAAIC,EAAV,EAAUA,QACNC,EAAcV,OAAOW,OAAO,GAAId,IAChCe,EAAqB,GAIrBA,EAHCH,EAGY,sBAAOC,GAAP,CAAoBF,IAFjBE,EAAYR,QAAO,SAAAC,GAAI,OAAIA,IAASK,KAIxDV,GAAmBc,GACnBvJ,GAASwJ,IAAkBC,WAAW,CAAElC,kBAAiBiB,gBAAiBe,MA2ExEG,GAA4B,SAACC,EAAaC,GAAd,OAC9B,mCACI,uBAAM3E,MAAO,CAAE4E,SAAU,WAAYC,KAAM,QAA3C,UAEmB,uBAAXH,GACuB,aAApBC,EAAEG,eAED,cAACC,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,sBAJR,SASI,cAAC,IAAD,CAASoB,KAAM,GAAItF,MAAO,CAAEuF,MAAO,eAKhC,uBAAXb,GACuB,aAApBC,EAAEG,eAED,cAACC,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,sBAJR,SASI,cAAC,IAAD,CAAKoB,KAAM,GAAItF,MAAO,CAAEuF,MAAO,WAK5B,uBAAXb,GACuB,cAApBC,EAAEG,eAED,cAACC,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,uBAJR,SASI,cAAC,IAAD,CAAeoB,KAAM,GAAItF,MAAO,CAAEuF,MAAOZ,EAAEa,eAKxC,uBAAXd,GACuB,cAApBC,EAAEG,eAED,cAACC,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,uBAJR,SASI,cAAC,IAAD,CAAUoB,KAAM,GAAItF,MAAO,CAAEuF,MAAOZ,EAAEa,qBAQxDC,GAAoB,SAACf,EAAaC,GAAd,OACtB,mCAE4B,cAApBA,EAAEG,eAEE,uBAAM9E,MAAO,CAAE4E,SAAU,WAAYC,KAAM,QAA3C,UAEmB,uBAAXH,GAC2B,SAAxBC,EAAEe,mBAED,cAACX,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,6BAJR,SASI,cAAC,IAAD,CAAgBoB,KAAM,GAAItF,MAAO,CAAEuF,MAAO,eAKvC,uBAAXb,GAC2B,WAAxBC,EAAEe,mBAED,cAACX,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,+BAJR,SASI,cAAC,IAAD,CAAkBoB,KAAM,GAAItF,MAAO,CAAEuF,MAAO,WAKzC,uBAAXb,GAC2B,QAAxBC,EAAEe,mBAED,cAACX,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,4BAJR,SASI,cAAC,IAAD,CAAeoB,KAAM,GAAItF,MAAO,CAAEuF,MAAOZ,EAAEa,qBAWrEG,GAAS,SAACjB,EAAa5J,GACzB,IAAM8K,EAAoBC,SAASC,iBAAiB,gBAC9CC,EAAmBF,SAASC,iBAAiB,eACnDE,MAAMC,KAAKL,GAAczE,KAAI,SAAC+E,GAAD,OAAmBA,EAASC,UAAUC,OAAO,aAC1EJ,MAAMC,KAAKF,GAAa5E,KAAI,SAACkF,GAAD,OAAkBA,EAAQF,UAAUC,OAAO,aACvElE,EAAYwC,GACZvC,EAASrH,GACY+K,SAASS,cAAT,WAA2B5B,EAA3B,YAAqC5J,IAClDqL,UAAUI,IAAI,WAUpBC,GAAqB,SAACC,EAAe5I,GACvC,IAAK4I,EAAe,MAAO,GAC3B,IAAIC,EAAQD,EAAcC,MAAM,KAIhC,OAHAA,EAAQA,EAAMvF,KAAI,SAACwF,EAActF,GAC7B,OAAO,uBAAM6C,GAAG,QAAoCrE,QAAS,kBAX9C,SAAC8G,EAAc9I,GAClC8E,GAAQlD,KAAK,CACTmH,SAAS,WAAD,OAAiC,cAApBtE,EAAkC,YAAc,iBAA7D,uBACRuE,OAAO,OAAD,OAASF,EAAT,qBAAkC9I,EAAKiJ,SAAvC,gBAAuDjJ,EAAKkJ,oBAA5D,gBAAuFlJ,EAAKmJ,wBAQ/BC,CAAeN,EAAc9I,IAAOyC,UAAU,mBAA1G,UAA8HqG,EAActF,EAAQqF,EAAMjD,OAAS,EAAI,KAAO,GAA9K,2BAAoCpC,QAmB7C6F,GAAwB,SAACC,GAC3B,OACI,qBAAKnH,MAAO,CACR,QAAW,OACX,cAAiB,MACjB,SAAY,QAHhB,SAMQmH,GAAYA,EAAShG,KAAI,SAACiG,EAAS/F,GAC/B,OAAO,mBAA4BrB,MAAO,CAAEqH,WAAY,UAAW9B,MAAO,QAAS+B,aAAc,QAASC,QAAS,cAAeC,YAAa,QAAxI,SAAmJJ,GAAnJ,kBAAmB/F,UAOxCoG,GAAkB,SAAC5J,GACrB,OACIA,GAAQA,EAAKsD,KAAI,SAACwD,EAAGtD,GACjB,OAAO,mBAAGrB,MAAO,CAAE0H,UAAW,OAAQC,aAAc,IAAKC,YAAa,QAA/D,SACH,iCAAM,4BAAIjD,EAAE7J,OAAZ,eAA2B6J,EAAEkD,MAA7B,sBADG,mBAA0FxG,QAMvGyG,GAAwB,SAACjK,GAC3B,OACIA,GAAQA,EAAKsD,KAAI,SAACwD,EAAGtD,GACjB,OAAO,mBAAGrB,MAAO,CAAE0H,UAAW,OAAQC,aAAc,IAAKC,YAAa,QAA/D,SACH,iCAAM,4BAAIjD,EAAE7J,OAAZ,eAA2B6J,EAAEoD,WAA7B,SADG,qBAA4F1G,QAMzG2G,GAAoB,SAACnK,GACvB,OAAQ,mBAAGmC,MAAO,CAAE0H,UAAW,OAAQC,aAAc,IAAKC,YAAa,QAA/D,SACJ,iCAAM,8BAAI/J,EAAJ,OAAN,oDAIFoK,GAAqB,SAACpK,GACxB,OACIA,GAAQA,EAAKsD,KAAI,SAACwD,EAAGtD,GACjB,OAAO,mBAAGrB,MAAO,CAAE0H,UAAW,OAAQC,aAAc,IAAKC,YAAa,QAA/D,SACH,iCAAM,4BAAIjD,EAAE7J,OAAZ,gBAA4B6J,EAAEuD,YAD3B,qBAA4F7G,QAqBzG8G,GAAc,SAAAnE,GAChB,MAAsBA,EAAEC,OAAlBC,EAAN,EAAMA,GAAIC,EAAV,EAAUA,QACc,cAApB7B,IACA4B,EAAKkE,OAAOlE,IAEhBlB,GAAW,GAAD,mBAAKD,IAAL,CAAcmB,KACnBC,GACDnB,GAAWD,GAAQa,QAAO,SAAAC,GAAI,OAAIA,IAASK,OAI7CmE,GAAiB,SAACxK,GACpB,GAAwB,wBAApByE,GAAiE,2BAApBA,EAA8C,CAC3F,GAA2B,SAAvBzE,EAAKiH,eAA4B,IAAIwD,KAAKzK,EAAK0K,UAAY,IAAID,KAC/D,MAAO,UACJ,GAA2B,SAAvBzK,EAAKiH,eAA4B,IAAIwD,KAAKzK,EAAK0K,SAAW,IAAID,KACrE,MAAO,UACJ,GAA2B,cAAvBzK,EAAKiH,cACZ,MAAO,UA8Db0D,GAAqB,WACvB,OAAO,gCACH,qBAAIxI,MAAO,CAAEyI,WAAY,OAAQC,gBAAiB,OAAQnD,MAAO,SAAjE,WAE0B,eAApBjD,GACyB,uBAApBA,GACoB,sBAApBA,IACF,oCAEoB,gBAApBA,GAAyD,cAApBA,IACnC,oBAAIhC,UAAU,QAAd,SACC,qBACIA,UAAU,yBACVN,MACI,CACI,SAAY,OACZ,OAAU,OACV,WAAc,UAN1B,SASI,cAAC2I,EAAA,EAAKC,QAAN,CAAc9N,KAAK,WAAW+N,SAAU,kBAjH5D/F,IAAeD,IACfG,GAAWnF,EAAKsD,KAAI,SAAC2H,GACjB,MAAwB,cAApBxG,EACO8F,OAAOU,EAAG5E,IAEV4E,EAAGC,oBAGdlG,IACAG,GAAW,MAwGsEhD,MAAO,CAAEgJ,OAAQ,iBAM1F/F,IAAWA,GAAQ9B,KAAI,SAACuD,EAAQrD,GAC5B,GAAe,aAAXqD,GACc,oBAAXA,GACW,0BAAXA,GACW,mBAAXA,GACW,YAAXA,GACW,cAAXA,GACW,oBAAXA,GACW,YAAXA,GACW,cAAXA,EAEH,OACI,oBACIpE,UAAU,QADd,SAII,sBACIA,UAAU,yBACVN,MACI,CACI,UAAuI,IAA3H,CAAC,kBAAmB,WAAY,iBAAkB,sBAAuB,aAAc,eAAeiJ,QAAQvE,GACpH,SACoE,IAApE,CAAC,UAAW,SAAU,WAAY,aAAauE,QAAQvE,GAAiB,QAAU,SANpG,UASI,8BACKvD,EAAIuD,GAAUvD,EAAIuD,GAAUA,IAG7BzC,GAEI,sBAAK3B,UAAU,UAAf,UACI,cAAC,IAAD,CAAiBgF,KAAM,GAAIhF,UAAS,qBAAgBoE,EAAhB,QAA8B7E,QAAS,kBAAM8F,GAAOjB,EAAQ,UAChG,cAAC,IAAD,CAAmBY,KAAM,GAAIhF,UAAS,sBAAiBoE,EAAjB,SAAgC7E,QAAS,kBAAM8F,GAAOjB,EAAQ,kBArBxH,iBAEmBrD,QA+BA,qBAAtBe,EAAa8G,MACe,qBAAtB9G,EAAa+G,OAAgE,IAAxClG,GAAQgG,QAAQ,qBACjE,oBAAI3I,UAAU,QAAQN,MAAO,CAAEoJ,SAAU,SAAzC,0BAGmC,qBAA7B/G,EAAYgH,eAAyE,IAAxCpG,GAAQgG,QAAQ,oBACnE,oBAAI3I,UAAU,QAAQN,MAAO,CAAEoJ,SAAU,QAAS,UAAa,UAA/D,qBAIqB,gBAApB9G,GACuB,cAApBA,GACoB,wBAApBA,GACoB,2BAApBA,GACoB,oBAApBA,IAEJ,oBAAIhC,UAAU,QAAQN,MAAO,CAAEoJ,SAAU,QAAS1B,UAAW,UAA7D,2BAMb4B,GAAmB,WACrB,OAAO,gCAECzL,GAAQA,EAAKsD,KAAI,SAACwD,EAAQtD,GAAT,OACb,qBAC0BrB,MAAO,CACzByI,WAAY,OACZf,UAAW,SACX9C,SAAU,WACV2E,OAAQ,EACRb,gBAAiBL,GAAe1D,IANxC,WAW0B,eAApBrC,GACyB,uBAApBA,GACoB,sBAApBA,IACF,6BAAKjB,EAAQ,KAEO,gBAApBiB,GAAyD,cAApBA,IACnC,oBAAIhC,UAAU,QAAd,SACC,qBACIA,UAAU,yBACVN,MACI,CACI,SAAY,OACZ,OAAU,OACV,WAAc,UAN1B,SASI,cAAC2I,EAAA,EAAKC,QAAN,CACI9N,KAAK,WACLoJ,GAAwB,cAApB5B,EAAkCqC,EAAET,GAAKS,EAAEoE,WAC/C5E,QAASpB,GAAQe,SAA6B,cAApBxB,EAAkCqC,EAAET,GAAKS,EAAEoE,YACrE/I,MAAO,CAAEgJ,OAAQ,WACjBH,SAAUV,SAOtBlF,GAAQ9B,KAAI,SAACuD,EAAa8E,GACtB,GAAe,aAAX9E,GACc,oBAAXA,GACW,0BAAXA,GACW,mBAAXA,GACW,cAAXA,GACW,YAAXA,GACW,oBAAXA,GACW,YAAXA,GACW,cAAXA,EAEH,OAAI9C,EAAYkC,SAASY,GAEjB,qBACI1E,MACI,CACIqH,WAAuB,iBAAX3C,EAA4BC,EAAE8E,UAAY,GACtDlE,MAAkB,iBAAXb,GAA6BC,EAAE8E,UAAY,QAAU,IAIpEnJ,UAAS,uBAAkBoJ,YAAU/E,EAAED,GAASA,GAAU,YAAc,aAR5E,UAWQD,GAA0BC,EAAQC,GAGlCc,GAAkBf,EAAQC,GAGf,eAAXD,GAA+C,gBAApBpC,GAC3B,sBACItC,MAAO,CACH2J,QAAS,OACTC,WAAY,UAHpB,UAMI,cAAC,IAAD,CAActE,KAAM,KACpB,sBACItF,MAAO,CAAE4H,YAAa,SACtB/H,QAAS,kBAAMiC,EAAe6C,EAAGD,IACjCpE,UAAU,mBAHd,SAKKqE,EAAED,QAKA,eAAXA,GAA+C,gBAApBpC,GAC3B,sBAAMzC,QAAS,kBAAMiC,EAAe6C,EAAGD,IAASpE,UAAU,mBAA1D,SACKqE,EAAED,OArCf,gBAOkB8E,IAqCX,yBAAX9E,EACO,6BAA6BC,EAAED,GAAU,MAAQ,MAAjD,gBAAkB8E,IAEd,eAAX9E,EACO,6BAA6BC,EAAED,GAAU,IAAM,KAA/C,gBAAkB8E,IAEd,6BAAX9E,EACO,6BAA6BC,EAAED,GAAU,MAAQ,MAAjD,gBAAkB8E,IAEd,gBAAX9E,EACO,8BAtWfmF,EAsW+DlF,EAAED,GApWrFmF,GAAYA,EAAS1I,KAAI,SAAC2I,EAASzI,GAC/B,OAAO,oBAAGrB,MAAO,CAAE0H,UAAW,OAAQE,YAAa,QAA5C,UACH,+BAAOkC,EAAQC,OADZ,IACyB,uBAC5B,+BAAOD,EAAQE,UAFZ,kBAAsE3I,SAmW9C,gBAAkBmI,IAEd,oBAAX9E,GACc,wBAAXA,EAEI,6BAA6BwC,GAAsBvC,EAAED,KAArD,gBAAkB8E,IAEL,kBAApBlH,GAAmD,gBAAXoC,GAC1B,gBAAXA,EAGQ,aAAXA,EACO,6BAA6B+C,GAAgB9C,EAAED,KAA/C,gBAAkB8E,IAEd,mBAAX9E,EACO,6BAA6BoD,GAAsBnD,EAAED,KAArD,gBAAkB8E,IAEd,eAAX9E,EACO,6BAA6BsD,GAAkBrD,EAAED,KAAjD,gBAAkB8E,IAEL,kBAApBlH,GAAkD,gBAAXoC,EAChC,6BAA6BuD,GAAmBtD,EAAED,KAAlD,gBAAkB8E,IAEd,eAAX9E,EACO,8BAxRjBuF,EAwR+DtF,EAAED,GAvRlFuF,EAIG,qBAAK3J,UAAU,oBAAf,SAEQ2J,GAAcA,EAAW9I,KAAI,SAAC+I,EAAI7I,GAC9B,OAAO,cAAC0D,EAAA,EAAD,CAEHC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,eAACC,EAAA,EAAD,CAASnB,GAAG,gBAAZ,UACKgG,EAAGH,KADR,MACiBG,EAAGC,SANrB,SAUH,sBAAM7J,UAAU,cAAcN,MAAO,CAAEoK,WAAsB,IAAV/I,EAAc,SAAW,GAAIsG,aAAc,KAA9F,SAAsGuC,EAAGH,KAAKM,OAAO,MAVlH,aACQhJ,SAPxB,MAsR4B,gBAAkBmI,IAEd,YAAX9E,EACO,6BAA4B,cAAC,IAAD,CAAmBY,KAAM,MAArD,gBAAkBkE,IAEd,WAAX9E,EACO,6BAA4B,cAAC,IAAD,CAAsBY,KAAM,MAAxD,gBAAkBkE,IAEd,aAAX9E,EACO,6BAA4B,cAAC,IAAD,CAAwBY,KAAM,MAA1D,gBAAkBkE,IAEd,aAAX9E,EAxQT,SAAC7G,GACxB,OAAIA,EAAI,aACI,oBACJyC,UAAS,yBADL,SAGJ,sBAAKN,MAAO,CACR2J,QAAS,eADb,UAGI,cAAC,IAAD,CAAmBrE,KAAM,KACzB,qBAAKhF,UAAU,6BAA6BT,QAAS,kBAAMuC,EAAakI,aAAazM,IAArF,SACKA,EAAI,oBAKV,qBACHyC,UAAU,kBADP,UAGH,cAAC,IAAD,CACIgF,KAAM,KAEW,wBAApBhD,EAA4C,UAAY,sBAoP1BiI,CAAmB5F,GAEzBA,EAAED,GAGQ,kBAAXA,EACO,qBAA4B1E,MAAO,CAAE0H,UAAW,QAAhD,UACH,sBAAM1H,MAAO,CACT0I,gBAAwC,wBAAvB/D,EAAC,cAA8C,UAAmC,qBAAvBA,EAAC,cAA2C,mBAAqB,UAC7IY,MAAO,QACPgC,QAAS,aACTD,aAAc,SAJlB,SAKI3C,EAAED,KAAe,wBAEO,wBAAvBC,EAAC,eAAsE,qBAAvBA,EAAC,gBAC/C,qCACC,4BAAG,mBAAG6F,KAAM7F,EAAC,QAAV,0BAAyC,uBAC5C,4BAAG,mBAAG6F,KAAM7F,EAAC,UAAV,iCAXR,gBAAkB6E,IAgBd,uBAAX9E,EACQ,6BACJ,uBAAM1E,MAAO,CAAE2J,QAAS,OAAQC,WAAY,SAAUa,eAAgB,UAAtE,UACK9F,EAAED,GACH,cAACK,EAAA,EAAD,CACIC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,SACKS,EAAC,iBALd,SASI,cAAC,IAAD,CAAsBW,KAAM,GAAItF,MAAO,CAAEoK,WAAY,iBAKtD,kBAAX1F,EAEI,oBAAIpE,UAAS,uBAAkBoJ,YAAU/E,EAAED,GAASA,GAAU,YAAc,aAA5E,SACK8B,GAAmB7B,EAAED,GAASC,KAIvC5C,EAAW+B,SAASY,GAEhB,oBACI1E,MAAO,CAAE0I,gBAAgB,GAAD,OAAK/D,EAAED,KADnC,SAGE,IAHF,gBAEkB8E,IAMtB,qBACIlJ,UAAS,UAAKoJ,YAAU/E,EAAED,GAASA,GAAU,YAAc,aAD/D,WAI0C,IAArC1C,EAAgBiH,QAAQvE,GAAiB,IAAM,GAC/C,IACAC,EAAED,KANP,gBAEkB8E,IAxDX,6BAA4B,mCAA5B,gBAAkBA,IA9BlB,6BAA6BtC,GAAsBvC,EAAED,KAArD,gBAAkB8E,IAzQpC,IAACS,EAtGEJ,KAidkC,qBAA7BxH,EAAYgH,eAAyE,IAAxCpG,GAAQgG,QAAQ,oBACnE,oBAA0B3I,UAAU,QAApC,SACC,cAACoK,EAAA,EAAD,CAAQC,QAAQ,OAAO9K,QAAS,kBAAMwC,EAAYgH,aAAa1E,IAA/D,sBADD,eAAiBtD,IAKS,qBAAtBe,EAAa8G,MAEhB,mCACI,oBAA0B5I,UAAU,QAApC,SACI,uBAAMN,MAAO,CAAE2J,QAAS,OAAQc,eAAgB,SAAUb,WAAY,UAAtE,UAE8B,YAAtBjF,EAAEiG,iBACC,cAAC7F,EAAA,EAAD,CACCC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,kBAJL,SASC,cAAC,IAAD,CAAUrE,QAAS,kBAAMuC,EAAa8G,KAAK7H,IAAQiE,KAAM,GAAItF,MAAO,CAAE6K,OAAQ,UAAW7B,OAAQ,eAI/E,YAAtBrE,EAAEiG,iBACC,cAAC7F,EAAA,EAAD,CACCC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,kBAJL,SASC,cAAC,IAAD,CAAOrE,QAAS,kBAAMuC,EAAa8G,KAAK7H,IAAQiE,KAAM,GAAItF,MAAO,CAAE6K,OAAQ,UAAW7B,OAAQ,eAI5E,YAAtBrE,EAAEiG,iBAEF,cAAC7F,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,oBAJR,SASI,cAAC,IAAD,CAASrE,QAAS,kBAAMuC,EAAa0I,OAAOzJ,IAAQiE,KAAM,GAAItF,MAAO,CAAE6K,OAAQ,UAAW7B,OAAQ,eAIhF,aAAtBrE,EAAEiG,iBAEF,cAAC7F,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,6BAJR,SASI,cAAC,IAAD,CAAYrE,QAAS,kBAAMuC,EAAa2I,OAAO1J,IAAQiE,KAAM,GAAItF,MAAO,CAAE6K,OAAQ,UAAWtF,MAAO,MAAOyD,OAAQ,eAIjG,YAAtBrE,EAAEiG,iBAEF,cAAC7F,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,2BAJR,SASI,cAAC,IAAD,CAAcrE,QAAS,kBAAMuC,EAAa2I,OAAO1J,IAAQiE,KAAM,GAAItF,MAAO,CAAE6K,OAAQ,UAAWtF,MAAO,mBAAoByD,OAAQ,gBAK5G,YAAtBrE,EAAEiG,iBACuB,aAAtBjG,EAAEiG,kBAE2B,qBAAzBxI,EAAa4I,SAExB,cAACjG,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,qBAJR,SASI,cAAC,IAAD,CAAWrE,QAAS,kBAAMuC,EAAa4I,QAAQ3J,IAAQiE,KAAM,GAAItF,MAAO,CAAE6K,OAAQ,UAAWtF,MAAO,mBAAoByD,OAAQ,eAI9G,YAAtBrE,EAAEiG,iBAEF,cAAC7F,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,qBAJR,SASI,cAAC,IAAD,CAAUoB,KAAM,GAAItF,MAAO,CAAEuF,MAAOZ,EAAEa,UAAWqF,OAAQ,mBA1GzE,eAAiBxJ,MAmHI,qBAAtBe,EAAa+G,WACQ8B,IAAzBtG,EAAC,iBAEA,mCACI,oBAA0BrE,UAAU,QAApC,SACI,sBAAMN,MAAO,CAAE2J,QAAS,OAAQc,eAAgB,SAAUb,WAAY,UAAtE,SACK,mBAAG/J,QAAS,kBAAMuC,EAAa+G,KAAKxE,EAAC,kBAAsB3E,MAAO,CAAE6K,OAAQ,UAAW7B,OAAQ,UAAWzD,MAAO,WAAjH,2BAFT,eAAiBlE,OAUD,gBAApBiB,GACuB,cAApBA,GACoB,wBAApBA,GACoB,2BAApBA,GACoB,oBAApBA,IAEJ,qBAA0BhC,UAAU,QAAQN,MAAO,CAAEoJ,SAAU,QAAS1B,UAAW,UAAnF,UAEoC,qBAAxBtF,EAAa8I,SAChBvG,EAAC,cACF,iCACC,cAACI,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,oBAJR,SASI,cAAC,IAAD,CAAsBrE,QAAS,kBAAMuC,EAAa8I,OAAOvG,IAAIW,KAAM,GAAItF,MAAO,CAAEgJ,OAAQ,eAV7F,UAgB0B,qBAAtB5G,EAAa+G,MACjB,iCACC,cAACpE,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,kBAJR,SASI,cAAC,IAAD,CAAcrE,QAAS,kBAAMuC,EAAa+G,KAAKxE,IAAIW,KAAM,GAAItF,MAAO,CAAEgJ,OAAQ,eAVnF,UAgB8B,qBAA1B5G,EAAa+I,WAEK,2BAApB7I,GAAgDqC,EAAC,cAC3B,gBAApBrC,GACoB,cAApBA,GACoB,wBAApBA,GACoB,oBAApBA,IAEJ,iCACC,cAACyC,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,sBAJR,SASI,cAAC,IAAD,CACIlE,MAAO,CACHuF,MAA2B,wBAApBjD,GAA8CqC,EAAC,aAA+B,QAAZ,UACzEqE,OAA4B,wBAApB1G,GAA8CqC,EAAC,aAAmC,UAAhB,eAE9E9E,QAAS,YACmB,wBAApByC,GAA8CqC,EAAC,eAG/CvC,EAAa+I,SAASxG,IAG5BW,KAAM,OAtBjB,UA4B2B,qBAAvBlD,EAAagJ,OACjB,iCACC,cAACrG,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,mBAJR,SASI,cAAC,IAAD,CAAUoB,KAAM,GAAIzF,QAAS,kBAAMuC,EAAagJ,MAAMzG,IAAI3E,MAAO,CAAEgJ,OAAQ,eAVhF,UAgB4B,qBAAxB5G,EAAa0I,QAEpB,+BACI,cAAC/F,EAAA,EAAD,CACIC,UAAU,SACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAACC,EAAA,EAAD,CAASnB,GAAE,gBAAX,oBAJR,SASI,cAAC,IAAD,CAAiBrE,QAAS,kBAAMuC,EAAa0I,OAAOnG,IAAIW,KAAM,GAAItF,MAAO,CAAEgJ,OAAQ,mBAtGhG,eAAiB3H,MArW5B,eACiBA,UAifjC,OACI,sBAAKf,UAAU,kBAAf,UACKqB,GAAgBD,EAAa,EA/9BlC,eAACxB,EAAA,EAAD,CAAKI,UAAU,oBAAf,WAESkB,IACuB,YAApBc,GACuB,aAApBA,GACoB,cAApBA,GACoB,QAApBA,IAEP,cAACoI,EAAA,EAAD,CAAQC,QAAQ,OAAO3K,MAAO,CAAEwH,YAAa,QAAU3H,QAAS,kBAAMwD,IAAQ,IAA9E,uBAGC7B,IAEuB,gBAApBc,GACuB,wBAApBA,GACoB,2BAApBA,GACoB,cAApBA,IAEJ,sCAE0B,gBAApBA,GAAyD,cAApBA,IACtCS,IAAWA,GAAQU,OAAS,GAC5B,cAACiH,EAAA,EAAD,CAAQC,QAAQ,OAAO3K,MAAO,CAAEwH,YAAa,QAA7C,oBAEJ,cAAC,EAAD,CACI3G,QAAS,wBAAQb,MAAO,CAAEgJ,OAAQ,WAAzB,+BACTlI,KAAO4C,OAAOC,KAAKxC,GAAMA,KAAI,SAACkK,GAC1B,OAAO,yBACHxL,QAAS,aADN,UAGH,cAAC8I,EAAA,EAAKC,QAAN,CACI9N,KAAK,WACLoJ,GAAImH,EAEJC,eAAgB/H,GAAgBO,SAASuH,GACzCrL,MAAO,CAAEgJ,OAAQ,UAAWuC,MAAO,OAAQ/D,YAAa,QACxD3H,QAASkE,KAEb,+BACK5C,EAAIkK,gBAO7B,eAAC1C,EAAA,EAAK6C,MAAN,CAAYC,GAAIvL,IAAhB,UACI,cAACyI,EAAA,EAAK+C,MAAN,CACIC,QAAM,EACNvL,GAAI,EACJwL,GAAI,GACJ5L,MAAO,CAAE0H,UAAW,SAJxB,kBAKA,cAACvH,EAAA,EAAD,CAAKC,GAAI,EAAGwL,GAAI,GAAhB,SACI,cAACjD,EAAA,EAAKC,QAAN,CACI6C,GAAG,SACH1B,KAAK,SACLlB,SAAU,SAAC7E,GAAD,OA3E1BZ,GA2EmDY,EA3EjCC,OAAO4H,YACzBhK,EAAe,IA2ECiK,aAAc3I,GAJlB,SAMQG,IACGA,GAAUnC,KAAI,SAACmE,EAAMjE,GACpB,OAAQ,wBAA8BwK,MAAOvG,EAArC,SAA4CA,GAA5C,eAAqBjE,iBAk6BC,KAClD,cAAC0K,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAC7G,KAAK,KAAKhF,UAAU,cAAcN,MAAO,CAAE2H,aAAc,GAAlG,SACKjG,EAAa,EA9BtB,qCAEQ8G,KAGAc,QAMR,gCACI,oBAAIhJ,UAAU,aAAaN,MAAO,CAAEyI,WAAY,OAAQC,gBAAiB,UAAWhB,UAAW,UAA/F,SACI,kDAmBHlG,GAbL,qBAAKlB,UAAS,wBAAmBiC,GAAgB,KAAO,iBAAxD,SACI,cAAC,IAAD,CAAcjC,UAAU,UAAUgF,KAAM,OAavC3D,GACG,cAAC,EAAD,CACIhD,MAAO+C,EACP9C,aAAcuE,GACdtE,YAAaA,EACbC,aAAc,SAACsN,GAhgC3BvK,EAggC8DuK,W,0KCnwBvDC,IAvUO,SAAC,GAAqI,IAAnI/J,EAAkI,EAAlIA,gBAAiBgK,EAAiH,EAAjHA,OAAQC,EAAyG,EAAzGA,cAAeC,EAA0F,EAA1FA,oBAAqBC,EAAqE,EAArEA,iBAAkBC,EAAmD,EAAnDA,kBAAmBC,EAAgC,EAAhCA,qBACjHC,EAAmBC,mBACnBC,EAAkBD,mBACxB,EAAsD9N,oBAAc,GAApE,mBAAOgO,EAAP,KAA4BC,EAA5B,KACA,EAA0BjO,mBAAc,CACpCkO,mBAAoB,KACpBC,iBAAkB,KAClBC,eAAgB,KAChBC,aAAc,KACdC,cAAe,KACfC,YAAa,KACbC,iBAAkB,KAClBC,eAAgB,OARpB,mBAAOC,EAAP,KAAcC,EAAd,KAWAxO,qBAAU,WACDyO,YAA6BlB,GAG9BO,GAAuB,GAFvBA,GAAuB,KAI5B,CAACP,IAEJ,IAAMmB,EAAkBC,mBAAQ,uCAAC,WAAOC,GAAP,SAAAvS,EAAA,sDAC7BgR,EAAcuB,GADe,2CAAD,sDAE7B,KAzBoJ,4CA2BvJ,WAAiC9J,GAAjC,SAAAzI,EAAA,sDACIqS,EAAgB5J,EAAEC,OAAO4H,OAD7B,4CA3BuJ,sBA+BvJ,IAqCMkC,EAAW,uCAAG,sBAAAxS,EAAA,sDAEhBuR,EAAgBkB,QAAQC,QACxBrB,EAAiBoB,QAAjB,cAA0CnC,MAAQ,GAC1B,cAApBvJ,EAEAoL,EAAS,CACLT,mBAAoB,KACpBC,iBAAkB,KAClBC,eAAgB,KAChBC,aAAc,KACdC,cAAe,KACfC,YAAa,KACbC,iBAAkB,KAClBC,eAAgB,QAIpBZ,EAAiBoB,QAAjB,wBAAoDnC,MAAQ,GAC5De,EAAiBoB,QAAjB,sBAAkDnC,MAAQ,GAC1De,EAAiBoB,QAAjB,uBAAmDnC,MAAQ,IAEvC,wBAApBvJ,IACAsK,EAAiBoB,QAAjB,aAAyCnC,MAAQ,IAErDW,EAAoB,IAzBJ,2CAAH,qDA4BX0B,EAAc,SAACjI,EAAMkI,GACvB,IAAMC,EAAW1K,OAAOW,OAAO,GAAIoJ,GACnCW,EAASnI,GAAQkI,EACjBT,EAASU,IAGb,OACI,eAAC,IAAD,CAAKhO,GAAwB,wBAApBkC,EAA4C,EAAI,GAAIsJ,GAAwB,wBAApBtJ,EAA4C,EAAI,GAAIhC,UAAWgM,EAAO+B,aAAvI,UACI,cAAC,IAAD,CACI/I,KAAM,GACNhF,UAAWgM,EAAOzF,SACtB,cAAC,IAAK+B,QAAN,CACI9N,KAAK,OACLiP,KAAK,qBACLzJ,UAAWgM,EAAOgC,mBAClBC,YAAa,kBAAM5B,GAAqB,IACxC9D,SAAU,SAAC7E,GAAD,OAhHiI,2CAgH1HwK,CAAkBxK,IACnCyK,YAAY,WAEhB,cAAC,IAAD,CACInJ,KAAM,GACNhF,UAAS,UAAKgM,EAAOoC,cAAZ,YAA6B3B,EAAsBT,EAAO1M,OAAS0M,EAAOqC,UACnF9O,QAAS,kBAAM8M,GAAsBD,MACzC,qBAAKpM,UAAS,UAAKgM,EAAOsC,eAAZ,YAA8BlC,EAAoBJ,EAAOpH,KAAOoH,EAAOnH,MAArF,SACI,cAAC,IAAD,CAAM0J,IAAKjC,EAAkBkC,SAAU,SAAC9K,GAAD,OAzFtB,SAACA,GAG1B,GAFAA,EAAE+K,iBACF/B,GAAuB,GACnBN,EAAmB,CACnB,IAAIsC,EAAyBtL,OAAOW,OAAO,GAAIoI,GAC/C,EAOIG,EAAiBoB,QANjBiB,EADJ,EACIA,cACAC,EAFJ,EAEIA,cACAC,EAHJ,EAGIA,wBACAC,EAJJ,EAIIA,sBACAC,EALJ,EAKIA,uBACAC,EANJ,EAMIA,aAGJN,EAAkBO,YAAsC,KAAxBN,EAAcpD,MAAeoD,EAAcpD,MAAQ,KACnFmD,EAAkBQ,aAAuC,KAAxBN,EAAcrD,MAAeqD,EAAcrD,MAAQ,KAC5D,cAApBvJ,GAEA0M,EAAkB/B,mBAAqBQ,EAAMR,mBAAqBwC,YAAkChC,EAAMR,oBAAsB,KAChI+B,EAAkB9B,iBAAmBO,EAAMP,iBAAmBuC,YAAkChC,EAAMP,kBAAoB,KAC1H8B,EAAkB7B,eAAiBM,EAAMN,eAAiBsC,YAAkChC,EAAMN,gBAAkB,KACpH6B,EAAkB5B,aAAeK,EAAML,aAAeqC,YAAkChC,EAAML,cAAgB,KAC9G4B,EAAkB3B,cAAgBI,EAAMJ,cAAgBoC,YAAkChC,EAAMJ,eAAiB,KACjH2B,EAAkB1B,YAAcG,EAAMH,YAAcmC,YAAkChC,EAAMH,aAAe,KAC3G0B,EAAkBU,gBAAkBjC,EAAMF,iBAAmBkC,YAAkChC,EAAMF,kBAAoB,KACzHyB,EAAkBW,cAAgBlC,EAAMD,eAAiBiC,YAAkChC,EAAMD,gBAAkB,OAGnHwB,EAAkBY,sBAA0D,KAAlCT,EAAwBtD,MAAesD,EAAwBtD,MAAQ,KACjHmD,EAAkBjI,oBAAsD,KAAhCqI,EAAsBvD,MAAeuD,EAAsBvD,MAAQ,KAC3GmD,EAAkBhI,qBAAwD,KAAjCqI,EAAuBxD,MAAewD,EAAuBxD,MAAQ,KAC9GmD,EAAkBa,YAAqC,KAAvBP,EAAazD,MAAeyD,EAAazD,MAAQ,MAErFW,EAAoBwC,IAwD8Bc,CAAqB9L,IAAnE,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAK+L,GAAI,GAAI3P,GAAI,GAAjB,UACI,eAAC,IAAKoL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,YAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAKhD,QAAN,CAActI,UAAU,sBAAsBxF,KAAK,OAAOiP,KAAK,oBAEnE,cAAC,IAAK2B,MAAN,CAAYpL,UAAU,qBAAtB,SAAgE,gBAApBgC,EAAoC,cAAgB,qBAEpG,eAAC,IAAKkJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CAAeiD,IAAK/B,MAExB,cAAC,IAAKpB,MAAN,CAAYpL,UAAU,qBAAtB,SAAgE,gBAApBgC,EAAoC,oCAAsC,qBASlG,wBAApBA,GAEA,eAAC,IAAKkJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAKhD,QAAN,CACItI,UAAU,sBACVxF,KAAK,OACLiP,KAAK,mBAEb,cAAC,IAAK2B,MAAN,CAAYpL,UAAU,qBAAtB,6BAIgB,cAApBgC,GACG,qCACC,eAAC,IAAKkJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAKhD,QAAN,CACItI,UAAU,sBACVxF,KAAK,OACLiP,KAAK,8BAEb,cAAC,IAAK2B,MAAN,CAAYpL,UAAU,qBAAtB,wCAEJ,eAAC,IAAKkL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAKhD,QAAN,CACItI,UAAU,sBACVxF,KAAK,OACLiP,KAAK,4BAEb,cAAC,IAAK2B,MAAN,CAAYpL,UAAU,qBAAtB,sCAEJ,eAAC,IAAKkL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAKhD,QAAN,CACItI,UAAU,sBACVxF,KAAK,OACLiP,KAAK,6BAEb,cAAC,IAAK2B,MAAN,CAAYpL,UAAU,qBAAtB,0CAKY,cAApBgC,GACG,qCACC,cAAC,IAAD,CAAKsJ,GAAI,GAAT,SACI,eAAC,IAAD,WACI,eAAC,IAAKJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,mBACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,qBAAsBC,IACtDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,qCAEJ,eAAC,IAAKkL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,iBACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,mBAAoBC,IACpDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,wCAIZ,cAAC,IAAD,CAAKsL,GAAI,GAAT,SACI,eAAC,IAAD,WACI,eAAC,IAAKJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,eACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,iBAAkBC,IAClDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,iCAEJ,eAAC,IAAKkL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,aACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,eAAgBC,IAChDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,oCAIZ,cAAC,IAAD,CAAKsL,GAAI,GAAT,SACI,eAAC,IAAD,WACI,eAAC,IAAKJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,cACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,gBAAiBC,IACjDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,gCAEJ,eAAC,IAAKkL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,YACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,cAAeC,IAC/CgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,mCAIZ,cAAC,IAAD,CAAKsL,GAAI,GAAT,SACI,eAAC,IAAD,WACI,eAAC,IAAKJ,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,iBACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,mBAAoBC,IACpDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,mCAEJ,eAAC,IAAKkL,MAAN,CAAYC,GAAItL,IAAKG,UAAU,OAA/B,UACI,cAAC,IAAD,CAAKF,GAAI,GAAIwL,GAAI,GAAjB,SACI,cAAC,IAAD,CACIoE,OAAQ,aACR1P,UAAU,sBACV2P,iBAAkB,KAClBC,eAAgB,KAChBrE,MAAO4B,EAAK,eACZ5E,SAAU,SAACsF,GAAD,OAAUD,EAAY,iBAAkBC,IAClDgC,gBAAiB,WAEzB,cAAC,IAAKzE,MAAN,CAAYpL,UAAU,qBAAtB,yCAOpB,cAAC,IAAD,CAAKA,UAAWgM,EAAO8D,aAAvB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQzF,QAAQ,OAAO7P,KAAK,SAA5B,oBAAqD,IACrD,cAAC,IAAD,CAAQ6P,QAAQ,OAAO9K,QAAS,kBAAMkO,KAAtC,mBAAoE,IACpE,cAAC,IAAD,CAAQpD,QAAQ,GAAG9K,QAAS,kBAAM8M,GAAqB,IAAvD,uC,iCCpUpC,qDAOa0D,EAA+B,CACxCC,mBAAoB,SAACC,GAAD,OAAoB,SAACxV,GAKrCA,EAJuB,CAAED,KAAM0V,IAAmBC,+BAMlDC,IAAgBJ,mBAAmBC,GAC9BnV,MACG,SAAAuV,GACI5V,EARI,SAAC4V,GAAD,MAAgB,CAAE7V,KAAM0V,IAAmBI,6BAA8BjV,QAASgV,GAQ7E/U,CAAQ+U,OAErB,SAAA9U,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAM0V,IAAmBK,6BAA8BlV,QAASE,GAU9EE,CAAQF,SAKjCiV,oBAAqB,SAACP,GAAD,OAAoB,SAACxV,GAKtCA,EAJuB,CAAED,KAAMiW,IAAoBC,gCAMnDN,IAAgBI,oBAAoBP,GAC/BnV,MACG,SAAAuV,GACI5V,EARI,SAAC4V,GAAD,MAAgB,CAAE7V,KAAMiW,IAAoBE,8BAA+BtV,QAASgV,GAQ/E/U,CAAQ+U,OAErB,SAAA9U,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAMiW,IAAoBG,8BAA+BvV,QAASE,GAUhFE,CAAQF,OAEvBsV,SAAQ,kBAAMpW,EAAS,CAAED,KAAMiW,IAAoBK,mCAE7DC,sBAAuB,SAACnN,GAAD,OAAQ,SAACnJ,GAK5BA,EAJuB,CAAED,KAAMwW,IAAsBC,kCAMrDb,IAAgBW,sBAAsBnN,GACjC9I,MACG,SAAAuV,GACI5V,EARI,SAAC4V,GAAD,MAAgB,CAAE7V,KAAMwW,IAAsBE,gCAAiC7V,QAASgV,GAQnF/U,CAAQ+U,OAErB,SAAA9U,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAMwW,IAAsBG,gCAAiC9V,QAASE,GAUpFE,CAAQF,OAEvBsV,SAAQ,kBAAMpW,EAAS,CAAED,KAAMwW,IAAsBI,uC,qOCNpDC,EAlDQ,SAACC,GACpB,MAA0B7S,mBAAc,MAAxC,mBAAO8S,EAAP,KAAcC,EAAd,KAyCA,MAAO,CACHD,EACA,CACIE,eA3CiB,uCAAG,WAAOH,GAAP,qBAAArW,EAAA,sDAExB,GADIyW,EAAe,KACE,IAAjBJ,EAAMnO,OACNqO,EAAS,CACLE,UACAC,KAAML,EAAM,SAEb,CAGH,IAFMM,EAAMC,EAAQ,IAARA,GACRC,EAAkB,KACb5S,EAAI,EAAGA,EAAIoS,EAAMnO,OAAQjE,IACR,gBAAlBoS,EAAMpS,GAAGuK,OACTqI,EAAaR,EAAMpS,IAED,oBAAlBoS,EAAMpS,GAAG1E,MAAgD,iCAAlB8W,EAAMpS,GAAG1E,OAChDkX,EAAUJ,EAAMpS,IAEfwS,GAA6B,gBAAlBJ,EAAMpS,GAAGuK,MACrBmI,EAAID,KAAKL,EAAMpS,GAAGuK,KAAM6H,EAAMpS,IAGjCwS,EAYDF,EAAS,CACLM,aACAH,KAAMD,IAbVE,EAAIG,cAAc,CAAEvX,KAAM,SACrBM,MAAK,SAACkX,GACH,OAAO,IAAIC,KAAK,CAACD,GAAU,UAAW,CAAExX,KAAM,oCAEjDM,MAAK,SAAC6W,GACHH,EAAS,CACLM,aACAH,KAAMA,OA7BF,2CAAH,yD,OCgUdO,IAjTQ,SAAC,GAAuF,IAArFtN,EAAoF,EAApFA,KAAMuN,EAA8E,EAA9EA,OAAmBnG,GAA2D,EAAtEoG,UAAsE,EAA3DpG,QAAQhK,EAAmD,EAAnDA,gBAAiBuE,EAAkC,EAAlCA,OAChE8L,GADkG,EAA1BC,QAC3DC,sBAAbF,UAEF5X,GADU8R,mBACCnK,eACjB,EAA2CiP,EAAe,MAA1D,mBAAOmB,EAAP,KAAuBf,EAAvB,KAAuBA,eACvB,EAAoChR,IAAMhC,UAAS,GAAnD,mBAAOgU,EAAP,KAAmBC,EAAnB,KACMC,EAAWlS,IAAM8L,OAAY,MACnC,EAA0B9N,mBAAc,IAAxC,mBAAO6S,EAAP,KAAcsB,EAAd,KACA,EAAwCnU,mBAAc,MAAtD,mBAAqBoU,GAArB,WACA,EAAgCpU,mBAAc,MAA9C,mBACA,GADA,UACgDA,mBAAS,KAAzD,mBACA,GADA,UAC0CA,oBAAc,IAAxD,mBAAOqU,EAAP,KAAsBC,GAAtB,KACA,GAAkCtU,mBAAc,CAC5CuU,kBAAkB,EAClBC,UAAU,IAFd,qBAAOC,GAAP,MAAkBC,GAAlB,MAIA,GAAwC1U,oBAAS,GAAjD,qBAAO2U,GAAP,MAAqBC,GAArB,MACAzU,qBAAU,WACN,IAAM0U,EAAOC,IAAYC,UACzBX,EAAgBS,KACjB,IAEH,IAAMG,GAAiB,SAACC,GACpB,IAAIC,GAAc,EACZpY,EAAa,CACfoW,MAAM,GAKV,IAAK,IAAIiC,KAHY,IAAjBF,EAAQ/B,OACRpW,EAAK,kBAAuB,GAEhBmY,EACPA,EAAQE,IAAyB,KAAjBF,EAAQE,KACzBrY,EAAMqY,IAAO,GAGrB,IAAK,IAAIC,KAAKtY,EACNA,EAAMsY,KACNF,GAAc,GAItB,OADAR,GAAa5X,GACNoY,GAGX/U,qBAAU,WACF4T,GAAiD,OAAjCsB,KAAKC,UAAUvB,IAC/BwB,OAEL,CAACxB,IAEJ,IAAMyB,GAAe,uCAAG,WAAOvQ,GAAP,SAAAzI,EAAA,sDACpByI,EAAE+K,iBACEgF,GAAe,CACf9B,KAAML,EAAMnO,WAEZ4P,IAAiB,GACjBtB,EAAeH,IANC,2CAAH,sDAUf0C,GAAU,uCAAG,4CAAA/Y,EAAA,yDACfoY,IAAgB,GACVa,EAAS,CACXvR,QAAS,CAAE,eAAgB,wBAE3BwR,EALW,UAKEC,iFALF,YAKqCA,0BALrC,gBAMPzC,EAAqBa,EAArBb,KAAMG,EAAeU,EAAfV,aACU,eAApB9P,GAAoCsP,EAAMnO,OAAS,IAAM2O,EAP9C,uBAQXiB,IAAiB,GACjBM,IAAgB,GATL,6BAYXgB,EAAgB,IAAIC,SAZT,SAcO,oBAAd3C,EAAKnX,MAA4C,iCAAdmX,EAAKnX,KAdjC,wBAeP6Z,EAASE,OAAO,QAAS5C,GACzB0C,EAASE,OAAO,QAASzC,GACzBuC,EAASE,OAAO,iBAAkBT,KAAKC,UAAU,CAAE,SAAY,SAAU,QAAW,QACpFI,EAAO,UAAMC,iFAAN,YAAyCA,0BAAzC,qBAlBA,UAmBgBI,IAAYC,KAAKN,EAASE,EAAUH,GAnBpD,eAmBDQ,EAnBC,OAoBDC,EAAOC,YAAeF,GApBrB,UAqBwBF,IAAYC,KAAZ,UAAoBL,iFAApB,YAAuDA,0BAAvD,0BAC3B,CACI,QAAW,KACX,SAAYO,EAAKD,SAASG,QAAQ,GAClC,OAAUF,EAAKD,SAASG,QAAQ,GAChC,SAAY,WA1Bb,QAqBDC,EArBC,OA6BMF,YAAeE,GAC5BzC,EAAS0C,YAAc,UAAD,WAAwB,QAAS,CAAEC,WAAY,UAAWC,aAAa,IAC7FlC,IAAiB,GACjBZ,IAhCO,+BAkCPkC,EAASE,OAAO,OAAQ5C,GACxB0C,EAASE,OAAO,UAAW,MAnCpB,UAoCgBC,IAAYC,KAAKN,EAASE,EAAUH,GApCpD,QAoCDQ,EApCC,OAqCME,YAAeF,GAC5BrC,EAAS0C,YAAc,UAAD,WAAwB,QAAS,CAAEC,WAAY,UAAWC,aAAa,IAC7FlC,IAAiB,GACjBZ,IAxCO,QA0CX1X,EAASyC,IAAqBC,qBAC9B1C,EAASyC,IAAqBQ,kBAC9B6I,IA5CW,wDA8CXwM,IAAiB,GACjBV,EAAS0C,YAAc,QAAD,YAAuB,QAAS,CAAEC,WAAY,QAASC,aAAa,IA/C/E,+DAAH,qDAiEVC,GAAa,SAAUxR,GACzBA,EAAE+K,iBACF/K,EAAEyR,kBACa,cAAXzR,EAAElJ,MAAmC,aAAXkJ,EAAElJ,KAC5BkY,GAAc,GACI,cAAXhP,EAAElJ,MACTkY,GAAc,IAIhB0C,GAAc,SAACzD,GACjB,IAAI0D,EAAYjS,OAAOW,OAAO,GAAIuN,GAE9B+D,EADqB,IAArBA,EAAUlS,OACEuC,MAAMC,KAAKgM,GAEd,sBAAO0D,GAAP,YAAqB3P,MAAMC,KAAKgM,KAE7CiB,EAASyC,IAsBPC,GAAgB,WAClB3C,EAASjF,QAAQ6H,SASfC,GAAqB,WACvB,IAAIC,EAAa,GAEbA,EADoB,eAApBzT,EACa,4BAEH,UAAMoS,iFAAN,YAAyCA,0BAAzC,kBAEdI,IAAYkB,IAAID,EAAY,CAAEE,aAAc,gBACvC7a,MAAK,SAAC4Z,GACH,IAAIkB,EAAO,IAAIC,KAAK,CAACnB,EAASnX,MAAO,CAAE/C,KAAM,sEAC7Csb,iBAAOF,EAAM,sCAIzB,OACI,eAACG,EAAA,EAAD,CACInR,KAAMA,EACNuN,OAAQA,EACR6D,kBAAgB,gCAChBC,UAAQ,EACRjR,KAAK,KACLkR,WAAW,EANf,UAQI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACL,EAAA,EAAMM,MAAP,CAAazS,GAAG,gCAAhB,UAGgC,eAApB5B,GACuB,cAApBA,EAED,sBAEmB,wBAApBA,EACK,wCACA,GAIU,2BAApBA,GACG,0CAIf,cAAC+T,EAAA,EAAMO,KAAP,CAAYtW,UAAU,YAAtB,SACI,cAACuW,EAAA,EAAD,UACI,eAAC1W,EAAA,EAAD,CAAKyL,GAAI,GAAT,UACI,qBAAKtL,UAAWgM,EAAOwK,sBAAvB,SAEQlF,GAASA,EAAMnO,OAAS,GAAKmO,EAAMzQ,KAAI,SAAC8Q,EAAM5Q,GAC1C,OAAO,qBAAKf,UAAWgM,EAAOyK,YAAvB,SACH,sBAAK/W,MAAO,CAAE2J,QAAS,OAAQC,WAAY,SAAUa,eAAgB,iBAArE,UACI,sBAAKzK,MAAO,CAAE2J,QAAS,OAAQC,WAAY,UAA3C,UAEsB,oBAAdqI,EAAKnX,MACF,cAAC,IAAD,KAGY,cAAdmX,EAAKnX,MAAsC,eAAdmX,EAAKnX,OAChC,cAAC,IAAD,IAGW,sEAAdmX,EAAKnX,MACF,cAAC,IAAD,IAEP,sBAAMkF,MAAO,CAAEoK,WAAY,SAA3B,SAAuC6H,EAAKlI,UAEhD,cAAC,IAAD,CAAiBlK,QAAS,kBAxE5C,SAACwB,GACnB,IAAIsU,EAAYjS,OAAOW,OAAO,GAAIuN,GAClC+D,EAAUqB,OAAO3V,EAAO,GACxB6R,EAASyC,GAqE2DsB,CAAc5V,IAAQiE,KAAM,GAAItF,MAAO,CAAEwH,YAAa,QAASjC,MAAO,MAAOyD,OAAQ,iBAjBtH,eAAiD3H,SAuBpE,eAAClB,EAAA,EAAD,CAAKC,GAAI,GAAIwL,GAAI,GAAjB,UACI,uBAAM1H,GAAG,mBAAmBgT,YAAa1B,GAAY1G,SAAU,SAAC9K,GAAD,OAAOA,EAAE+K,kBAAxE,UACI,uBACIF,IAAKoE,EACLnY,KAAK,OACLoJ,GAAG,oBACHiT,OAAO,4GACPC,UAAU,EACVvO,SAlGX,SAAU7E,GAC3BA,EAAE+K,iBACE/K,EAAEC,OAAO2N,OAAS5N,EAAEC,OAAO2N,MAAM,IACjC8D,GAAY1R,EAAEC,OAAO2N,UAiGD,uBAAO1N,GAAG,oBAAoB5D,UAAWyS,EAAa,cAAgB,GAAtE,SACI,gCACI,cAAC,IAAD,CAAkBzN,KAAM,GAAIC,MAAO,UAAW1F,QAAS+V,GAAe5M,OAAO,YAC7E,oBAAGhJ,MAAO,CAAEqX,SAAU,SAAU9R,MAAO,UAAWsF,OAAQ,GAA1D,gCAAkF,sBAAMhL,QAAS+V,GAAe5V,MAAO,CAAEuF,MAAO,UAAW+R,WAAY,OAAQD,SAAU,SAAUrO,OAAQ,WAAzG,2BAClF,mBAAGhJ,MAAO,CAAEuF,MAAO,WAAnB,qEAGPwN,GAAc,qBAAK7O,GAAG,oBAAoBgT,YAAa1B,GAAY+B,YAAa/B,GAAYgC,WAAYhC,GAAYiC,OArH9H,SAAUzT,GACzBA,EAAE+K,iBACF/K,EAAEyR,kBACFzC,GAAc,GACVhP,EAAE0T,aAAa9F,OAAS5N,EAAE0T,aAAa9F,MAAM,IAC7C8D,GAAY1R,EAAE0T,aAAa9F,aAkHX,sBAAMtR,UAAWgM,EAAOqL,WAAxB,SAAoC,gCAAQnE,GAAS,iBAAuB,mBAAqB,OACjG,sBAAMlT,UAAWgM,EAAOqL,WAAxB,SAAoC,gCAAQjE,GAAe,0BAA4B,iBAKvG,eAAC2C,EAAA,EAAMuB,OAAP,CAAc5X,MAAO,CAAEuH,QAAS,kBAAoBjH,UAAU,oBAA9D,UAEQ8S,GACA,cAAC,IAAD,CAAc9N,KAAM,GAAIhF,UAAS,kBAAagM,EAAOuL,mBAEzD,cAAC1X,EAAA,EAAD,CAAKyL,GAAI,GAAItL,UAAU,aAAvB,SACI,cAACoK,EAAA,EAAD,CAAQC,QAAQ,OAAO7P,KAAK,SAAS0F,SAAU4S,EAAevT,QAAS0U,GAAiBvU,MAAO,CAAEuL,MAAO,QAAxG,sBAGoB,eAApBjJ,GACGsP,EAAMnO,OAAS,GACf,eAACtD,EAAA,EAAD,CAAKyL,GAAI,GAAItL,UAAU,aAAvB,UACC,uBACA,qDAAuB,4CAAvB,8GACA,cAACH,EAAA,EAAD,CAAKyL,GAAI,GAAItL,UAAU,aAAvB,SACI,cAACoK,EAAA,EAAD,CAAQC,QAAQ,OAAO7P,KAAK,SAAS+E,QAASiW,GAAoB9V,MAAO,CAAEuL,MAAO,QAAlF,uCAKY,wBAApBjJ,GACG,eAACnC,EAAA,EAAD,CAAKyL,GAAI,GAAItL,UAAU,aAAvB,UACC,uBACA,6IACA,cAACH,EAAA,EAAD,CAAKyL,GAAI,GAAItL,UAAU,aAAvB,SACI,cAACoK,EAAA,EAAD,CAAQC,QAAQ,OAAO7P,KAAK,SAAS+E,QAASiW,GAAoB9V,MAAO,CAAEuL,MAAO,QAAlF,+C,yIClTtBuM,EAAgBC,sBAAW,WAA+FlJ,GAAS,IAAD,IAApGmJ,qBAAoG,MAApF,GAAoF,EAC9Hjd,GAD8H,EAAhFkd,WACnCvV,eACjB,EAISwV,aAAY,SAACrG,GAAD,MAAiB,CAClCsG,cAAetG,EAAM1V,MAAMic,aAAava,KACxCwa,QAASxG,EAAM1V,MAAMic,aAAaC,QAClCxc,MAAOgW,EAAM1V,MAAMic,aAAavc,UANhCsc,EADJ,EACIA,cACAE,EAFJ,EAEIA,QACAxc,EAHJ,EAGIA,MAOJ,EAA0BkD,mBAASiZ,GAAnC,mBAAOnM,EAAP,KAAcyM,EAAd,KAeA,OAbAC,8BAAoB1J,GAAK,iBAAO,CAC5BZ,MAD4B,WAExBqK,EAAS,SAIjBpZ,qBAAU,WACFiZ,GAA0C,IAAzBA,EAAc1U,SAAiB5H,GAChDd,EAASH,IAAmB+B,sBAGjC,CAACwb,IAGA,qCACKtc,GACG,cAAC,IAAD,CACImJ,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QACI,cAAC,IAAD,CAASlB,GAAE,gBAAX,+BAJR,SASI,cAAC,IAAD,CAAeoB,KAAM,GAAIhF,UAAWgM,IAAOuL,qBAI9Chc,GAASwc,GACV,cAAC,IAAD,CAAc/S,KAAM,GAAIhF,UAAS,kBAAagM,IAAOuL,mBAEzD,eAAC,IAAKjP,QAAN,CACI6C,GAAG,SACH1B,KAAK,gBACL8B,MAAOA,EACPvL,UAAU,gBACVuI,SAAU,SAAC7E,GAAQsU,EAAStU,EAAEC,OAAO4H,QALzC,UAMI,2BAEIsM,GAAiBA,EAAc7c,MAAK,SAAUC,EAAGC,GAC7C,OAAID,EAAEid,YAAchd,EAAEgd,aAAuB,EACzCjd,EAAEid,YAAchd,EAAEgd,YAAsB,EACrC,KAERrX,KAAI,SAACsX,EAAapX,GACjB,OACI,wBAEIwK,MAAO4M,EAAOC,UAFlB,SAIKD,EAAOL,cAJZ,iBACmB/W,gBAahCyW,O,sICLAa,IAvEM,SAAC,GAAoC,IAAlClG,EAAiC,EAAjCA,OAAQvN,EAAyB,EAAzBA,KAAM0T,EAAmB,EAAnBA,aAElC,EAAwC7Z,mBAAS,IAAjD,mBAAOqZ,EAAP,KAAqBS,EAArB,KACA,EAAgC9Z,mBAAc,IAA9C,mBAAO+Z,EAAP,KAAiBC,EAAjB,KACA,EAAwCha,oBAAS,GAAjD,mBAAOia,EAAP,KAAqBC,EAArB,KAEA/Z,qBAAU,WACNga,QAAQC,IAAIP,GACZ,IAAMQ,EAAoBR,EAAaS,SAAWT,EAAaS,SAAS3S,MAAM,KAAOkS,EAAapJ,aAAa9I,MAAM,KACrHmS,EAAgBO,EAAkBA,EAAkB3V,OAAS,MAC9D,CAACmV,IAEJ1Z,qBAAU,WACNoa,MACD,CAAClB,IAEJ,IAAMkB,EAAS,uCAAG,4BAAA/d,EAAA,4DACO,QAAjB6c,GAA2C,QAAjBA,GAC1Ba,GAAgB,GAFN,SAIMM,YAAaX,EAAaY,WAAaZ,EAAaa,UAJ1D,OAIVtE,EAJU,OAKd4D,EAAY5D,GALE,2CAAH,qDAYf,OACI,eAAC,IAAD,CACIjQ,KAAMA,EACNuN,OAAQA,EACR6D,kBAAgB,gCAChBC,UAAQ,EACRjR,KAAK,KACLkR,WAAW,EANf,UAQI,cAAC,IAAMC,OAAP,CAAcC,aAAW,EAAzB,SACI,4BAAIkC,EAAaS,UAAYT,EAAapJ,iBAE9C,cAAE,IAAMoH,KAAR,CAAatW,UAAU,YAAvB,SACI,eAAC,IAAD,CAAWA,UAAWgM,IAAOoN,gBAAiB1Z,MAAO,CAAE2Z,UAAW,QAAlE,UAEQX,GACG,cAAC,IAAD,CAAc1Y,UAAU,UAAUgF,KAAM,GAAItF,MAAO,CAAE4E,SAAU,cAGjD,QAAjBwT,GACG,qBAAKwB,OAAQ,kBAAMX,GAAgB,IAAQY,IAAKf,EAAUgB,IAAKlB,EAAaS,SAAU9N,MAAM,SAG9E,QAAjB6M,GACG,wBAAQva,KAAMib,EACbc,OAAQ,kBAAMX,GAAgB,IAC9B1N,MAAM,MACNwO,OAAO,SAKU,QAAjB3B,GACoB,SAAjBA,IApChB,iF,iCCjCf,qDAGa4B,EAA2B,CACpCC,qBAAsB,SAACte,GAAD,OAAa,SAACZ,GAKhCA,EAJuB,CAAED,KAAMof,IAAkBC,8BAMjDC,IAAmBH,qBAAqBte,GACnCP,MACG,SAAAwY,GACI7Y,EARI,SAAC6Y,GAAD,MAAgB,CAAE9Y,KAAMof,IAAkBG,4BAA6B1e,QAASiY,GAQ3EhY,CAAQgY,OAErB,SAAA/X,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAMof,IAAkBI,4BAA6B3e,QAASE,GAU5EE,CAAQF,SAIjC0e,kBAAmB,SAAC5e,GAAD,OAAa,SAACZ,GAK7BA,EAJuB,CAAED,KAAM0f,IAAgBC,4BAM/CL,IAAmBG,kBAAkB5e,GAChCP,MACG,SAAAwY,GACI7Y,EARI,SAAC6Y,GAAD,MAAgB,CAAE9Y,KAAM0f,IAAgBE,0BAA2B/e,QAASiY,GAQvEhY,CAAQgY,OAErB,SAAA/X,GACId,EAVI,SAACc,GAAD,MAAiB,CAAEf,KAAM0f,IAAgBG,0BAA2Bhf,QAASE,GAUxEE,CAAQF,SAIjC+e,kBAAmB,kBAAM,SAAC7f,GACtBA,GAAS,kBAAMA,EAAS,CAAED,KAAM0f,IAAgBK,iC,oBCtCxDvd,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,cAAgB,8BAA8B,SAAW,yBAAyB,gBAAkB,gCAAgC,MAAQ,wB,oBCAhND,EAAOC,QAAU,CAAC,uBAAyB,sCAAsC,iBAAmB,gCAAgC,aAAe,4BAA4B,eAAiB,8BAA8B,gBAAkB,iC,mNC0LjOud,UAxKO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACfhgB,EAAW2H,cACXsY,EAAS,IAAIC,gBAAgBF,EAASlU,QACtCqU,EAAOrO,mBACPsO,EAAYH,EAAOhF,IAAI,cAC7B,EAAkDjX,oBAAS,GAA3D,mBAAO2N,EAAP,KAA0BC,EAA1B,KACA,EAAsC5N,mBAAS,gBAA/C,mBAAOmD,EAAP,KAAoBkZ,EAApB,KACA,EAAgCrc,mBAAS,QAAzC,mBAAOoD,EAAP,KAAiBkZ,EAAjB,KACA,EAAkCtc,mBAAS,IAA3C,mBAAOuc,EAAP,KAAkBC,EAAlB,KACA,EAAsCxc,mBAAS,GAA/C,mBAAOF,EAAP,KAAoBgD,EAApB,KACA,EAA4C9C,oBAAS,GAArD,mBAAOyc,EAAP,KAAuBC,EAAvB,KACA,EAAwC1c,oBAAS,GAAjD,mBAAO2c,EAAP,KAAqBC,EAArB,KACA,EAA4C5c,mBAAS,MAArD,mBAAO6c,GAAP,KAAuBC,GAAvB,KACA,GAAgD9c,mBAAS,IAAzD,qBAAO0N,GAAP,MAAyBD,GAAzB,MACA,GAAwCzN,mBAAc,IAAtD,qBAAO+c,GAAP,MAAqBC,GAArB,MAEA,GAOI7D,aAAY,SAACrG,GAAD,MAAiB,CAC7BmK,UAAWnK,EAAMoK,YAAYD,UAAUne,KACvC6D,WAAYmQ,EAAMoK,YAAYD,UAAUta,WACxC7F,MAAOgW,EAAMoK,YAAYD,UAAUngB,MACnCqgB,QAASrK,EAAMoK,YAAYD,UAAUE,QACrC7D,QAASxG,EAAMoK,YAAYD,UAAU3D,QACrC8D,eAAgBtK,EAAMuK,KAAKC,gBAAgBxe,SAZ3Cme,GADJ,GACIA,UACAta,GAFJ,GAEIA,WAEAwa,IAJJ,GAGIrgB,MAHJ,GAIIqgB,SACA7D,GALJ,GAKIA,QACA8D,GANJ,GAMIA,eAUJjd,qBAAU,WACN,OAAO,WACHnE,EAASif,IAAyBY,wBAEvC,IAEH1b,qBAAU,WACN2H,GAAOyU,EAAWzc,KACnB,CAAC4N,GAAkBvK,EAAaC,IAEnCjD,qBAAU,WACN,IAAKmZ,IAA8B,IAAnB6D,GAAQzY,QAAiB0Y,IAAkBA,GAAe1Y,OAAS,EAAI,CACnF,IAAMyY,EAAUC,GAAevY,QAAO,SAAC0Y,GACnC,GAAqB,mBAAjBA,EAAGC,UACH,OAAOD,KAGfP,GAAgBG,EAAQ,GAAGM,kBAE3BT,GAAgBG,MAErB,CAACA,KAEJ,IAAMrV,GAAS,WAAuG,IAAtG1D,EAAqG,uDAA1FmY,EAAWmB,EAA+E,uDAAlE,EAAGjN,EAA+D,uDAAhD,KAAMlU,EAA0C,uDAAnC6G,EAAUwJ,EAAyB,uDAAhBzJ,EAC7Fwa,EAAiB,CACjBvZ,WACAsZ,aACAE,cAAexB,EACf3L,eACAoN,UAAWthB,EACXuhB,UAAWlR,GAEVgC,YAA6BlB,MAC9BiQ,EAAS,2BAAQA,GAAcjQ,KAEnC1R,EAASif,IAAyBO,kBAAkBmC,IACpD/P,GAAqB,IAanBmQ,GAAe,uCAAG,WAAOjX,GAAP,eAAAtK,EAAA,sEAECge,YAAa1T,EAAS2T,WAFvB,OAEhBC,EAFgB,OAGpByB,EAAKlN,QAAQxD,KAAOiP,EACpByB,EAAKlN,QAAQ7C,SAAWtF,EAASwT,SACjC6B,EAAKlN,QAAQ6H,QACb9a,EAASsV,IAA6BS,oBAAoB,CAACjL,EAAS3B,MANhD,2CAAH,sDAUrB,OAAQ,qCACJ,mBAAGsG,KAAK,GAAGqE,IAAKqM,EAAMjX,OAAO,WAC7B,eAAC,IAAD,CAAK2H,GAAI,GAAT,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CACItJ,gBAAiB,YACjBgK,OAAQA,IACRC,cAAe,SAACuB,GAAD,OAAcjH,GAAOyU,EAAW,EAAGxN,IAClDtB,oBAAqB,SAACuQ,GAAD,OAASvQ,GAAoBuQ,IAClDtQ,iBAAkBA,GAClBC,kBAAmBA,EACnBC,qBAAsB,SAACqQ,GAAD,OAAUrQ,EAAqBqQ,MAEzD,cAAC,IAAD,CAAK5c,GAAI,EAAGwL,GAAI,EAAhB,SACI,cAAC,IAAD,CAAQjB,QAAQ,OAAO3K,MAAO,CAAEuL,MAAO,QAAU1L,QAAS,kBAAM4b,GAAkB,IAAlF,kCAGR,0BAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACI5d,KAAMme,GACNxa,UAAW6W,GACXlX,IAAK,CACDqO,aAAc,OACd4I,aAAc,gBACd6E,kBAAmB,0BACnBC,iBAAkB,yBAClBC,gBAAiB,wBACjBC,aAAc,iBACdC,WAAY,cACZC,UAAW,aACXC,YAAa,eACbhK,SAAU,YACViK,SAAU,YACVvT,WAAY,eAEhBvI,WAAYA,GACZE,YAAa,CAAC,gBACdE,eAAgB,SAACjE,GACb8d,GAAgB,GAChBE,GAAkBhe,IAEtBmE,gBAAiB,GACjBE,YAAa,SAACwC,GAAD,OAAY0W,EAAe1W,IACxCvC,SAAU,SAACrH,GAAD,OAAUugB,EAAYvgB,IAChC+D,YAAaA,EACbgD,eAAgBA,EAChBS,gBAAiB,YACjBG,eAAgB,GAChBD,eAAgBsZ,GAChB1Z,aACI,CACI+I,SAAU,SAACtN,GAAD,OAAUif,GAAgBjf,IACpCuN,MAAO,SAACvN,GAAD,OAAUqb,QAAQC,IAAR,eAA4Btb,IAC7CsL,KAAM,SAACtL,GACH8d,GAAgB,GAChBE,GAAkBhe,IAEtBiN,OAAQ,SAACjN,GAAD,OAAUqb,QAAQC,IAAR,gBAA6Btb,KAGvD4D,mBAAoB,SAChB0B,EAAkBsZ,GADF,OA7EP,SAACtZ,EAAkBsZ,GACxClB,EAAapY,GACb0D,GAAO1D,EAAUsZ,GA6EJgB,CAAiBta,EAAUsZ,QAGpCjB,GACG,cAAC,IAAD,CAAgBtW,KAAMsW,EAAgB/I,OAAQ,kBAAMgJ,GAAkB,IAAQ/I,UAAW,IAAKpG,OAAQA,IAAQhK,gBAAgB,YAAYuE,OAAQA,KAGrJ6U,GACA,cAAC,IAAD,CAAcxW,KAAMwW,EAAcjJ,OAAQ,kBAAMkJ,GAAgB,IAAQ/C,aAAcgD","file":"static/js/7.d3292303.chunk.js","sourcesContent":["import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes()\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes()\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\",\"hide\":\"DocumentManager_hide__RqSZ3\",\"show\":\"DocumentManager_show__oRApy\",\"active\":\"DocumentManager_active__30dZH\",\"inActive\":\"DocumentManager_inActive__2y9uq\",\"list_upload_container\":\"DocumentManager_list_upload_container__1v3Pa\",\"list_upload\":\"DocumentManager_list_upload__2y6p7\",\"form_error\":\"DocumentManager_form_error__3jlCD\",\"button_right\":\"DocumentManager_button_right__2TgaU\"};","import {\r\n    RequestedDocumentSummary,\r\n    SentDocumentSummary,\r\n    ReRender\r\n} from \"../types.d\";\r\nimport { summaryService } from \"../../services\"\r\n\r\nexport const SummaryActionCreator = {\r\n    getReceiveSummary: () => (dispatch: any) => {\r\n        const request = () => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        summaryService.getReceiveSummary()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    getSentSummary: () => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_SUCCESS, payload: data })\r\n        const failure = () => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        summaryService.getSentSummary()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    reRender: () => (dispatch: any) => {\r\n        dispatch({ type: ReRender.RE_RENDER_REQUEST })\r\n        setTimeout(() => {\r\n            dispatch({ type: ReRender.RE_RENDER_RESET })\r\n        }, 1000)\r\n    }\r\n}","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button, Dropdown\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye, AiFillFileExclamation, AiOutlineUpload } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RiUser3Fill } from 'react-icons/ri';\r\nimport { MiscActionCreator } from '../../store/actions/common/misc.actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    hideShareArray = [],\r\n    searchCriteria\r\n}: any) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [show, setShow] = useState(false)\r\n    const pageSizes = [10, 50, 100];\r\n    const [showHideColumns, setShowHideColumns] = useState<any>(hideShareArray)\r\n\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (hideShareArray.length > 0) {\r\n            setShowHideColumns(hideShareArray);\r\n        }\r\n    }, [hideShareArray])\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            let headers = Object.keys(map).filter(item => {\r\n                return showHideColumns.includes(item)\r\n            })\r\n            setHeaders(headers);\r\n        }\r\n    }, [showHideColumns, data])\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handleClickHideShow = e => {\r\n        let { id, checked } = e.target;\r\n        let columnsTemp = Object.assign([], showHideColumns)\r\n        let columnUpdated: any = []\r\n        if (!checked) {\r\n            columnUpdated = columnsTemp.filter(item => item !== id)\r\n        } else {\r\n            columnUpdated = [...columnsTemp, id]\r\n        }\r\n        setShowHideColumns(columnUpdated);\r\n        dispatch(MiscActionCreator.saveColumn({ parentComponent, showHideColumns: columnUpdated }))\r\n    };\r\n    //         \r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (\r\n                    parentComponent === 'myDocuments'\r\n                    || parentComponent === 'sentDocumentRequest'\r\n                    || parentComponent === 'receiveDocumentRequest'\r\n                    || parentComponent === 'documents'\r\n                )\r\n                && <>\r\n                    {\r\n                        (parentComponent === 'myDocuments' || parentComponent === 'documents') &&\r\n                        isCheck && isCheck.length > 0 &&\r\n                        <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Export</Button>\r\n                    }\r\n                    <CustomDropdown\r\n                        trigger={<button style={{ cursor: 'pointer' }}>Show/Hide Columns</button>}\r\n                        menu={(Object.keys(map)).map((h) => {\r\n                            return <button\r\n                                onClick={() => { }}\r\n                            >\r\n                                <Form.Control\r\n                                    type='Checkbox'\r\n                                    id={h}\r\n                                    // disabled={h === 'folderName' || h === 'name'}\r\n                                    defaultChecked={showHideColumns.includes(h)}\r\n                                    style={{ cursor: 'pointer', width: 'auto', marginRight: \"1rem\" }}\r\n                                    onClick={handleClickHideShow}\r\n                                ></Form.Control>\r\n                                <span>\r\n                                    {map[h]}\r\n                                </span>\r\n                            </button>\r\n                        })}\r\n                    />\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId, data) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds, data) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId, index) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts) => {\r\n        return (\r\n            contacts && contacts.map((contact, index) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service, index) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(data.map((li: any) => {\r\n            if (parentComponent === 'documents') {\r\n                return Number(li.id)\r\n            } else {\r\n                return li.folderName\r\n            }\r\n        }));\r\n        if (isCheckAll) {\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        let { id, checked } = e.target;\r\n        if (parentComponent === 'documents') {\r\n            id = Number(id)\r\n        }\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data) => {\r\n        if (parentComponent === 'sentDocumentRequest' || parentComponent === 'receiveDocumentRequest') {\r\n            if (data.requestStatus === 'Open' && new Date(data.dueDate) >= new Date()) {\r\n                return '#b2e7d0' // green\r\n            } else if (data.requestStatus === 'Open' && new Date(data.dueDate) < new Date()) {\r\n                return '#fbbdc3' // red\r\n            } else if (data.requestStatus === 'Fulfilled') {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith) => {\r\n        if (!sharedWith) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW, index) => {\r\n                            return <OverlayTrigger\r\n                                key={`sw_${index}`}\r\n                                placement=\"bottom\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={(\r\n                                    <Tooltip id=\"tooltip-error\">\r\n                                        {sW.name} - {sW.email}\r\n                                    </Tooltip>\r\n                                )}\r\n                            >\r\n                                <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW.name.charAt(0)}</span>\r\n                            </OverlayTrigger>\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleDocumentName = (data) => {\r\n        if (data['documentName']) {\r\n            return (<td\r\n                className={`clickable_td td_string`}\r\n            >\r\n                <div style={{\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <BsFileEarmarkText size={24} />\r\n                    <div className='file_name clickable_td_emp' onClick={() => addEditArray.viewDocument(data)}>\r\n                        {data['documentName']}\r\n                    </div>\r\n                </div >\r\n            </td >)\r\n        } else {\r\n            return <td\r\n                className='center_align_td'\r\n            >\r\n                <AiFillFileExclamation\r\n                    size={24}\r\n                />\r\n                {parentComponent === 'sentDocumentRequest' ? 'Pending' : 'Not Provided Yet'}\r\n            </td>\r\n        }\r\n    }\r\n\r\n    const tableHeaderHandler = () => {\r\n        return <thead>\r\n            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                {(parentComponent === 'myRequests'\r\n                    || parentComponent === 'pendingForApproval'\r\n                    || parentComponent === 'pendingMyApproval'\r\n                ) && <th>#</th>}\r\n                {\r\n                    (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                    && <th className=\"span1\">\r\n                        <div\r\n                            className=\"table_header_container\"\r\n                            style={\r\n                                {\r\n                                    'minWidth': '20px',\r\n                                    'height': '30px',\r\n                                    'alignItems': 'center'\r\n                                }\r\n                            }>\r\n                            <Form.Control type='Checkbox' onChange={() => handleAllSelect()} style={{ cursor: 'pointer' }}></Form.Control>\r\n                        </div>\r\n                    </th>\r\n                }\r\n                {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    headers && headers.map((header, index) => {\r\n                        if (header !== 'clientId'\r\n                            && header !== 'recordStatusVal'\r\n                            && header !== 'batchSchedulerGroupId'\r\n                            && header !== 'logDescription'\r\n                            && header !== 'queueId'\r\n                            && header !== 'slaStatus'\r\n                            && header !== 'alertDefinition'\r\n                            && header !== 'RFILink'\r\n                            && header !== 'auditLink'\r\n                        ) {\r\n                            return (\r\n                                <th\r\n                                    className=\"span1\"\r\n                                    key={`header_${index}`}\r\n                                >\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                    ? '300px'\r\n                                                    : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                            }\r\n                                        }>\r\n                                        <div>\r\n                                            {map[header] ? map[header] : header}\r\n                                        </div>\r\n                                        {\r\n                                            sorting\r\n                                            && (\r\n                                                <div className=\"sorting\">\r\n                                                    <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                    <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </th>\r\n                            );\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    ((typeof addEditArray.edit !== 'undefined')\r\n                        || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                    && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                }\r\n                {\r\n                    ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                    && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                }\r\n                {\r\n                    (\r\n                        parentComponent === 'myDocuments'\r\n                        || parentComponent === 'documents'\r\n                        || parentComponent === 'sentDocumentRequest'\r\n                        || parentComponent === 'receiveDocumentRequest'\r\n                        || parentComponent === 'downloadHistory'\r\n                    )\r\n                    && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n    }\r\n\r\n    const tableBodyHandler = () => {\r\n        return <tbody>\r\n            {\r\n                data && data.map((d: any, index: number) => (\r\n                    <tr\r\n                        key={`data_${index}`} style={{\r\n                            lineHeight: '30px',\r\n                            textAlign: 'center',\r\n                            position: 'relative',\r\n                            zIndex: 9,\r\n                            backgroundColor: dueDateHandler(d)\r\n                        }}\r\n\r\n                    >\r\n                        {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                        {(parentComponent === 'myRequests'\r\n                            || parentComponent === 'pendingForApproval'\r\n                            || parentComponent === 'pendingMyApproval'\r\n                        ) && <th>{index + 1}</th>}\r\n                        {\r\n                            (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                            && <th className=\"span1\">\r\n                                <div\r\n                                    className=\"table_header_container\"\r\n                                    style={\r\n                                        {\r\n                                            'minWidth': '20px',\r\n                                            'height': '30px',\r\n                                            'alignItems': 'center'\r\n                                        }\r\n                                    }>\r\n                                    <Form.Control\r\n                                        type='Checkbox'\r\n                                        id={parentComponent === 'documents' ? d.id : d.folderName}\r\n                                        checked={isCheck.includes(parentComponent === 'documents' ? d.id : d.folderName)}\r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onChange={handleClick}\r\n                                    ></Form.Control>\r\n                                </div>\r\n                            </th>\r\n                        }\r\n                        {\r\n                            // eslint-disable-next-line array-callback-return\r\n                            headers.map((header: any, index2) => {\r\n                                if (header !== 'clientId'\r\n                                    && header !== 'recordStatusVal'\r\n                                    && header !== 'batchSchedulerGroupId'\r\n                                    && header !== 'logDescription'\r\n                                    && header !== 'slaStatus'\r\n                                    && header !== 'queueId'\r\n                                    && header !== 'alertDefinition'\r\n                                    && header !== 'RFILink'\r\n                                    && header !== 'auditLink'\r\n                                ) {\r\n                                    if (actionArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={\r\n                                                    {\r\n                                                        background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                        color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                    }\r\n                                                }\r\n                                                key={`data_2${index2}`}\r\n                                                className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            >\r\n                                                {\r\n                                                    servicingRequestIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    priorityIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <AiFillFolder size={20} />\r\n                                                        <span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\"\r\n                                                        >\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                    <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                        {d[header]}\r\n                                                    </span>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    if (header === 'isValidationRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isExcluded') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Y' : 'N'}</td>;\r\n                                    }\r\n                                    if (header === 'isAdditionalTimeRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'keyContacts') {\r\n                                        return <td key={`data_2${index2}`}>{keyContactsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === 'servicesOffered'\r\n                                        || header === \"accountTypeServiced\"\r\n                                    ) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                        || header === 'productType')) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"capacity\") {\r\n                                        return <td key={`data_2${index2}`}>{capacityHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"commissionRate\") {\r\n                                        return <td key={`data_2${index2}`}>{commissionRateHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"compliance\") {\r\n                                        return <td key={`data_2${index2}`}>{complianceHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                        return <td key={`data_2${index2}`}>{collectionsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"sharedWith\") {\r\n                                        return <td key={`data_2${index2}`}>{handleSharedWith(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"preview\") {\r\n                                        return <td key={`data_2${index2}`}><BsFileEarmarkText size={24} /></td>\r\n                                    }\r\n                                    if (header === 'upload') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudUpload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'download') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudDownload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'fileName') {\r\n                                        return handleDocumentName(d)\r\n                                    }\r\n                                    if (!d[header]) {\r\n                                        return <td key={`data_2${index2}`}><b>-</b></td>\r\n                                    }\r\n                                    if (header === \"partnerStatus\") {\r\n                                        return <td key={`data_2${index2}`} style={{ textAlign: 'left' }}>\r\n                                            <span style={{\r\n                                                backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                color: 'white',\r\n                                                padding: '.3rem 1rem',\r\n                                                borderRadius: '.3rem'\r\n                                            }}>{d[header]}</span><br />\r\n                                            {\r\n                                                (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                && <>\r\n                                                    <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                    <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                </>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    if (header === 'executionStatusVal') {\r\n                                        return (<td >\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                {d[header]}\r\n                                                <OverlayTrigger\r\n                                                    placement=\"right\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            {d['logDescription']}\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>)\r\n                                    }\r\n                                    if (header === 'complianceIds') {\r\n                                        return (\r\n                                            <td className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                {complianceSplitter(d[header], d)}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    if (colorArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={{ backgroundColor: `${d[header]}` }}\r\n                                                key={`data_2${index2}`}\r\n                                            >{''}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            key={`data_2${index2}`}\r\n                                        >\r\n                                            {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                            {' '}\r\n                                            {d[header]}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        {\r\n                            ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                            && <td key={`data_${index}`} className=\"span1\" >\r\n                                <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                            </td>\r\n                        }\r\n                        {\r\n                            typeof addEditArray.edit !== 'undefined'\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BiPencil onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            View\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsEye onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <CgTrash onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Disabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to unlock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Enabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to lock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                (\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    || d.recordStatusVal === \"Disabled\"\r\n                                                )\r\n                                                && (typeof addEditArray.execute !== 'undefined')\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Execute\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Deleted\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            typeof addEditArray.view !== 'undefined'\r\n                            && d['alertDefinition'] !== undefined\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            (\r\n                                parentComponent === 'myDocuments'\r\n                                || parentComponent === 'documents'\r\n                                || parentComponent === 'sentDocumentRequest'\r\n                                || parentComponent === 'receiveDocumentRequest'\r\n                                || parentComponent === 'downloadHistory'\r\n                            )\r\n                            && <td key={`data_${index}`} className='span1' style={{ minWidth: '140px', textAlign: 'center' }}>\r\n                                {\r\n                                    typeof addEditArray.upload !== 'undefined'\r\n                                    && !d[\"documentName\"]\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Upload\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudUpload onClick={() => addEditArray.upload(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.view !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.download !== 'undefined'\r\n                                    && (\r\n                                        (parentComponent === 'receiveDocumentRequest' && d[\"documentName\"])\r\n                                        || parentComponent === 'myDocuments'\r\n                                        || parentComponent === 'documents'\r\n                                        || parentComponent === 'sentDocumentRequest'\r\n                                        || parentComponent === 'downloadHistory'\r\n                                    )\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload\r\n                                                style={{\r\n                                                    color: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"#bebebe\" : \"black\",\r\n                                                    cursor: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"not-allowed\" : 'pointer'\r\n                                                }}\r\n                                                onClick={() => {\r\n                                                    if (parentComponent === 'sentDocumentRequest' && !d[\"documentName\"]) {\r\n\r\n                                                    } else {\r\n                                                        addEditArray.download(d)\r\n                                                    }\r\n                                                }\r\n                                                } size={20} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.share !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.delete !== 'undefined'\r\n                                    &&\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            {\r\n                tableHeaderHandler()\r\n            }\r\n            {\r\n                tableBodyHandler()\r\n            }\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <th>No Records</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        <div className={`table_loading ${loadingHeight ? null : 'no_min_height'}`} >\r\n            <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        </div >\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {totalCount > 0 ? tableHandler() : emptyTable()}\r\n            </Table>\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CustomDropdown = ({ trigger, menu }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className=\"custom_dropdown\">\r\n            {React.cloneElement(trigger, {\r\n                onClick: handleOpen,\r\n            })}\r\n            {open ? (\r\n                <ul className=\"custom_menu\">\r\n                    {menu.map((menuItem, index) => (\r\n                        <li key={index} className=\"menu-item\">\r\n                            {React.cloneElement(menuItem, {\r\n                                onClick: () => {\r\n                                    menuItem.props.onClick();\r\n                                },\r\n                            })}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { debounce } from 'lodash';\r\nimport { CgOptions, CgSearch } from 'react-icons/cg'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport DocumentTypes from './DocumentType';\r\nimport { checkIfAdvanceSearchIsActive, dateFormatterForRequestDocManager } from '../../helpers/util';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst AdvanceSearch = ({ parentComponent, Styles, searchHandler, setAdvanceSearchObj, advanceSearchObj, showAdvanceSearch, setShowAdvanceSearch }: any) => {\r\n    const advanceSearchRef = useRef<any>();\r\n    const documentTypeRef = useRef<any>()\r\n    const [advanceSearchActive, setAdvanceSearchActive] = useState<any>(false);\r\n    const [dates, setDates] = useState<any>({\r\n        generationDateFrom: null,\r\n        generationDateTo: null,\r\n        uploadDateFrom: null,\r\n        uploadDateTo: null,\r\n        shareDateFrom: null,\r\n        shareDateTo: null,\r\n        receivedDateFrom: null,\r\n        receivedDateTo: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!checkIfAdvanceSearchIsActive(advanceSearchObj)) {\r\n            setAdvanceSearchActive(true)\r\n        } else {\r\n            setAdvanceSearchActive(false)\r\n        }\r\n    }, [advanceSearchObj])\r\n\r\n    const debouncedSearch = debounce(async (criteria) => {\r\n        searchHandler(criteria)\r\n    }, 500);\r\n\r\n    async function handleSearchInput(e) {\r\n        debouncedSearch(e.target.value);\r\n    }\r\n\r\n    const advanceSearchHandler = (e) => {\r\n        e.preventDefault()\r\n        setAdvanceSearchActive(false)\r\n        if (showAdvanceSearch) {\r\n            let advanceSearchTemp: any = Object.assign({}, advanceSearchObj)\r\n            const {\r\n                document_type,\r\n                document_name,\r\n                original_account_number,\r\n                client_account_number,\r\n                equabli_account_number,\r\n                portfolio_id\r\n            } = advanceSearchRef.current\r\n            //Common\r\n            advanceSearchTemp.docTypeCode = document_type.value !== \"\" ? document_type.value : null\r\n            advanceSearchTemp.documentName = document_name.value !== \"\" ? document_name.value : null\r\n            if (parentComponent === 'documents') {\r\n                // Document List\r\n                advanceSearchTemp.generationDateFrom = dates.generationDateFrom ? dateFormatterForRequestDocManager(dates.generationDateFrom) : null\r\n                advanceSearchTemp.generationDateTo = dates.generationDateTo ? dateFormatterForRequestDocManager(dates.generationDateTo) : null\r\n                advanceSearchTemp.uploadDateFrom = dates.uploadDateFrom ? dateFormatterForRequestDocManager(dates.uploadDateFrom) : null\r\n                advanceSearchTemp.uploadDateTo = dates.uploadDateTo ? dateFormatterForRequestDocManager(dates.uploadDateTo) : null\r\n                advanceSearchTemp.shareDateFrom = dates.shareDateFrom ? dateFormatterForRequestDocManager(dates.shareDateFrom) : null\r\n                advanceSearchTemp.shareDateTo = dates.shareDateTo ? dateFormatterForRequestDocManager(dates.shareDateTo) : null\r\n                advanceSearchTemp.receiveDateFrom = dates.receivedDateFrom ? dateFormatterForRequestDocManager(dates.receivedDateFrom) : null\r\n                advanceSearchTemp.receiveDateTo = dates.receivedDateTo ? dateFormatterForRequestDocManager(dates.receivedDateTo) : null\r\n            } else {\r\n                // Document Folder\r\n                advanceSearchTemp.originalAccountNumber = original_account_number.value !== \"\" ? original_account_number.value : null\r\n                advanceSearchTemp.clientAccountNumber = client_account_number.value !== \"\" ? client_account_number.value : null\r\n                advanceSearchTemp.equabliAccountNumber = equabli_account_number.value !== \"\" ? equabli_account_number.value : null\r\n                advanceSearchTemp.portfolioId = portfolio_id.value !== \"\" ? portfolio_id.value : null\r\n            }\r\n            setAdvanceSearchObj(advanceSearchTemp)\r\n        }\r\n    }\r\n\r\n    const handleReset = async () => {\r\n        // Common\r\n        documentTypeRef.current.reset();\r\n        advanceSearchRef.current[\"document_name\"].value = \"\"\r\n        if (parentComponent === 'documents') {\r\n            // Document list\r\n            setDates({\r\n                generationDateFrom: null,\r\n                generationDateTo: null,\r\n                uploadDateFrom: null,\r\n                uploadDateTo: null,\r\n                shareDateFrom: null,\r\n                shareDateTo: null,\r\n                receivedDateFrom: null,\r\n                receivedDateTo: null\r\n            })\r\n        } else {\r\n            // Document Folder\r\n            advanceSearchRef.current[\"original_account_number\"].value = \"\"\r\n            advanceSearchRef.current[\"client_account_number\"].value = \"\"\r\n            advanceSearchRef.current[\"equabli_account_number\"].value = \"\"\r\n        }\r\n        if (parentComponent === 'sentDocumentRequest') {\r\n            advanceSearchRef.current[\"portfolio_id\"].value = \"\"\r\n        }\r\n        setAdvanceSearchObj({})\r\n    }\r\n\r\n    const dateHandler = (from, date) => {\r\n        const dateTemp = Object.assign({}, dates)\r\n        dateTemp[from] = date\r\n        setDates(dateTemp)\r\n    }\r\n\r\n    return (\r\n        <Col md={parentComponent === 'sentDocumentRequest' ? 8 : 10} sm={parentComponent === 'sentDocumentRequest' ? 8 : 10} className={Styles.search_input}>\r\n            <CgSearch\r\n                size={20}\r\n                className={Styles.search} />\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"my_document_search\"\r\n                className={Styles.my_document_search}\r\n                onMouseDown={() => setShowAdvanceSearch(false)}\r\n                onChange={(e) => handleSearchInput(e)}\r\n                placeholder=\"Search\"\r\n            ></Form.Control>\r\n            <CgOptions\r\n                size={20}\r\n                className={`${Styles.advanceSearch} ${advanceSearchActive ? Styles.active : Styles.inActive}`}\r\n                onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n            <div className={`${Styles.advance_search} ${showAdvanceSearch ? Styles.show : Styles.hide}`}>\r\n                <Form ref={advanceSearchRef} onSubmit={(e) => advanceSearchHandler(e)}>\r\n                    <Row>\r\n                        <Col lg={12} md={12}>\r\n                            <Form.Group as={Col} className=\"mb-4 mt-4\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">{parentComponent === 'myDocuments' ? \"Folder Name\" : \"Document Name\"}</Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12} >\r\n                                    <DocumentTypes ref={documentTypeRef} />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">{parentComponent === 'myDocuments' ? \"Folder that contain Document Type\" : \"Document Type\"}</Form.Label>\r\n                            </Form.Group>\r\n                            {/* <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12} >\r\n                                    <DocumentTypes ref={documentTypeNoRef} />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">Folder that do not contain Document Type</Form.Label>\r\n                            </Form.Group> */}\r\n                            {\r\n                                parentComponent === 'sentDocumentRequest'\r\n                                &&\r\n                                <Form.Group as={Col} className=\"mb-4\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control\r\n                                            className=\"select_custom white\"\r\n                                            type=\"text\"\r\n                                            name=\"portfolio_id\" />\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Portfolio Id</Form.Label>\r\n                                </Form.Group>\r\n                            }\r\n                            {\r\n                                parentComponent !== 'documents'\r\n                                && <>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                className=\"select_custom white\"\r\n                                                type=\"text\"\r\n                                                name=\"original_account_number\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Original Account Number</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                className=\"select_custom white\"\r\n                                                type=\"text\"\r\n                                                name=\"client_account_number\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Client Account Number</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                className=\"select_custom white\"\r\n                                                type=\"text\"\r\n                                                name=\"equabli_account_number\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Equabli Account Number</Form.Label>\r\n                                    </Form.Group>\r\n                                </>\r\n                            }\r\n                            {\r\n                                parentComponent === 'documents'\r\n                                && <>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"generationDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"generationDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"generationDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"generationDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"uploadDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"uploadDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"uploadDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"uploadDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"shareDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"shareDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"shareDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"shareDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"receivedDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"receivedDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"receivedDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"receivedDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                            </Form.Group>\r\n\r\n                                        </Row>\r\n                                    </Col>\r\n                                </>\r\n                            }\r\n                            <Col className={Styles.button_right}>\r\n                                <Col>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\" onClick={() => handleReset()}>Reset</Button>{\" \"}\r\n                                    <Button variant=\"\" onClick={() => setShowAdvanceSearch(false)}>Cancel</Button>{ }\r\n                                </Col>\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default AdvanceSearch","import {\r\n    GetDownloadHistory,\r\n    SaveDownloadHistory,\r\n    DeleteDownloadHistory\r\n} from \"../types.d\";\r\nimport { downloadHistory } from \"../../services\"\r\n\r\nexport const DownloadHistoryActionCreator = {\r\n    getDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.getDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.saveDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n    deleteDownloadHistory: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.deleteDownloadHistory(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n}","import { useState } from \"react\"\r\n\r\nconst FileUploadHook = (files) => {\r\n    const [state, setState] = useState<any>(null)\r\n    const zipTargetFiles: any = async (files) => {\r\n        let zipFile: any = null\r\n        if (files.length === 1) {\r\n            setState({\r\n                zipFile,\r\n                file: files[0]\r\n            })\r\n        } else {\r\n            const zip = require('jszip')();\r\n            let matrixFile: any = null\r\n            for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name === 'matrix.xlsx') {\r\n                    matrixFile = files[i]\r\n                }\r\n                if (files[i].type === 'application/zip' || files[i].type === \"application/x-zip-compressed\") {\r\n                    zipFile = files[i]\r\n                }\r\n                if (!zipFile && files[i].name !== 'matrix.xlsx') {\r\n                    zip.file(files[i].name, files[i]);\r\n                }\r\n            }\r\n            if (!zipFile) {\r\n                zip.generateAsync({ type: \"blob\" })\r\n                    .then((content) => {\r\n                        return new File([content], 'new.zip', { type: 'application/x-zip-compressed' })\r\n                    })\r\n                    .then((file) => {\r\n                        setState({\r\n                            matrixFile,\r\n                            file: file\r\n                        });\r\n                    })\r\n            } else {\r\n                setState({\r\n                    matrixFile,\r\n                    file: zipFile\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        state,\r\n        {\r\n            zipTargetFiles\r\n        }\r\n    ];\r\n}\r\n\r\nexport default FileUploadHook","import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { BsFileEarmarkPdf, BsFillFileEarmarkImageFill } from 'react-icons/bs';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\nimport { SiMicrosoftexcel } from 'react-icons/si';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, handleResponse } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\nimport { SummaryActionCreator } from '../../store/actions/summary.actions';\r\nimport FileUploadHook from '../CustomHooks/FileUploadHook';\r\n\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent, search, details = null }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n    const [fileToUpload, { zipTargetFiles }] = FileUploadHook(null)\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n    const [files, setFiles] = useState<any>([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        fileLengthSingle: false,\r\n        fileSize: false\r\n    })\r\n    const [noMatrixFile, SetNoMatrixFile] = useState(false)\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false\r\n        }\r\n        if (formObj.file === 0) {\r\n            error['fileLengthSingle'] = true\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileToUpload && JSON.stringify(fileToUpload) !== \"{}\") {\r\n            uploadFile()\r\n        }\r\n    }, [fileToUpload])\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        if (validateUpload({\r\n            file: files.length\r\n        })) {\r\n            setFormSubmitted(true)\r\n            zipTargetFiles(files)\r\n        }\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        SetNoMatrixFile(false)\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        let API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload`\r\n        const { file, matrixFile } = fileToUpload\r\n        if (parentComponent === 'myDocument' && files.length > 1 && !matrixFile) {\r\n            setFormSubmitted(false)\r\n            SetNoMatrixFile(true)\r\n            return\r\n        }\r\n        let formData: any = new FormData()\r\n        try {\r\n            if (file.type === 'application/zip' || file.type === 'application/x-zip-compressed') {\r\n                formData.append(\"files\", file);\r\n                formData.append(\"files\", matrixFile)\r\n                formData.append(\"fileUploadJson\", JSON.stringify({ \"bulkType\": \"upload\", \"orgType\": 'CT' }))\r\n                API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const urls = handleResponse(response)\r\n                const responseFilePath = await axiosCustom.post(`${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk/read`,\r\n                    {\r\n                        \"orgType\": \"CT\",\r\n                        \"excelUrl\": urls.response.fileUrl[1],\r\n                        \"zipUrl\": urls.response.fileUrl[0],\r\n                        \"bulkType\": \"upload\"\r\n                    }\r\n                )\r\n                const data = handleResponse(responseFilePath)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } else {\r\n                formData.append(\"file\", file);\r\n                formData.append(\"orgType\", \"CT\")\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const data = handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            }\r\n            dispatch(SummaryActionCreator.getReceiveSummary())\r\n            dispatch(SummaryActionCreator.getSentSummary())\r\n            search()\r\n        } catch (error: any) {\r\n            setFormSubmitted(false)\r\n            addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFiles = (file) => {\r\n        let tempFiles = Object.assign([], files)\r\n        if (tempFiles.length === 0) {\r\n            tempFiles = Array.from(file)\r\n        } else {\r\n            tempFiles = [...tempFiles, ...Array.from(file)]\r\n        }\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let tempFiles = Object.assign([], files)\r\n        tempFiles.splice(index, 1);\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    const downloadSampleFile = () => {\r\n        let sampleFile = ''\r\n        if (parentComponent === 'myDocument') {\r\n            sampleFile = \"./sample_file_upload.xlsx\"\r\n        } else {\r\n            sampleFile = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/download`\r\n        }\r\n        axiosCustom.get(sampleFile, { responseType: 'arraybuffer' })\r\n            .then((response) => {\r\n                var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                saveAs(blob, 'SendRequestDocumentSample.xlsx');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {\r\n                        (\r\n                            parentComponent === 'myDocument'\r\n                            || parentComponent === 'documents'\r\n                        )\r\n                            ? \"Upload New Document\"\r\n                            :\r\n                            (parentComponent === 'sentDocumentRequest'\r\n                                ? 'Upload file for bulk document request'\r\n                                : '')\r\n                    }\r\n                    {\r\n\r\n                        parentComponent === 'receiveDocumentRequest'\r\n                        && \"Upload File to FulFill the request\"\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <div className={Styles.list_upload_container}>\r\n                            {\r\n                                files && files.length > 0 && files.map((file, index) => {\r\n                                    return <div className={Styles.list_upload} key={`file_${index}`}>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                {\r\n                                                    file.type === 'application/pdf'\r\n                                                    && <BsFileEarmarkPdf />\r\n                                                }\r\n                                                {\r\n                                                    (file.type === 'image/png' || file.type === 'image/jpeg')\r\n                                                    && <BsFillFileEarmarkImageFill />\r\n                                                }\r\n                                                {\r\n                                                    file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                                                    && <SiMicrosoftexcel />\r\n                                                }\r\n                                                <span style={{ marginLeft: '.5rem' }}>{file.name}</span>\r\n                                            </div>\r\n                                            <MdOutlineDelete onClick={() => deleteHandler(index)} size={25} style={{ marginRight: '.5rem', color: 'red', cursor: 'pointer' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input\r\n                                    ref={inputRef}\r\n                                    type=\"file\"\r\n                                    id=\"input-file-upload\"\r\n                                    accept=\"image/png, image/jpeg, application/pdf, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    multiple={true}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileLengthSingle\"] ? 'File is required' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{noMatrixFile ? 'Matrix File is required' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    parentComponent === 'myDocument'\r\n                    && files.length > 1\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the <b>Matrix file</b> and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import React, { useEffect, useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { Form, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AiFillWarning } from \"react-icons/ai\"\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport Styles from \"./Common.module.sass\"\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\n\r\nconst DocumentTypes = forwardRef(({ selectedValue = '', isDisabled = false }: { selectedValue?: string, isDisabled?: boolean }, ref) => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        documentTypes,\r\n        loading,\r\n        error\r\n    }: any = useSelector((state: any) => ({\r\n        documentTypes: state.types.documentType.data,\r\n        loading: state.types.documentType.loading,\r\n        error: state.types.documentType.error,\r\n    }))\r\n\r\n    const [value, setValue] = useState(selectedValue)\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        reset() {\r\n            setValue(\"\");\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (documentTypes && documentTypes.length === 0 && !error) {\r\n            dispatch(TypesActionCreator.getDocumentTypes())\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [documentTypes])\r\n\r\n    return (\r\n        <>\r\n            {error &&\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={\r\n                        <Tooltip id={`tooltip-error`}>\r\n                            Error in fetching\r\n                        </Tooltip>\r\n                    }\r\n                >\r\n                    <AiFillWarning size={20} className={Styles.details_warning} />\r\n                </OverlayTrigger>\r\n            }\r\n            {\r\n                !error && loading &&\r\n                <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n            }\r\n            <Form.Control\r\n                as=\"select\"\r\n                name=\"document_type\"\r\n                value={value}\r\n                className=\"select_custom\"\r\n                onChange={(e) => { setValue(e.target.value) }}>\r\n                <option></option>\r\n                {\r\n                    documentTypes && documentTypes.sort(function (a, b) {\r\n                        if (a.partnerName < b.partnerName) { return -1; }\r\n                        if (a.partnerName > b.partnerName) { return 1; }\r\n                        return 0;\r\n\r\n                    }).map((agency: any, index: number) => {\r\n                        return (\r\n                            <option\r\n                                key={`agency_${index}`}\r\n                                value={agency.shortCode}\r\n                            >\r\n                                {agency.documentType}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </Form.Control>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default DocumentTypes","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { getSignedURL } from '../../helpers/util';\r\n\r\n\r\nimport Styles from \"./Modal.module.sass\";\r\n\r\nconst ViewDocument = ({ onHide, show, documentData }) => {\r\n\r\n    const [documentType, setDocumentType] = useState('')\r\n    const [imageUrl, setImageUrl] = useState<any>(\"\")\r\n    const [loadingImage, setLoadingImage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(documentData)\r\n        const splitDocumentName = documentData.fileName ? documentData.fileName.split('.') : documentData.documentName.split('.')\r\n        setDocumentType(splitDocumentName[splitDocumentName.length - 1])\r\n    }, [documentData])\r\n\r\n    useEffect(() => {\r\n        viewImage()\r\n    }, [documentType])\r\n\r\n    const viewImage = async () => {\r\n        if (documentType === 'pdf' || documentType === 'png') {\r\n            setLoadingImage(true)\r\n        }\r\n        let fileUrl = await getSignedURL(documentData.objectKey || documentData.filePath)\r\n        setImageUrl(fileUrl)\r\n    }\r\n\r\n    const handleNoPreview = () => {\r\n        return <p>Preview not available, Please download</p>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <p>{documentData.fileName || documentData.documentName}</p>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document} style={{ minHeight: '3rem' }}>\r\n                    {\r\n                        loadingImage\r\n                        && <CgSpinnerAlt className=\"spinner\" size={50} style={{ position: 'absolute' }} />\r\n                    }\r\n                    {\r\n                        documentType === 'png'\r\n                        && <img onLoad={() => setLoadingImage(false)} src={imageUrl} alt={documentData.fileName} width=\"100%\" />\r\n                    }\r\n                    {\r\n                        documentType === 'pdf'\r\n                        && <object data={imageUrl}\r\n                            onLoad={() => setLoadingImage(false)}\r\n                            width=\"800\"\r\n                            height=\"500\">\r\n                        </object>\r\n                    }\r\n                    {\r\n                        (\r\n                            documentType === 'txt'\r\n                            || documentType === 'xlsx'\r\n                        )\r\n                        && handleNoPreview()\r\n                    }\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default ViewDocument\r\n","import { MyDocumentsFolder, MyDocumentsList } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    resetDocumentList: () => (dispatch: any) => {\r\n        dispatch(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_warning\":\"Common_details_warning__2lu-3\",\"form_multiple\":\"Common_form_multiple__1IGof\",\"tag_item\":\"Common_tag_item__FjigF\",\"tag_item_button\":\"Common_tag_item_button__19IVB\",\"error\":\"Common_error__2RdGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi_select_container\":\"Modal_multi_select_container__2TE8W\",\"checkbox_wrapper\":\"Modal_checkbox_wrapper__3YO7R\",\"label_select\":\"Modal_label_select__qIb3F\",\"download_modal\":\"Modal_download_modal__2Q8Qv\",\"center_document\":\"Modal_center_document__1lIsg\"};","import { useState, useEffect, useRef } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { checkIfAdvanceSearchIsActive, dateFormatterForRequestDocManager, getSignedURL } from \"../../helpers/util\";\r\nimport DocumentTypes from \"../../components/Common/DocumentType\";\r\nimport { debounce } from \"lodash\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\n\r\n\r\nconst DocumentsList = ({ location }) => {\r\n    const dispatch = useDispatch();\r\n    const params = new URLSearchParams(location.search);\r\n    const aRef = useRef<any>()\r\n    const AccountId = params.get('account_id');\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('documentName')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [advanceSearchObj, setAdvanceSearchObj] = useState({});\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([])\r\n\r\n    const {\r\n        documents,\r\n        totalCount,\r\n        error,\r\n        columns,\r\n        loading,\r\n        defaultColumns\r\n    } = useSelector((state: any) => ({\r\n        documents: state.myDocuments.documents.data,\r\n        totalCount: state.myDocuments.documents.totalCount,\r\n        error: state.myDocuments.documents.error,\r\n        columns: state.myDocuments.documents.columns,\r\n        loading: state.myDocuments.documents.loading,\r\n        defaultColumns: state.misc.allTableColumns.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(MyDocumentsActionCreator.resetDocumentList())\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [advanceSearchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].columnNames)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 1, documentName = null, sort = sortType, column = sortElement) => {\r\n        let searchObj: any = {\r\n            pageSize,\r\n            pageNumber,\r\n            accountNumber: AccountId,\r\n            documentName,\r\n            sortOrder: sort,\r\n            sortParam: column\r\n        }\r\n        if (!checkIfAdvanceSearchIsActive(advanceSearchObj)) {\r\n            searchObj = { ...searchObj, ...advanceSearchObj }\r\n        }\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentList(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadHandler = async (document) => {\r\n        //download file\r\n        let filePath = await getSignedURL(document.objectKey)\r\n        aRef.current.href = filePath;\r\n        aRef.current.download = document.fileName;\r\n        aRef.current.click();\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.id]))\r\n    }\r\n\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'documents'}\r\n                    Styles={Styles}\r\n                    searchHandler={(criteria) => search(pageCount, 1, criteria)}\r\n                    setAdvanceSearchObj={(obj) => setAdvanceSearchObj(obj)}\r\n                    advanceSearchObj={advanceSearchObj}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag) => setShowAdvanceSearch(flag)}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={documents}\r\n                isLoading={loading}\r\n                map={{\r\n                    documentName: \"Name\",\r\n                    documentType: \"Document Type\",\r\n                    originalAccountNo: \"Original Account Number\",\r\n                    equabliAccountNo: \"Equabli Account Number\",\r\n                    clientAccountNo: \"Client Account Number\",\r\n                    generateDate: \"Generated Date\",\r\n                    uploadDate: \"upload Date\",\r\n                    shareDate: \"Share Date\",\r\n                    receiveDate: \"Receive Date\",\r\n                    fileSize: \"File Size\",\r\n                    sharedBy: \"Shared By\",\r\n                    sharedWith: \"Shared With\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['documentName']}\r\n                handleNavigate={(data) => {\r\n                    setShowDocument(true)\r\n                    setDocumentToShow(data)\r\n                }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'documents'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadHandler(data),\r\n                        share: (data) => console.log(`share action`, data),\r\n                        view: (data) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        },\r\n                        delete: (data) => console.log(`Delete Action`, data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload show={uploadDocModal} onHide={() => setUploadDocModal(false)} accountId={123} Styles={Styles} parentComponent=\"documents\" search={search} />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default DocumentsList\r\n\r\n"],"sourceRoot":""}