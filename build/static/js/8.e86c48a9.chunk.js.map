{"version":3,"sources":["containers/DocumentManager/DocumentManager.module.sass","components/Table/pagination.tsx","components/Table/Table.tsx","components/modal/DocumentUpload.tsx","store/actions/downloadHistory.actions.tsx","store/actions/myDocuments.actions.tsx","components/modal/Modal.module.sass","components/modal/ViewDocument.tsx","containers/DocumentManager/DocumentsList.tsx"],"names":["module","exports","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","useState","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","onClick","max","min","style","marginTop","Row","Col","md","xs","className","First","disabled","Prev","Next","Last","TableComponent","data","isLoading","map","onPaginationChange","totalCount","isPagination","actionArray","setCurrentPage","handleNavigate","colorArray","currencyColumns","sorting","sortElement","sortType","addEditArray","tableAction","parentComponent","loadingHeight","history","searchCriteria","useHistory","isCheckAll","setIsCheckAll","isCheck","setIsCheck","headers","setHeaders","pageSize","setPageSize","setShow","pageSizes","length","Object","keys","servicingRequestIndicator","header","d","position","left","requestStatus","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","id","size","color","ragStatus","priorityIndicator","priorityExecution","sortBy","type","descElements","document","querySelectorAll","ascElements","Array","from","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","index","pathname","search","clientId","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","padding","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","e","target","checked","filter","item","dueDateHandler","fulfillment","Date","dueDate","tableHeaderHandler","lineHeight","backgroundColor","Form","Control","onChange","li","folderName","cursor","indexOf","edit","view","minWidth","openSolModal","tableBodyHandler","zIndex","includes","index2","slaStatus","checkType","display","alignItems","contacts","contact","name","phone","sharedWith","sW","email","marginLeft","charAt","handleDocumentName","href","justifyContent","Button","variant","recordStatusVal","margin","delete","update","execute","undefined","upload","download","share","Group","as","Label","column","sm","value","defaultValue","Table","striped","bordered","hover","responsive","page","DocumentUpload","onHide","Styles","accountId","addToast","details","useToasts","useRef","useDispatch","files","state","setState","zipTargetFiles","a","zipFile","file","zip","require","matrixFile","generateAsync","then","content","File","FileUploadHook","fileToUpload","React","dragActive","setDragActive","inputRef","setFiles","setUserLoggedIn","formSubmitted","setFormSubmitted","fileLengthSingle","fileSize","formError","setFormError","user","userService","getUser","validateUpload","formObj","formIsValid","error","key","k","JSON","stringify","uploadFile","onSubmitHandler","preventDefault","zippedFile","console","log","config","API_URL","process","formData","FormData","append","axiosCustom","post","response","urls","handleResponse","fileUrl","responseFilePath","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","handleFiles","tempFiles","assign","onButtonClick","current","click","downloadSampleFile","sampleFile","axios","get","responseType","blob","Blob","saveAs","aria-labelledby","centered","animation","Header","closeButton","Title","Body","list_upload_container","list_upload","splice","deleteHandler","onDragEnter","onSubmit","ref","accept","multiple","fontSize","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","Footer","details_warning","width","DownloadHistoryActionCreator","getDownloadHistory","requestPayload","dispatch","GetDownloadHistory","GET_DOWNLOAD_HISTORY_REQUEST","downloadHistory","sent","GET_DOWNLOAD_HISTORY_SUCCESS","payload","success","GET_DOWNLOAD_HISTORY_FAILURE","failure","saveDownloadHistory","SaveDownloadHistory","SAVE_DOWNLOAD_HISTORY_REQUEST","SAVE_DOWNLOAD_HISTORY_SUCCESS","SAVE_DOWNLOAD_HISTORY_FAILURE","finally","SAVE_DOWNLOAD_HISTORY_RESET","deleteDownloadHistory","DeleteDownloadHistory","DELETE_DOWNLOAD_HISTORY_REQUEST","DELETE_DOWNLOAD_HISTORY_SUCCESS","DELETE_DOWNLOAD_HISTORY_FAILURE","DELETE_DOWNLOAD_HISTORY_RESET","MyDocumentsActionCreator","getMyDocumentFolders","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","MY_DOCUMENTS_FOLDER_SUCCESS","MY_DOCUMENTS_FOLDER_FAILURE","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","resetDocumentList","MY_DOCUMENTS_LIST_RESET","ViewDocument","documentData","documentType","setDocumentType","imageUrl","setImageUrl","loadingImage","setLoadingImage","splitDocumentName","fileName","viewImage","getSignedURL","objectKey","Modal","Container","center_document","minHeight","onLoad","src","alt","height","tenuresInit","statusCode","status","DocumentsList","location","params","URLSearchParams","aRef","AccountId","tenures","showAdvanceSearch","setShowAdvanceSearch","setSortElement","setSortType","pageCount","setPageCount","uploadDocModal","setUploadDocModal","showDocument","setShowDocument","documentToShow","setDocumentToShow","useSelector","documents","myDocuments","loading","pageNumber","accountNumber","orgType","downloadHandler","filePath","search_input","my_document_search","onMouseDown","placeholder","advanceSearch","advance_search","lg","tenure","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","originalAccountNo","equabliAccountNo","clientAccountNo","generateDate","uploadDate","shareDate","receiveDate","sharedBy","handlePagination"],"mappings":"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","file":"static/js/8.e86c48a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\",\"list_upload_container\":\"DocumentManager_list_upload_container__1v3Pa\",\"list_upload\":\"DocumentManager_list_upload__2y6p7\"};","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button, Dropdown\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye, AiFillFileExclamation, AiOutlineUpload } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    searchCriteria\r\n}: any) => {\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [show, setShow] = useState(false)\r\n    const pageSizes = [10, 50, 100];\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            // var allHeaders: any = []\r\n            // for (let i in data) {\r\n            //     allHeaders = [...allHeaders, ...(Object.keys(data[i]))]\r\n            // }\r\n            // var uniqueHeaders: any = Array.from(new Set(allHeaders))\r\n            setHeaders(Object.keys(map));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data]);\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (\r\n                    parentComponent === 'myDocuments'\r\n                    || parentComponent === 'sentDocumentRequest'\r\n                    || parentComponent === 'receiveDocumentRequest'\r\n                )\r\n                && <>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Export</Button>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Show/Hide Columns</Button>\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId, data) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds, data) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId, index) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts) => {\r\n        return (\r\n            contacts && contacts.map((contact, index) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service, index) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(data.map(li => li.folderName));\r\n        if (isCheckAll) {\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        const { id, checked } = e.target;\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data) => {\r\n        if (parentComponent === 'sentDocumentRequest' || parentComponent === 'receiveDocumentRequest') {\r\n            if (data.requestStatus === 'Open') {\r\n                return '#fbbdc3'\r\n            } else if (!data.fulfillment && new Date(data.dueDate) > new Date()) {\r\n                return '#b2e7d0'\r\n            } else if (data.requestStatus === 'Fulfilled') {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith) => {\r\n        if (!sharedWith) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW, index) => {\r\n                            return <OverlayTrigger\r\n                                key={`sw_${index}`}\r\n                                placement=\"bottom\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={(\r\n                                    <Tooltip id=\"tooltip-error\">\r\n                                        {sW.name} - {sW.email}\r\n                                    </Tooltip>\r\n                                )}\r\n                            >\r\n                                <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW.name.charAt(0)}</span>\r\n                            </OverlayTrigger>\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleDocumentName = (data) => {\r\n        if (data['documentName']) {\r\n            return <td>\r\n                <div style={{\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <BsFileEarmarkText size={24} />\r\n                    <span>\r\n                        {data['documentName']}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n        } else {\r\n            return <td\r\n                className='center_align_td'\r\n            >\r\n                <AiFillFileExclamation\r\n                    size={24}\r\n                />\r\n                {parentComponent === 'sentDocumentRequest' ? 'Pending' : 'Not Provided Yet'}\r\n            </td>\r\n        }\r\n    }\r\n\r\n    const tableHeaderHandler = () => {\r\n        return <thead>\r\n            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                {(parentComponent === 'myRequests'\r\n                    || parentComponent === 'pendingForApproval'\r\n                    || parentComponent === 'pendingMyApproval'\r\n                ) && <th>#</th>}\r\n                {\r\n                    (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                    && <th className=\"span1\">\r\n                        <div\r\n                            className=\"table_header_container\"\r\n                            style={\r\n                                {\r\n                                    'minWidth': '20px',\r\n                                    'height': '30px',\r\n                                    'alignItems': 'center'\r\n                                }\r\n                            }>\r\n                            <Form.Control type='Checkbox' onChange={() => handleAllSelect()} style={{ cursor: 'pointer' }}></Form.Control>\r\n                        </div>\r\n                    </th>\r\n                }\r\n                {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    headers && headers.map((header, index) => {\r\n                        if (header !== 'clientId'\r\n                            && header !== 'recordStatusVal'\r\n                            && header !== 'batchSchedulerGroupId'\r\n                            && header !== 'logDescription'\r\n                            && header !== 'queueId'\r\n                            && header !== 'slaStatus'\r\n                            && header !== 'alertDefinition'\r\n                            && header !== 'RFILink'\r\n                            && header !== 'auditLink'\r\n                        ) {\r\n                            return (\r\n                                <th\r\n                                    className=\"span1\"\r\n                                    key={`header_${index}`}\r\n                                >\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                    ? '300px'\r\n                                                    : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                            }\r\n                                        }>\r\n                                        <div>\r\n                                            {map[header] ? map[header] : header}\r\n                                        </div>\r\n                                        {\r\n                                            sorting\r\n                                            && (\r\n                                                <div className=\"sorting\">\r\n                                                    <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                    <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </th>\r\n                            );\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    ((typeof addEditArray.edit !== 'undefined')\r\n                        || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                    && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                }\r\n                {\r\n                    ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                    && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                }\r\n                {\r\n                    (\r\n                        parentComponent === 'myDocuments'\r\n                        || parentComponent === 'documents'\r\n                        || parentComponent === 'sentDocumentRequest'\r\n                        || parentComponent === 'receiveDocumentRequest'\r\n                        || parentComponent === 'downloadHistory'\r\n                    )\r\n                    && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n    }\r\n\r\n    const tableBodyHandler = () => {\r\n        return <tbody>\r\n            {\r\n                data && data.map((d: any, index: number) => (\r\n                    <tr\r\n                        key={`data_${index}`} style={{\r\n                            lineHeight: '30px',\r\n                            textAlign: 'center',\r\n                            position: 'relative',\r\n                            zIndex: 9,\r\n                            backgroundColor: dueDateHandler(d)\r\n                        }}\r\n\r\n                    >\r\n                        {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                        {(parentComponent === 'myRequests'\r\n                            || parentComponent === 'pendingForApproval'\r\n                            || parentComponent === 'pendingMyApproval'\r\n                        ) && <th>{index + 1}</th>}\r\n                        {\r\n                            (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                            && <th className=\"span1\">\r\n                                <div\r\n                                    className=\"table_header_container\"\r\n                                    style={\r\n                                        {\r\n                                            'minWidth': '20px',\r\n                                            'height': '30px',\r\n                                            'alignItems': 'center'\r\n                                        }\r\n                                    }>\r\n                                    <Form.Control type='Checkbox' id={d.folderName} checked={isCheck.includes(d.folderName)} style={{ cursor: 'pointer' }} onChange={handleClick} ></Form.Control>\r\n                                </div>\r\n                            </th>\r\n                        }\r\n                        {\r\n                            // eslint-disable-next-line array-callback-return\r\n                            headers.map((header: any, index2) => {\r\n                                if (header !== 'clientId'\r\n                                    && header !== 'recordStatusVal'\r\n                                    && header !== 'batchSchedulerGroupId'\r\n                                    && header !== 'logDescription'\r\n                                    && header !== 'slaStatus'\r\n                                    && header !== 'queueId'\r\n                                    && header !== 'alertDefinition'\r\n                                    && header !== 'RFILink'\r\n                                    && header !== 'auditLink'\r\n                                ) {\r\n                                    if (actionArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={\r\n                                                    {\r\n                                                        background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                        color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                    }\r\n                                                }\r\n                                                key={`data_2${index2}`}\r\n                                                className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            >\r\n                                                {\r\n                                                    servicingRequestIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    priorityIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <AiFillFolder size={20} />\r\n                                                        <span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\"\r\n                                                        >\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                    <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                        {d[header]}\r\n                                                    </span>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    if (header === 'isValidationRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isExcluded') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Y' : 'N'}</td>;\r\n                                    }\r\n                                    if (header === 'isAdditionalTimeRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'keyContacts') {\r\n                                        return <td key={`data_2${index2}`}>{keyContactsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === 'servicesOffered'\r\n                                        || header === \"accountTypeServiced\"\r\n                                    ) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                        || header === 'productType')) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"capacity\") {\r\n                                        return <td key={`data_2${index2}`}>{capacityHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"commissionRate\") {\r\n                                        return <td key={`data_2${index2}`}>{commissionRateHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"compliance\") {\r\n                                        return <td key={`data_2${index2}`}>{complianceHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                        return <td key={`data_2${index2}`}>{collectionsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"sharedWith\") {\r\n                                        return <td key={`data_2${index2}`}>{handleSharedWith(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"preview\") {\r\n                                        return <td key={`data_2${index2}`}><BsFileEarmarkText size={24} /></td>\r\n                                    }\r\n                                    if (header === 'upload') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudUpload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'download') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudDownload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'fileName') {\r\n                                        return handleDocumentName(d)\r\n                                    }\r\n                                    if (!d[header]) {\r\n                                        return <td key={`data_2${index2}`}><b>-</b></td>\r\n                                    }\r\n                                    if (header === \"partnerStatus\") {\r\n                                        return <td key={`data_2${index2}`} style={{ textAlign: 'left' }}>\r\n                                            <span style={{\r\n                                                backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                color: 'white',\r\n                                                padding: '.3rem 1rem',\r\n                                                borderRadius: '.3rem'\r\n                                            }}>{d[header]}</span><br />\r\n                                            {\r\n                                                (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                && <>\r\n                                                    <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                    <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                </>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    if (header === 'executionStatusVal') {\r\n                                        return (<td >\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                {d[header]}\r\n                                                <OverlayTrigger\r\n                                                    placement=\"right\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            {d['logDescription']}\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>)\r\n                                    }\r\n                                    if (header === 'complianceIds') {\r\n                                        return (\r\n                                            <td className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                {complianceSplitter(d[header], d)}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    if (colorArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={{ backgroundColor: `${d[header]}` }}\r\n                                                key={`data_2${index2}`}\r\n                                            >{''}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            key={`data_2${index2}`}\r\n                                        >\r\n                                            {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                            {' '}\r\n                                            {d[header]}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        {\r\n                            ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                            && <td key={`data_${index}`} className=\"span1\" >\r\n                                <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                            </td>\r\n                        }\r\n                        {\r\n                            typeof addEditArray.edit !== 'undefined'\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BiPencil onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            View\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsEye onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <CgTrash onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Disabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to unlock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Enabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to lock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                (\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    || d.recordStatusVal === \"Disabled\"\r\n                                                )\r\n                                                && (typeof addEditArray.execute !== 'undefined')\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Execute\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Deleted\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            typeof addEditArray.view !== 'undefined'\r\n                            && d['alertDefinition'] !== undefined\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            (\r\n                                parentComponent === 'myDocuments'\r\n                                || parentComponent === 'documents'\r\n                                || parentComponent === 'sentDocumentRequest'\r\n                                || parentComponent === 'receiveDocumentRequest'\r\n                                || parentComponent === 'downloadHistory'\r\n                            )\r\n                            && <td key={`data_${index}`} className='span1' style={{ minWidth: '140px', textAlign: 'center' }}>\r\n                                {\r\n                                    typeof addEditArray.upload !== 'undefined'\r\n                                    && !d[\"documentName\"]\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Upload\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudUpload onClick={() => addEditArray.upload(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.view !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.download !== 'undefined'\r\n                                    && (\r\n                                        (parentComponent === 'receiveDocumentRequest' && d[\"documentName\"])\r\n                                        || parentComponent === 'myDocuments'\r\n                                        || parentComponent === 'documents'\r\n                                        || parentComponent === 'sentDocumentRequest'\r\n                                    )\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload\r\n                                                style={{\r\n                                                    color: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"#bebebe\" : \"black\",\r\n                                                    cursor: 'pointer'\r\n                                                }}\r\n                                                onClick={() => addEditArray.download(d)} size={20} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.share !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.delete !== 'undefined'\r\n                                    &&\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            {\r\n                tableHeaderHandler()\r\n            }\r\n            {\r\n                tableBodyHandler()\r\n            }\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <th>No Records</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        <div className={`table_loading ${loadingHeight ? null : 'no_min_height'}`} >\r\n            <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        </div >\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {totalCount > 0 ? tableHandler() : emptyTable()}\r\n            </Table>\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { BsFileEarmarkPdf, BsFillFileEarmarkImageFill } from 'react-icons/bs';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\nimport { SiMicrosoftexcel } from 'react-icons/si';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, dateFormatterForRequestFileUpload, handleResponse } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\n\r\nconst FileUploadHook = (files) => {\r\n    const [state, setState] = useState<any>(null)\r\n    const zipTargetFiles: any = async (files) => {\r\n        let zipFile: any = null\r\n        if (files.length === 1) {\r\n            setState({\r\n                zipFile,\r\n                file: files[0]\r\n            })\r\n        } else {\r\n            const zip = require('jszip')();\r\n            let matrixFile: any = null\r\n            for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name === 'matrix.xlsx') {\r\n                    matrixFile = files[i]\r\n                }\r\n                if (files[i].type === 'application/zip' || files[i].type === \"application/x-zip-compressed\") {\r\n                    zipFile = files[i]\r\n                }\r\n                if (!zipFile && files[i].name !== 'matrix.xlsx') {\r\n                    zip.file(files[i].name, files[i]);\r\n                }\r\n            }\r\n            if (!zipFile) {\r\n                zip.generateAsync({ type: \"blob\" })\r\n                    .then((content) => {\r\n                        return new File([content], 'new.zip', { type: 'application/x-zip-compressed' })\r\n                    })\r\n                    .then((file) => {\r\n                        setState({\r\n                            matrixFile,\r\n                            file: file\r\n                        });\r\n                    })\r\n            } else {\r\n                setState({\r\n                    matrixFile,\r\n                    file: zipFile\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        state,\r\n        {\r\n            zipTargetFiles\r\n        }\r\n    ];\r\n}\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent, search, details = null }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n    const [fileToUpload, { zipTargetFiles }] = FileUploadHook(null)\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n    const [files, setFiles] = useState<any>([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        fileLengthSingle: false,\r\n        fileSize: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false\r\n        }\r\n        if (formObj.file === 0) {\r\n            error['fileLengthSingle'] = true\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileToUpload && JSON.stringify(fileToUpload) !== \"{}\") {\r\n            uploadFile()\r\n        }\r\n    }, [fileToUpload])\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        if (validateUpload({\r\n            file: files.length\r\n        })) {\r\n            setFormSubmitted(true)\r\n            const zippedFile = zipTargetFiles(files)\r\n            console.log(zippedFile)\r\n        }\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        let API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload`\r\n        const { file, matrixFile } = fileToUpload\r\n        let formData: any = new FormData()\r\n        try {\r\n            if (file.type === 'application/zip' || file.type === 'application/x-zip-compressed') {\r\n                formData.append(\"files\", file);\r\n                formData.append(\"files\", matrixFile)\r\n                formData.append(\"fileUploadJson\", JSON.stringify({ \"bulkType\": \"upload\", \"orgType\": 'CT' }))\r\n                API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const urls = handleResponse(response)\r\n                const responseFilePath = await axiosCustom.post(`${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk/read`,\r\n                    {\r\n                        \"orgType\": \"CT\",\r\n                        \"excelUrl\": urls.response.fileUrl[1],\r\n                        \"zipUrl\": urls.response.fileUrl[0],\r\n                        \"bulkType\": \"upload\"\r\n                    }\r\n                )\r\n                const data = handleResponse(responseFilePath)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } else {\r\n                formData.append(\"file\", file);\r\n                formData.append(\"orgType\", \"CT\")\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const data = handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            }\r\n            search()\r\n        } catch (error: any) {\r\n            setFormSubmitted(false)\r\n            addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFiles = (file) => {\r\n        let tempFiles = Object.assign([], files)\r\n        if (tempFiles.length === 0) {\r\n            tempFiles = Array.from(file)\r\n        } else {\r\n            tempFiles = [...tempFiles, ...Array.from(file)]\r\n        }\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let tempFiles = Object.assign([], files)\r\n        tempFiles.splice(index, 1);\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    const downloadSampleFile = () => {\r\n        let sampleFile = ''\r\n        if (parentComponent === 'myDocument') {\r\n            sampleFile = \"./sample_file_upload.xlsx\"\r\n        } else {\r\n            sampleFile = \"./sample_file_fulfill.xlsx\"\r\n        }\r\n        console.log(sampleFile)\r\n        axios.get(sampleFile, { responseType: 'arraybuffer' })\r\n            .then((response) => {\r\n                var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                saveAs(blob, 'fixi.xlsx');\r\n            });\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {\r\n                        (\r\n                            parentComponent === 'myDocument'\r\n                            || parentComponent === 'documents'\r\n                        )\r\n                            ? \"Upload New Document\"\r\n                            :\r\n                            (parentComponent === 'sentDocumentRequest'\r\n                                ? 'Upload file for bulk document request'\r\n                                : '')\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <div className={Styles.list_upload_container}>\r\n                            {\r\n                                files && files.length > 0 && files.map((file, index) => {\r\n                                    return <div className={Styles.list_upload} key={`file_${index}`}>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                {\r\n                                                    file.type === 'application/pdf'\r\n                                                    && <BsFileEarmarkPdf />\r\n                                                }\r\n                                                {\r\n                                                    (file.type === 'image/png' || file.type === 'image/jpeg')\r\n                                                    && <BsFillFileEarmarkImageFill />\r\n                                                }\r\n                                                {\r\n                                                    file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                                                    && <SiMicrosoftexcel />\r\n                                                }\r\n                                                <span style={{ marginLeft: '.5rem' }}>{file.name}</span>\r\n                                            </div>\r\n                                            <MdOutlineDelete onClick={() => deleteHandler(index)} size={25} style={{ marginRight: '.5rem', color: 'red', cursor: 'pointer' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input\r\n                                    ref={inputRef}\r\n                                    type=\"file\"\r\n                                    id=\"input-file-upload\"\r\n                                    accept=\"image/png, image/jpeg, application/pdf, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    multiple={true}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileLengthSingle\"] ? 'File is required' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    parentComponent === 'myDocument'\r\n                    && files.length > 1\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the Matrix file and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import {\r\n    GetDownloadHistory,\r\n    SaveDownloadHistory,\r\n    DeleteDownloadHistory\r\n} from \"../types.d\";\r\nimport { downloadHistory } from \"../../services\"\r\n\r\nexport const DownloadHistoryActionCreator = {\r\n    getDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.getDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.saveDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n    deleteDownloadHistory: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.deleteDownloadHistory(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n}","import { MyDocumentsFolder, MyDocumentsList } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    resetDocumentList: () => (dispatch: any) => {\r\n        dispatch(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi_select_container\":\"Modal_multi_select_container__2TE8W\",\"checkbox_wrapper\":\"Modal_checkbox_wrapper__3YO7R\",\"label_select\":\"Modal_label_select__qIb3F\",\"download_modal\":\"Modal_download_modal__2Q8Qv\",\"center_document\":\"Modal_center_document__1lIsg\"};","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { getSignedURL } from '../../helpers/util';\r\n\r\n\r\nimport Styles from \"./Modal.module.sass\";\r\n\r\nconst ViewDocument = ({ onHide, show, documentData }) => {\r\n\r\n    const [documentType, setDocumentType] = useState('')\r\n    const [imageUrl, setImageUrl] = useState<any>(\"\")\r\n    const [loadingImage, setLoadingImage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const splitDocumentName = documentData.fileName.split('.')\r\n        setDocumentType(splitDocumentName[splitDocumentName.length - 1])\r\n    }, [documentData])\r\n\r\n    useEffect(() => {\r\n        viewImage()\r\n    }, [documentType])\r\n\r\n    const viewImage = async () => {\r\n        if (documentType === 'pdf' || documentType === 'png') {\r\n            setLoadingImage(true)\r\n        }\r\n        let fileUrl = await getSignedURL(documentData.objectKey)\r\n        setImageUrl(fileUrl)\r\n    }\r\n\r\n    const handleNoPreview = () => {\r\n        return <p>Preview not available, Please download</p>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <p>{documentData.fileName}</p>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document} style={{ minHeight: '3rem' }}>\r\n                    {\r\n                        loadingImage\r\n                        && <CgSpinnerAlt className=\"spinner\" size={50} style={{ position: 'absolute' }} />\r\n                    }\r\n                    {\r\n                        documentType === 'png'\r\n                        && <img onLoad={() => setLoadingImage(false)} src={imageUrl} alt={documentData.fileName} width=\"100%\" />\r\n                    }\r\n                    {\r\n                        documentType === 'pdf'\r\n                        && <object data={imageUrl}\r\n                            onLoad={() => setLoadingImage(false)}\r\n                            width=\"800\"\r\n                            height=\"500\">\r\n                        </object>\r\n                    }\r\n                    {\r\n                        (\r\n                            documentType === 'txt'\r\n                            || documentType === 'xlsx'\r\n                        )\r\n                        && handleNoPreview()\r\n                    }\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default ViewDocument\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { getSignedURL } from \"../../helpers/util\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst DocumentsList = ({ location }) => {\r\n    const dispatch = useDispatch();\r\n    const params = new URLSearchParams(location.search);\r\n    const aRef = useRef<any>()\r\n    const AccountId = params.get('account_id');\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [listFiles, setListFiles] = useState([]);\r\n\r\n    const { documents, totalCount, error, loading } = useSelector((state: any) => ({\r\n        documents: state.myDocuments.documents.data,\r\n        totalCount: state.myDocuments.documents.totalCount,\r\n        error: state.myDocuments.documents.error,\r\n        loading: state.myDocuments.documents.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n        return () => {\r\n            dispatch(MyDocumentsActionCreator.resetDocumentList())\r\n        }\r\n    }, []);\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentList({\r\n            pageSize,\r\n            pageNumber,\r\n            accountNumber: AccountId,\r\n            orgType: 'CT'\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadHandler = async (document) => {\r\n        //download file\r\n        let filePath = await getSignedURL(document.objectKey)\r\n        aRef.current.href = filePath;\r\n        aRef.current.download = document.fileName;\r\n        aRef.current.click();\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.id]))\r\n    }\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                {/* <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col> */}\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={documents}\r\n                isLoading={loading}\r\n                map={{\r\n                    fileName: \"Name\",\r\n                    documentType: \"Document Type\",\r\n                    originalAccountNo: \"Original Account Number\",\r\n                    equabliAccountNo: \"Equabli Account Number\",\r\n                    clientAccountNo: \"Client Account Number\",\r\n                    generateDate: \"Generated Date\",\r\n                    uploadDate: \"upload Date\",\r\n                    shareDate: \"Share Date\",\r\n                    receiveDate: \"Receive Date\",\r\n                    fileSize: \"File Size\",\r\n                    sharedBy: \"Shared By\",\r\n                    sharedWith: \"Shared With\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['fileName']}\r\n                handleNavigate={(data) => {\r\n                    setShowDocument(true)\r\n                    setDocumentToShow(data)\r\n                }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'documents'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadHandler(data),\r\n                        share: (data) => console.log(`share action`, data),\r\n                        view: (data) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        },\r\n                        delete: (data) => console.log(`Delete Action`, data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload show={uploadDocModal} onHide={() => setUploadDocModal(false)} accountId={123} Styles={Styles} parentComponent=\"documents\" search={search} />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default DocumentsList\r\n\r\n"],"sourceRoot":""}