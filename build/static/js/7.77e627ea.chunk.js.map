{"version":3,"sources":["containers/DocumentManager/DocumentManager.module.sass","store/actions/common/types.actions.tsx","components/modal/DeleteConfirm.tsx","components/Table/pagination.tsx","components/Table/Table.tsx","components/modal/DocumentUpload.tsx","store/actions/myDocuments.actions.tsx","containers/DocumentManager/MyDocuments.tsx","store/actions/sentDocumentRequest.actions.tsx","containers/DocumentManager/SentDocumentRequests.tsx","containers/DocumentManager/DownloadHistory.tsx","containers/DocumentManager/Documents.tsx"],"names":["module","exports","TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","userType","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","DeleteConfirm","onHide","show","confirmDelete","text","actionText","details","deleteRef","useRef","useEffect","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","documentType","productName","requestedFrom","Footer","variant","ref","onClick","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","useState","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","max","min","style","marginTop","Row","Col","md","xs","First","disabled","Prev","Next","Last","TableComponent","data","isLoading","map","onPaginationChange","totalCount","isPagination","actionArray","setCurrentPage","handleNavigate","colorArray","currencyColumns","sorting","sortElement","sortType","addEditArray","tableAction","parentComponent","loadingHeight","history","searchCriteria","useHistory","isCheckAll","setIsCheckAll","isCheck","setIsCheck","headers","setHeaders","pageSize","setPageSize","pageSizes","length","Object","keys","servicingRequestIndicator","header","d","position","left","requestStatus","OverlayTrigger","placement","delay","hide","overlay","Tooltip","color","ragStatus","priorityIndicator","priorityExecution","sortBy","descElements","document","querySelectorAll","ascElements","Array","from","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","index","pathname","search","clientId","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","padding","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","e","target","checked","filter","item","dueDateHandler","fulfillment","Date","dueDate","tableHeaderHandler","lineHeight","backgroundColor","Form","Control","onChange","li","folderName","cursor","indexOf","edit","view","minWidth","openSolModal","setShow","Button","Group","as","Label","column","sm","name","value","defaultValue","Table","striped","bordered","hover","responsive","zIndex","includes","index2","slaStatus","checkType","display","alignItems","contacts","contact","phone","sharedWith","sW","email","marginLeft","charAt","href","justifyContent","recordStatusVal","margin","delete","update","execute","undefined","download","share","page","DocumentUpload","Styles","accountId","addToast","useToasts","useDispatch","files","state","setState","zipTargetFiles","zipFile","file","zip","require","matrixFile","generateAsync","content","File","FileUploadHook","fileToUpload","React","dragActive","setDragActive","inputRef","setFiles","setUserLoggedIn","formSubmitted","setFormSubmitted","fileLengthSingle","formError","setFormError","user","userService","getUser","validateUpload","formObj","formIsValid","key","k","JSON","stringify","uploadFile","onSubmitHandler","preventDefault","zippedFile","console","log","config","API_URL","process","formData","FormData","append","axiosCustom","post","response","urls","handleResponse","fileUrl","responseFilePath","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","handleFiles","tempFiles","assign","onButtonClick","current","click","downloadSampleFile","sampleFile","axios","get","responseType","blob","Blob","saveAs","list_upload_container","list_upload","splice","deleteHandler","onDragEnter","onSubmit","accept","multiple","fontSize","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","details_warning","width","MyDocumentsActionCreator","getMyDocumentFolders","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","MY_DOCUMENTS_FOLDER_SUCCESS","MY_DOCUMENTS_FOLDER_FAILURE","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","resetDocumentList","MY_DOCUMENTS_LIST_RESET","tenuresInit","statusCode","status","MyDocuments","tenures","showAdvanceSearch","setShowAdvanceSearch","setSortElement","setSortType","pageCount","setPageCount","uploadDocModal","setUploadDocModal","useSelector","folders","myDocuments","loading","pageNumber","orgType","search_input","my_document_search","onMouseDown","placeholder","advanceSearch","advance_search","lg","tenure","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","button_center","showDocumentListPage","downloadDocument","handlePagination","SentDocumentRequestActionCreator","requestPayload","GetSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequestService","getSentDocumentRequest","sent","GET_SENT_DOCUMENT_REQUEST_SUCCESS","GET_SENT_DOCUMENT_REQUEST_FAILURE","SentDocumentRequest","SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequest","SENT_DOCUMENT_REQUEST_SUCCESS","SENT_DOCUMENT_REQUEST_FAILURE","finally","SENT_DOCUMENT_REQUEST_RESET","DeleteDocumentRequest","DELETE_DOCUMENT_REQUEST_REQUEST","deleteDocumentRequest","DELETE_DOCUMENT_REQUEST_SUCCESS","DELETE_DOCUMENT_REQUEST_FAILURE","DELETE_DOCUMENT_REQUEST_RESET","RequestNewDocument","documentTypes","sendRequestRef","users","defaultSelect","usersSelected","setUserSelected","Modal","Container","center_document","originalAccountNumber","docTypeCode","handleRequest","labelKey","defaultSelected","allowNew","newSelectionPrefix","selected","options","dT","shortCode","SentDocumentRequests","showBulkRequest","setShowBulkRequest","showRequestNewDocument","setShowRequestNewDocument","showDeleteConfirm","setShowDeleteConfirm","setDetails","sentDocumentRequests","loadingDocumentTypes","errorDocumentTypes","sendRequest","sendRequestSuccess","sendRequestError","deleteRequest","deleteRequestSuccess","deleteRequestError","handleDetails","DownloadHistory","ChartJS","register","ArcElement","Legend","ChartDataLabels","productsInit","portfolioInit","usersInit","documentCoverageArr","title","accountsDone","accountsTotal","dataRequested","labels","datasets","label","borderColor","borderWidth","dataSent","Documents","location","selectedTab","setSelectedTab","tab","Tabs","activeKey","fill","onSelect","Tab","eventKey"],"mappings":"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","file":"static/js/7.77e627ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\",\"list_upload_container\":\"DocumentManager_list_upload_container__1v3Pa\",\"list_upload\":\"DocumentManager_list_upload__2y6p7\"};","import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes(userType)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes(userType)\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button, Dropdown\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye, AiFillFileExclamation } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    searchCriteria\r\n}: any) => {\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const pageSizes = [10, 50, 100];\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            // var allHeaders: any = []\r\n            // for (let i in data) {\r\n            //     allHeaders = [...allHeaders, ...(Object.keys(data[i]))]\r\n            // }\r\n            // var uniqueHeaders: any = Array.from(new Set(allHeaders))\r\n            setHeaders(Object.keys(map));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data]);\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'myDocuments' || parentComponent === 'sentDocumentRequest')\r\n                && <>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Export</Button>\r\n                    <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Show/Hide Columns</Button>\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId, data) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds, data) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId, index) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts) => {\r\n        return (\r\n            contacts && contacts.map((contact, index) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service, index) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(data.map(li => li.folderName));\r\n        if (isCheckAll) {\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        const { id, checked } = e.target;\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data) => {\r\n        if (parentComponent === 'sentDocumentRequest') {\r\n            if (!data.fulfillment && new Date(data.dueDate) >= new Date()) {\r\n                return '#fbbdc3'\r\n            } else if (!data.fulfillment && new Date(data.dueDate) < new Date()) {\r\n                return '#b2e7d0'\r\n            } else {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith) => {\r\n        if (!sharedWith) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW, index) => {\r\n                            return <OverlayTrigger\r\n                                key={`sw_${index}`}\r\n                                placement=\"bottom\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={(\r\n                                    <Tooltip id=\"tooltip-error\">\r\n                                        {sW.name} - {sW.email}\r\n                                    </Tooltip>\r\n                                )}\r\n                            >\r\n                                <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW.name.charAt(0)}</span>\r\n                            </OverlayTrigger>\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const tableHeaderHandler = () => {\r\n        return <thead>\r\n            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                {(parentComponent === 'myRequests'\r\n                    || parentComponent === 'pendingForApproval'\r\n                    || parentComponent === 'pendingMyApproval'\r\n                ) && <th>#</th>}\r\n                {\r\n                    (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                    && <th className=\"span1\">\r\n                        <div\r\n                            className=\"table_header_container\"\r\n                            style={\r\n                                {\r\n                                    'minWidth': '20px',\r\n                                    'height': '30px',\r\n                                    'alignItems': 'center'\r\n                                }\r\n                            }>\r\n                            <Form.Control type='Checkbox' onChange={() => handleAllSelect()} style={{ cursor: 'pointer' }}></Form.Control>\r\n                        </div>\r\n                    </th>\r\n                }\r\n                {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    headers && headers.map((header, index) => {\r\n                        if (header !== 'clientId'\r\n                            && header !== 'recordStatusVal'\r\n                            && header !== 'batchSchedulerGroupId'\r\n                            && header !== 'logDescription'\r\n                            && header !== 'queueId'\r\n                            && header !== 'slaStatus'\r\n                            && header !== 'alertDefinition'\r\n                            && header !== 'RFILink'\r\n                            && header !== 'auditLink'\r\n                        ) {\r\n                            return (\r\n                                <th\r\n                                    className=\"span1\"\r\n                                    key={`header_${index}`}\r\n                                >\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                    ? '300px'\r\n                                                    : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                            }\r\n                                        }>\r\n                                        <div>\r\n                                            {map[header] ? map[header] : header}\r\n                                        </div>\r\n                                        {\r\n                                            sorting\r\n                                            && (\r\n                                                <div className=\"sorting\">\r\n                                                    <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                    <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </th>\r\n                            );\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    ((typeof addEditArray.edit !== 'undefined')\r\n                        || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                    && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                }\r\n                {\r\n                    ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                    && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                }\r\n                {\r\n                    (\r\n                        parentComponent === 'myDocuments'\r\n                        || parentComponent === 'documents'\r\n                        || parentComponent === 'sentDocumentRequest'\r\n                    )\r\n                    && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n    }\r\n\r\n    const tableBodyHandler = () => {\r\n        return <tbody>\r\n            {\r\n                data && data.map((d: any, index: number) => (\r\n                    <tr\r\n                        key={`data_${index}`} style={{\r\n                            lineHeight: '30px',\r\n                            textAlign: 'center',\r\n                            position: 'relative',\r\n                            zIndex: 9,\r\n                            backgroundColor: dueDateHandler(d)\r\n                        }}\r\n\r\n                    >\r\n                        {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                        {(parentComponent === 'myRequests'\r\n                            || parentComponent === 'pendingForApproval'\r\n                            || parentComponent === 'pendingMyApproval'\r\n                        ) && <th>{index + 1}</th>}\r\n                        {\r\n                            (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                            && <th className=\"span1\">\r\n                                <div\r\n                                    className=\"table_header_container\"\r\n                                    style={\r\n                                        {\r\n                                            'minWidth': '20px',\r\n                                            'height': '30px',\r\n                                            'alignItems': 'center'\r\n                                        }\r\n                                    }>\r\n                                    <Form.Control type='Checkbox' id={d.folderName} checked={isCheck.includes(d.folderName)} style={{ cursor: 'pointer' }} onChange={handleClick} ></Form.Control>\r\n                                </div>\r\n                            </th>\r\n                        }\r\n                        {\r\n                            // eslint-disable-next-line array-callback-return\r\n                            headers.map((header: any, index2) => {\r\n                                if (header !== 'clientId'\r\n                                    && header !== 'recordStatusVal'\r\n                                    && header !== 'batchSchedulerGroupId'\r\n                                    && header !== 'logDescription'\r\n                                    && header !== 'slaStatus'\r\n                                    && header !== 'queueId'\r\n                                    && header !== 'alertDefinition'\r\n                                    && header !== 'RFILink'\r\n                                    && header !== 'auditLink'\r\n                                ) {\r\n                                    if (actionArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={\r\n                                                    {\r\n                                                        background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                        color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                    }\r\n                                                }\r\n                                                key={`data_2${index2}`}\r\n                                                className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            >\r\n                                                {\r\n                                                    servicingRequestIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    priorityIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <AiFillFolder size={20} />\r\n                                                        <span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\"\r\n                                                        >\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                    <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                        {d[header]}\r\n                                                    </span>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    if (header === 'isValidationRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isExcluded') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Y' : 'N'}</td>;\r\n                                    }\r\n                                    if (header === 'isAdditionalTimeRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'keyContacts') {\r\n                                        return <td key={`data_2${index2}`}>{keyContactsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === 'servicesOffered'\r\n                                        || header === \"accountTypeServiced\"\r\n                                    ) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                        || header === 'productType')) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"capacity\") {\r\n                                        return <td key={`data_2${index2}`}>{capacityHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"commissionRate\") {\r\n                                        return <td key={`data_2${index2}`}>{commissionRateHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"compliance\") {\r\n                                        return <td key={`data_2${index2}`}>{complianceHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                        return <td key={`data_2${index2}`}>{collectionsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"sharedWith\") {\r\n                                        return <td key={`data_2${index2}`}>{handleSharedWith(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"preview\") {\r\n                                        return <td key={`data_2${index2}`}><BsFileEarmarkText size={24} /></td>\r\n                                    }\r\n                                    if (header === 'upload') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudUpload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'download') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudDownload size={24} /></td>\r\n                                    }\r\n                                    if (parentComponent === 'sentDocumentRequest' && header === 'fileName') {\r\n                                        return <td key={`data_2${index2}`} className='center_align_td'><AiFillFileExclamation size={24} /> Pending</td>\r\n                                    }\r\n                                    if (!d[header]) {\r\n                                        return <td key={`data_2${index2}`}><b>-</b></td>\r\n                                    }\r\n                                    if (header === \"partnerStatus\") {\r\n                                        return <td key={`data_2${index2}`} style={{ textAlign: 'left' }}>\r\n                                            <span style={{\r\n                                                backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                color: 'white',\r\n                                                padding: '.3rem 1rem',\r\n                                                borderRadius: '.3rem'\r\n                                            }}>{d[header]}</span><br />\r\n                                            {\r\n                                                (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                && <>\r\n                                                    <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                    <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                </>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    if (header === 'executionStatusVal') {\r\n                                        return (<td >\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                {d[header]}\r\n                                                <OverlayTrigger\r\n                                                    placement=\"right\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            {d['logDescription']}\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>)\r\n                                    }\r\n                                    if (header === 'complianceIds') {\r\n                                        return (\r\n                                            <td className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                {complianceSplitter(d[header], d)}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    if (colorArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={{ backgroundColor: `${d[header]}` }}\r\n                                                key={`data_2${index2}`}\r\n                                            >{''}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            key={`data_2${index2}`}\r\n                                        >\r\n                                            {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                            {' '}\r\n                                            {d[header]}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        {\r\n                            ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                            && <td key={`data_${index}`} className=\"span1\" >\r\n                                <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                            </td>\r\n                        }\r\n                        {\r\n                            typeof addEditArray.edit !== 'undefined'\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BiPencil onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            View\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsEye onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <CgTrash onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Disabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to unlock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Enabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to lock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                (\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    || d.recordStatusVal === \"Disabled\"\r\n                                                )\r\n                                                && (typeof addEditArray.execute !== 'undefined')\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Execute\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Deleted\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            typeof addEditArray.view !== 'undefined'\r\n                            && d['alertDefinition'] !== undefined\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            (\r\n                                parentComponent === 'myDocuments'\r\n                                || parentComponent === 'documents'\r\n                                || parentComponent === 'sentDocumentRequest'\r\n                            )\r\n                            && <td key={`data_${index}`} className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                {\r\n                                    typeof addEditArray.view !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                } &nbsp;\r\n                                {\r\n                                    typeof addEditArray.download !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload onClick={() => addEditArray.download(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                } &nbsp;\r\n                                {\r\n                                    typeof addEditArray.share !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                } &nbsp;\r\n                                {\r\n                                    typeof addEditArray.delete !== 'undefined'\r\n                                    &&\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            {\r\n                tableHeaderHandler()\r\n            }\r\n            {\r\n                tableBodyHandler()\r\n            }\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <th>No Records</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        <div className={`table_loading ${loadingHeight ? null : 'no_min_height'}`} >\r\n            <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        </div >\r\n    );\r\n\r\n    const [show, setShow] = useState(false)\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {totalCount > 0 ? tableHandler() : emptyTable()}\r\n            </Table>\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { BsFileEarmarkPdf, BsFillFileEarmarkImageFill } from 'react-icons/bs';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\nimport { SiMicrosoftexcel } from 'react-icons/si';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, dateFormatterForRequestFileUpload, handleResponse } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\n\r\nconst FileUploadHook = (files) => {\r\n    const [state, setState] = useState<any>(null)\r\n    const zipTargetFiles: any = async (files) => {\r\n        let zipFile: any = null\r\n        if (files.length === 1) {\r\n            setState({\r\n                zipFile,\r\n                file: files[0]\r\n            })\r\n        } else {\r\n            const zip = require('jszip')();\r\n            let matrixFile: any = null\r\n            for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name === 'matrix.xlsx') {\r\n                    matrixFile = files[i]\r\n                }\r\n                if (files[i].type === 'application/zip' || files[i].type === \"application/x-zip-compressed\") {\r\n                    zipFile = files[i]\r\n                }\r\n                if (!zipFile && files[i].name !== 'matrix.xlsx') {\r\n                    zip.file(files[i].name, files[i]);\r\n                }\r\n            }\r\n            if (!zipFile) {\r\n                zip.generateAsync({ type: \"blob\" })\r\n                    .then((content) => {\r\n                        return new File([content], 'zip.zip', { type: 'application/x-zip-compressed' })\r\n                    })\r\n                    .then((file) => {\r\n                        setState({\r\n                            matrixFile,\r\n                            file: file\r\n                        });\r\n                    })\r\n            } else {\r\n                setState({\r\n                    matrixFile,\r\n                    file: zipFile\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        state,\r\n        {\r\n            zipTargetFiles\r\n        }\r\n    ];\r\n}\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent, search }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n    const [fileToUpload, { zipTargetFiles }] = FileUploadHook(null)\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n    const [files, setFiles] = useState<any>([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        fileLengthSingle: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false\r\n        }\r\n        if (formObj.file === 0) {\r\n            error['fileLengthSingle'] = true\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileToUpload && JSON.stringify(fileToUpload) !== \"{}\") {\r\n            uploadFile()\r\n        }\r\n    }, [fileToUpload])\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        if (validateUpload({\r\n            file: files.length\r\n        })) {\r\n            setFormSubmitted(true)\r\n            const zippedFile = zipTargetFiles(files)\r\n            console.log(zippedFile)\r\n        }\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        let API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload`\r\n        const { file, matrixFile } = fileToUpload\r\n        let formData: any = new FormData()\r\n        try {\r\n            if (file.type === 'application/zip' || file.type === 'application/x-zip-compressed') {\r\n                formData.append(\"files\", file);\r\n                formData.append(\"files\", matrixFile)\r\n                formData.append(\"fileUploadJson\", JSON.stringify({ \"bulkType\": \"upload\", \"orgType\": 'CT' }))\r\n                API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const urls = handleResponse(response)\r\n                const responseFilePath = await axiosCustom.post(`${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk/read`,\r\n                    {\r\n                        \"orgType\": \"CT\",\r\n                        \"excelUrl\": urls.response.fileUrl[1],\r\n                        \"zipUrl\": urls.response.fileUrl[0],\r\n                        \"bulkType\": \"upload\"\r\n                    },\r\n                    config\r\n                )\r\n                const data = handleResponse(responseFilePath)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } else {\r\n                formData.append(\"file\", file);\r\n                formData.append(\"orgType\", \"CT\")\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const data = handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            }\r\n            search()\r\n        } catch (error: any) {\r\n            setFormSubmitted(false)\r\n            addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFiles = (file) => {\r\n        let tempFiles = Object.assign([], files)\r\n        if (tempFiles.length === 0) {\r\n            tempFiles = Array.from(file)\r\n        } else {\r\n            tempFiles = [...tempFiles, ...Array.from(file)]\r\n        }\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        console.log(`handle changes`)\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let tempFiles = Object.assign([], files)\r\n        tempFiles.splice(index, 1);\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    const downloadSampleFile = () => {\r\n        let sampleFile = ''\r\n        if (parentComponent === 'myDocument') {\r\n            sampleFile = \"./sample_file_upload.xlsx\"\r\n        } else {\r\n            sampleFile = \"./sample_file_fulfill.xlsx\"\r\n        }\r\n        console.log(sampleFile)\r\n        axios.get(sampleFile, { responseType: 'arraybuffer' })\r\n            .then((response) => {\r\n                var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                saveAs(blob, 'fixi.xlsx');\r\n            });\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {\r\n                        (\r\n                            parentComponent === 'myDocument'\r\n                            || parentComponent === 'documents'\r\n                        )\r\n                            ? \"Upload New Document\"\r\n                            :\r\n                            (parentComponent === 'sentDocumentRequest'\r\n                                ? 'Upload file for bulk document request'\r\n                                : '')\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <div className={Styles.list_upload_container}>\r\n                            {\r\n                                files && files.length > 0 && files.map((file, index) => {\r\n                                    return <div className={Styles.list_upload} key={`file_${index}`}>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                {\r\n                                                    file.type === 'application/pdf'\r\n                                                    && <BsFileEarmarkPdf />\r\n                                                }\r\n                                                {\r\n                                                    (file.type === 'image/png' || file.type === 'image/jpeg')\r\n                                                    && <BsFillFileEarmarkImageFill />\r\n                                                }\r\n                                                {\r\n                                                    file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                                                    && <SiMicrosoftexcel />\r\n                                                }\r\n                                                <span style={{ marginLeft: '.5rem' }}>{file.name}</span>\r\n                                            </div>\r\n                                            <MdOutlineDelete onClick={() => deleteHandler(index)} size={25} style={{ marginRight: '.5rem', color: 'red', cursor: 'pointer' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input ref={inputRef} type=\"file\" id=\"input-file-upload\" accept=\"image/png, image/jpeg, application/pdf, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" multiple={true} onChange={handleChange} />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileLengthSingle\"] ? 'File is required' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    parentComponent === 'myDocument'\r\n                    && files.length > 1\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the Matrix file and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import { MyDocumentsFolder, MyDocumentsList } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    resetDocumentList: () => (dispatch: any) => {\r\n        dispatch(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst MyDocuments = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [documents, setDocuments] = useState([])\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n\r\n    const { folders, totalCount, error, loading } = useSelector((state: any) => ({\r\n        folders: state.myDocuments.folders.data,\r\n        totalCount: state.myDocuments.folders.totalCount,\r\n        error: state.myDocuments.folders.error,\r\n        loading: state.myDocuments.folders.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    const showDocumentListPage = (data, column) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentFolders({\r\n            pageSize,\r\n            pageNumber,\r\n            orgType: 'CT'\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadDocument = (document) => {\r\n        console.log(document)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={folders}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"folderName\": \"Name\",\r\n                    \"fileSize\": \"Size\",\r\n                    \"modifiedDate\": \"Modified Date\",\r\n                    \"shareDate\": \"Shared Date\",\r\n                    \"receiveDate\": \"Received Date\",\r\n                    \"shareBy\": \"Shared By\",\r\n                    \"sharedWith\": \"Shared With\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data, column) => showDocumentListPage(data, column)}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'myDocuments'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadDocument(data),\r\n                        share: (data) => console.log(`share action`),\r\n                        view: (data) => console.log(`View Action`),\r\n                        delete: (data) => console.log(`Delete Action`)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload show={uploadDocModal} onHide={() => setUploadDocModal(false)} accountId={123} Styles={Styles} parentComponent=\"myDocument\" search={search} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default MyDocuments\r\n\r\n","import { GetSentDocumentRequest, SentDocumentRequest, DeleteDocumentRequest } from \"../types.d\";\r\nimport { sentDocumentRequestService } from \"../../services\"\r\n\r\nexport const SentDocumentRequestActionCreator = {\r\n    getSentDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.getSentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    sentDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.sentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.deleteDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs, Modal, Container } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { SentDocumentRequestActionCreator } from \"../../store/actions/sentDocumentRequest.actions\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst SentDocumentRequests = () => {\r\n    const dispatch = useDispatch()\r\n    const { addToast } = useToasts();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [showBulkRequest, setShowBulkRequest] = useState(false)\r\n    const [showRequestNewDocument, setShowRequestNewDocument] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n\r\n    const {\r\n        sentDocumentRequests,\r\n        totalCount,\r\n        loading,\r\n        error,\r\n        documentTypes,\r\n        loadingDocumentTypes,\r\n        errorDocumentTypes,\r\n        sendRequest,\r\n        sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError\r\n    } = useSelector((state: any) => ({\r\n        sentDocumentRequests: state.sentDocumentRequest.data,\r\n        totalCount: state.sentDocumentRequest.totalCount,\r\n        loading: state.sentDocumentRequest.loading,\r\n        error: state.sentDocumentRequest.error,\r\n        documentTypes: state.types.documentType.data,\r\n        loadingDocumentTypes: state.types.documentType.loading,\r\n        errorDocumentTypes: state.types.documentType.error,\r\n        sendRequest: state.sentDocumentRequest.sendRequest,\r\n        sendRequestSuccess: state.sentDocumentRequest.sendRequestSuccess,\r\n        sendRequestError: state.sentDocumentRequest.sendRequestError,\r\n        deleteRequest: state.sentDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.sentDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.sentDocumentRequest.deleteRequestError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n        dispatch(TypesActionCreator.getDocumentTypes('CL'))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (sendRequestSuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            setShowRequestNewDocument(false);\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(SentDocumentRequestActionCreator.getSentDocumentRequest({\r\n            pageSize,\r\n            pageNumber\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(SentDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n    }\r\n\r\n    const handleDetails = (document) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={8} sm={8} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form >\r\n                            <br />\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowBulkRequest(true)}>Import Bulk Request</Button>\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowRequestNewDocument(true)}>Request New Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={sentDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillment\": \"Fulfillment Date\",\r\n                    \"fileName\": \"File Name\",\r\n                    \"requestedFrom\": \"Requested From\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'sentDocumentRequest'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => console.log(\"download\", data),\r\n                        delete: (data) => handleDetails(data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n\r\n        {\r\n            showRequestNewDocument\r\n            && <RequestNewDocument show={showRequestNewDocument} onHide={() => setShowRequestNewDocument(false)} documentTypes={documentTypes} dispatch={dispatch} />\r\n        }\r\n        {\r\n            showBulkRequest\r\n            && <DocumentUpload show={showBulkRequest} onHide={() => setShowBulkRequest(false)} accountId={123} Styles={Styles} parentComponent=\"sentDocumentRequest\" />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='sentDocumentRequest'\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nconst RequestNewDocument = ({ show, onHide, documentTypes, dispatch }) => {\r\n    const ref = useRef<any>();\r\n    const sendRequestRef = useRef<any>()\r\n    const [loading, setLoading] = useState(false);\r\n    const [users, setUsers] = useState(['aakashbehal@gmail.com', 'abc@gmail.com']);\r\n    const [defaultSelect, setDefaultSelect] = useState<any>([])\r\n    const [usersSelected, setUserSelected] = useState<any>([])\r\n\r\n    const handleRequest = (e) => {\r\n        e.preventDefault()\r\n        const {\r\n            originalAccountNumber,\r\n            clientAccountNumber,\r\n            docTypeCode\r\n        } = sendRequestRef.current\r\n        console.log(usersSelected)\r\n        console.log(originalAccountNumber.value)\r\n        console.log(clientAccountNumber.value)\r\n        console.log(docTypeCode.value)\r\n        dispatch(SentDocumentRequestActionCreator.sentDocumentRequest({\r\n            \"sendRequests\": usersSelected,\r\n            \"originalAccountNumber\": originalAccountNumber.value,\r\n            \"clientAccountNumber\": clientAccountNumber.value,\r\n            \"docTypeCode\": docTypeCode.value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"xl\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Request New Document\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document}>\r\n                    <Form ref={sendRequestRef} onSubmit={(e) => handleRequest(e)}>\r\n                        <br />\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Typeahead\r\n                                            isLoading={loading}\r\n                                            id=\"public-methods-example\"\r\n                                            labelKey=\"email\"\r\n                                            multiple\r\n                                            defaultSelected={defaultSelect}\r\n                                            ref={ref}\r\n                                            allowNew={true}\r\n                                            newSelectionPrefix='Not a Platform User: '\r\n                                            onChange={(selected) => {\r\n                                                setUserSelected(selected)\r\n                                            }}\r\n                                            options={users}\r\n                                        />\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Send Request To</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Portfolio Id</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row> */}\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"originalAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Original Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"clientAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Client Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={6} >\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"docTypeCode\"\r\n                                        className=\"select_custom white\">\r\n                                        <option></option>\r\n                                        {\r\n                                            (documentTypes && documentTypes.length > 0) &&\r\n                                            documentTypes.map((dT: any, index: number) => {\r\n                                                return <option key={`cr_${index}`} value={dT.shortCode}>{dT.documentType}</option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                    <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Col className={Styles.button_center}>\r\n                            <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Request</Button>{\" \"}\r\n                        </Col>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default SentDocumentRequests\r\n","import { useState, useEffect } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\n\r\nconst DownloadHistory = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n\r\n    const { folders, totalCount, error, loading } = useSelector((state: any) => ({\r\n        folders: state.myDocuments.folders.data,\r\n        totalCount: state.myDocuments.folders.totalCount,\r\n        error: state.myDocuments.folders.error,\r\n        loading: state.myDocuments.folders.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    const showDocumentListPage = (data, column) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        // dispatch(MyDocumentsActionCreator.getMyDocumentFolders({\r\n        //     pageSize,\r\n        //     pageNumber\r\n        // }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    return (<>\r\n        <Col>\r\n            <TableComponent\r\n                data={folders}\r\n                isLoading={false}\r\n                map={{\r\n                    \"folderName\": \"Name\",\r\n                    \"fileSize\": \"Size\",\r\n                    \"modifiedDate\": \"Modified Date\",\r\n                    \"shareDate\": \"Shared Date\",\r\n                    \"receiveDate\": \"Received Date\",\r\n                    \"shareBy\": \"Shared By\",\r\n                    \"sharedWith\": \"Shared With\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data, column) => showDocumentListPage(data, column)}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'downloadHistory'}\r\n                searchCriteria={{}}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => console.log(`download Action`),\r\n                        share: (data) => console.log(`share action`),\r\n                        view: (data) => console.log(`View Action`),\r\n                        delete: (data) => console.log(`Delete Action`)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n    </>)\r\n}\r\n\r\nexport default DownloadHistory;","import { useEffect, useState } from \"react\";\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\n\r\nimport { BsArrowsAngleContract, BsArrowsAngleExpand } from \"react-icons/bs\"\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport MyDocuments from \"./MyDocuments\";\r\nimport ReceivedDocumentRequests from \"./ReceivedDocumentRequests\";\r\nimport SentDocumentRequests from \"./SentDocumentRequests\";\r\nimport DownloadHistory from \"./DownloadHistory\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\nconst productsInit = [\r\n    {\r\n        statusCode: 'all_products',\r\n        status: 'All Products'\r\n    }\r\n]\r\nconst portfolioInit = [\r\n    {\r\n        statusCode: 'all_portfolio',\r\n        status: 'All Portfolio'\r\n    }\r\n]\r\nconst usersInit = [\r\n    {\r\n        statusCode: 'all_users',\r\n        status: 'All Users'\r\n    }\r\n]\r\n\r\nconst documentCoverageArr = [\r\n    {\r\n        percentage: 60,\r\n        title: 'Signed Contract or Term & Conditions',\r\n        accountsDone: 558,\r\n        accountsTotal: 931,\r\n        type: 'Signed contract or T&C'\r\n    },\r\n    {\r\n        percentage: 60,\r\n        title: 'Last Activity Statement',\r\n        accountsDone: 249,\r\n        accountsTotal: 416,\r\n        type: 'Last Activity Statement'\r\n    },\r\n    {\r\n        percentage: 10,\r\n        title: 'Charge-off Statement',\r\n        accountsDone: 42,\r\n        accountsTotal: 416,\r\n        type: 'Charge-off Statement'\r\n    },\r\n    {\r\n        percentage: 30,\r\n        title: 'Copy of Truth in Lending Disclosure',\r\n        accountsDone: 65,\r\n        accountsTotal: 215,\r\n        type: 'Lending Disclosure'\r\n    }\r\n];\r\n\r\nconst options = {\r\n    // responsive: true,\r\n    // maintainAspectRatio: false,\r\n    cutout: 100,\r\n    plugins: {\r\n        datalabels: {\r\n            color: 'white',\r\n            padding: 6,\r\n        },\r\n        legend: {\r\n            position: 'bottom' as const,\r\n        },\r\n    },\r\n}\r\n\r\nexport const dataRequested = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [45, 35, 20],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\nexport const dataSent = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [60, 30, 10],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\n\r\nconst Documents = ({ location }) => {\r\n    const history = useHistory();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [products, setProducts] = useState(productsInit)\r\n    const [portfolios, setPortfolios] = useState(portfolioInit)\r\n    const [users, setUsers] = useState(usersInit)\r\n    const [documentCoverage, setDocumentCoverage] = useState(documentCoverageArr)\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [collapse, setCollapse] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState('')\r\n\r\n    useEffect(() => {\r\n        const tab = location.pathname.split('/')\r\n        setSelectedTab(tab[tab.length - 1])\r\n    }, [location])\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => { }\r\n\r\n    const documentSummary = () => {\r\n        return <Col sm={12} className=\"form_container\">\r\n            <Row>\r\n                <Col sm={11}><h4 style={{ marginLeft: '1rem' }}>Document Summary</h4></Col>\r\n                <Col sm={1} style={{ textAlign: 'right', paddingRight: '2rem', cursor: 'pointer' }} onClick={() => setCollapse((collapse) => !collapse)}>\r\n                    {!collapse && <BsArrowsAngleContract size={20} />}\r\n                    {collapse && <BsArrowsAngleExpand size={20} />}\r\n                </Col>\r\n            </Row>\r\n            <Col sm={12} className={collapse ? Styles.collapse_summary : ''}>\r\n                <Row>\r\n                    <Col sm={5}>\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Coverage</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col >\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row >\r\n                                <hr />\r\n                                <Col sm={12} className={`no_padding ${Styles.progress_container_outer}`}>\r\n                                    {\r\n                                        documentCoverage && documentCoverage.length > 0\r\n                                        && documentCoverage.map((dC, index) => {\r\n                                            return (\r\n                                                <div key={`dC_${index}`} className={Styles.progress_container}>\r\n                                                    <p className={Styles.ProgressTitle}><b>{dC.title}</b></p>\r\n                                                    <ProgressBar className={Styles.progressbar} now={dC.percentage} label={`${dC.percentage}%`} />\r\n                                                    <p className={Styles.ProgressDesc}><span className={Styles.clickable}>{dC.accountsDone}</span> out of <b>{dC.accountsTotal}</b> accounts has {dC.type}</p>\r\n                                                    <hr />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                </Col>\r\n                            </Form >\r\n                        </Col >\r\n                    </Col >\r\n                    <Col sm={5}  >\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Requirement</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col sm={6} className={`${Styles.chart_container} ${Styles.right_border}`}>\r\n                                        <h5>Sent Requests</h5>\r\n                                        <Doughnut data={dataSent} options={options} />\r\n                                    </Col>\r\n                                    <Col sm={6} className={Styles.chart_container}>\r\n                                        <h5>Received Requests</h5>\r\n                                        <Doughnut data={dataRequested} options={options} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col sm={2} >\r\n                        <Col className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Usage</h5>\r\n                            <br />\r\n                            <Col sm={12} className=\"no_padding\">\r\n                                <div className={Styles.progress_container}>\r\n                                    <ProgressBar className={Styles.progressbar} now={60} label={`60%`} />\r\n                                    <br />\r\n                                    <p><b>11.58 GB used out of 15 GB</b></p>\r\n                                    <p><b>Total 15K documents</b></p>\r\n                                    <Button variant=\"dark\">Upgrade Your Plan</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Col>\r\n                    </Col>\r\n                </Row >\r\n            </Col >\r\n        </Col >\r\n    }\r\n    const handleSelect = (e) => {\r\n        history.push({\r\n            pathname: `/documents/${e}`\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                // documentSummary()\r\n            }\r\n            <br />\r\n            <Col className=\"no_padding\">\r\n                <Tabs\r\n                    activeKey={selectedTab}\r\n                    id=\"fill-tab-example\"\r\n                    fill\r\n                    className=\"mb-3\"\r\n                    onSelect={handleSelect}\r\n                >\r\n                    <Tab eventKey=\"my_documents\" title=\"My Documents\">\r\n                        <MyDocuments />\r\n                    </Tab>\r\n                    <Tab eventKey=\"sent_document_requests\" title=\"Sent Document Requests\">\r\n                        <SentDocumentRequests />\r\n                    </Tab>\r\n                    {/* <Tab eventKey=\"received_document_requests\" title=\"Received Document Request\">\r\n                        <ReceivedDocumentRequests />\r\n                    </Tab>*/}\r\n                    <Tab eventKey=\"download_history\" title=\"Download History\">\r\n                        <DownloadHistory />\r\n                    </Tab>\r\n                    {/*<Tab eventKey=\"templates\" title=\"\">\r\n                    </Tab> */}\r\n                </Tabs >\r\n            </Col >\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Documents"],"sourceRoot":""}