{"version":3,"file":"static/js/864.9ad7f699.chunk.js","mappings":"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","sources":["components/Common/NoResult.tsx","components/modal/DeleteConfirm.tsx","store/actions/fileNameConfig.actions.tsx","helpers/useDocumentTitle.tsx","containers/User/DocumentGeneralConfiguration.tsx","store/actions/common/types.actions.tsx","../node_modules/react-bootstrap/esm/Table.js","webpack://equabli-front-end/./src/containers/User/User.module.sass?4b5b"],"sourcesContent":["import { BsFolder2Open } from \"react-icons/bs\";\r\n\r\nconst NoRecord = ({ size = 30 }: any) => {\r\n    return (\r\n        <div className=\"no_result\">\r\n            <div>\r\n                <BsFolder2Open size={size} />\r\n                <p><b>No Result</b></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoRecord","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }: IDeleteConfirm) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'myDocument' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete the <b>{details.folderName}</b> folder\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'receiveDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import {\r\n    Conjunction,\r\n    FieldOptions,\r\n    UserFileNamingConfig,\r\n    UserRetentionPolicy,\r\n    UserSeparator,\r\n    UserDocumentPolicy,\r\n    SaveUserConfiguration,\r\n    RetentionPolicy,\r\n    DocumentPolicy,\r\n    UserListOfUserConfig,\r\n    DeleteUserConfiguration\r\n} from \"../types.d\";\r\nimport { commonServices, fileNameConfigService } from \"../../services\"\r\n\r\nexport const FileNameConfigActionCreator = {\r\n    getConjunction: () => (dispatch: any) => {\r\n        const request = () => ({ type: Conjunction.CONJUNCTION_REQUEST })\r\n        const success = (user: any) => ({ type: Conjunction.CONJUNCTION_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: Conjunction.CONJUNCTION_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getLookupValues({ lookupGroupKeyValue: 'CONJUNCTION_TYPE' })\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getFieldOptions: () => (dispatch: any) => {\r\n        const request = () => ({ type: FieldOptions.FIELD_OPTIONS_REQUEST })\r\n        const success = (user: any) => ({ type: FieldOptions.FIELD_OPTIONS_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: FieldOptions.FIELD_OPTIONS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getRetentionPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: RetentionPolicy.RETENTION_POLICY_REQUEST })\r\n        const success = (user: any) => ({ type: RetentionPolicy.RETENTION_POLICY_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: RetentionPolicy.RETENTION_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentPolicy.DOCUMENT_POLICY_REQUEST })\r\n        const success = (user: any) => ({ type: DocumentPolicy.DOCUMENT_POLICY_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: DocumentPolicy.DOCUMENT_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserConfig: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'FIELD' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getListOfUserConfig: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserListOfUserConfig.USER_LIST_OF_FILE_NAMING_CONFIG_REQUEST })\r\n        const success = (list: any) => ({ type: UserListOfUserConfig.USER_LIST_OF_FILE_NAMING_CONFIG_SUCCESS, payload: list })\r\n        const failure = (error: any) => ({ type: UserListOfUserConfig.USER_LIST_OF_FILE_NAMING_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getListOfUserConfig()\r\n            .then(\r\n                list => {\r\n                    dispatch(success(list))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserRetentionPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'RETENTION_POLICY' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserSeparator: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserSeparator.USER_SEPARATOR_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserSeparator.USER_SEPARATOR_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserSeparator.USER_SEPARATOR_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'SEPARATOR' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserDocumentPolicy: () => (dispatch: any) => {\r\n        const request = () => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ fileNameConfig: 'DOCUMENT_POLICY' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    saveUserConfiguration: (requestBody: any) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.saveUserConfiguration(requestBody)\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    deleteUserConfiguration: (namingConfigGroupCode: string) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteUserConfiguration.DELETE_USER_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: DeleteUserConfiguration.DELETE_USER_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: DeleteUserConfiguration.DELETE_USER_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.deleteUserConfiguration(namingConfigGroupCode)\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nconst UseDocumentTitle = (title: any, prevailOnUnmount = false) => {\r\n    const defaultTitle = useRef(document.title)\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n\r\n    useEffect(() => () => {\r\n        if (!prevailOnUnmount) {\r\n            document.title = defaultTitle.current;\r\n        }\r\n    }, [])\r\n}\r\n\r\nexport default UseDocumentTitle;","import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\"\r\nimport { Col, Row, Form, Button, OverlayTrigger, Tooltip, Table, Modal } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { HiArrowNarrowDown, HiArrowNarrowUp } from \"react-icons/hi\"\r\n\r\nimport Styles from \"./User.module.sass\"\r\nimport { FileNameConfigActionCreator } from \"../../store/actions/fileNameConfig.actions\";\r\nimport { fileNameConfigService, userService } from \"../../services\";\r\nimport UseDocumentTitle from \"../../helpers/useDocumentTitle\"\r\nimport { useToasts } from \"react-toast-notifications\"\r\nimport { createMessage } from \"../../helpers/messages\"\r\nimport { CgSpinnerAlt } from \"react-icons/cg\"\r\nimport { BsFillQuestionCircleFill } from \"react-icons/bs\"\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\"\r\nimport xlsx from \"json-as-xlsx\"\r\nimport { FiEdit2 } from \"react-icons/fi\"\r\nimport { AiOutlineDelete } from \"react-icons/ai\"\r\nimport NoRecord from \"../../components/Common/NoResult\"\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\"\r\n\r\nexport interface IDocConfig {\r\n    docMgrConfigSelectedCode: string,\r\n    domainAttributeMappingSelectedCode: string,\r\n    attributeName: string,\r\n    isMandatory: boolean,\r\n    regex: string | null\r\n}\r\nexport interface IConfiguration {\r\n    namingConfigGroupCode: string\r\n    namingConfigGroupName: string\r\n    separatorCode: string\r\n    userDocConfig: IDocConfig[]\r\n}\r\n\r\nconst DocumentGeneralConfiguration = () => {\r\n    UseDocumentTitle('Document General Configuration')\r\n    const ref = useRef<any>();\r\n    const { addToast } = useToasts();\r\n    const dispatch = useDispatch();\r\n    const [userType, setUserType] = useState(null)\r\n    const [showConfig, setShowConfig] = useState(false)\r\n    const [configurationDetails, setConfigurationDetails] = useState(null)\r\n    useEffect(() => {\r\n        const user = userService.getUser();\r\n        setUserType(user.recordSource);\r\n    }, [])\r\n\r\n    const {\r\n        saveSuccess,\r\n        saveError,\r\n    } = useSelector((state: any) => ({\r\n        saveSuccess: state.fileNameConfig.saveConfig.success,\r\n        saveError: state.fileNameConfig.saveConfig.error,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (saveSuccess) {\r\n            addToast(createMessage('', `FILE_NAME_CONFIGURATION_SAVED_SUCCESS`, ''), { appearance: 'success', autoDismiss: true });\r\n            ref.current.refreshData()\r\n            setConfigurationDetails(null)\r\n            setShowConfig(false)\r\n        }\r\n        if (saveError) {\r\n            addToast(createMessage('error', `User Configuration`, 'Save'), { appearance: 'error', autoDismiss: false });\r\n        }\r\n    }, [saveSuccess, saveError])\r\n\r\n    return <>\r\n        {<ListOfUserFileNamingConfiguration ref={ref} dispatch={dispatch} setConfigurationDetails={setConfigurationDetails} setShowConfig={setShowConfig} />}\r\n        {showConfig && <FileNamingModal userType={userType} setConfigurationDetails={setConfigurationDetails} dispatch={dispatch} show={showConfig} onHide={() => {\r\n            setShowConfig(false)\r\n        }} details={configurationDetails} />}\r\n        <br />\r\n        {\r\n            (userType === 'Client' || userType === 'Equabli')\r\n            && <Row>\r\n                <Col sm={6}>\r\n                    <RetentionPolicy dispatch={dispatch} />\r\n                </Col>\r\n                <Col sm={6}>\r\n                    <DocumentPolicy dispatch={dispatch} />\r\n                </Col>\r\n            </Row>\r\n        }\r\n    </>\r\n}\r\n\r\nconst ListOfUserFileNamingConfiguration = forwardRef(({ dispatch, setConfigurationDetails, setShowConfig }: any, ref) => {\r\n    const { addToast } = useToasts();\r\n    const [showConfirmDelete, setShowConfirmDelete] = useState<Boolean>(false)\r\n    const [toDelete, setToDelete] = useState<string>('')\r\n    const {\r\n        confListLoading,\r\n        confListError,\r\n        confList,\r\n        deleteRequest,\r\n        deleteSuccess,\r\n        deleteError\r\n    } = useSelector((state: any) => ({\r\n        confListLoading: state.fileNameConfig.fileNamingConfigList.loading,\r\n        confListError: state.fileNameConfig.fileNamingConfigList.error,\r\n        confList: state.fileNameConfig.fileNamingConfigList.data,\r\n        deleteRequest: state.fileNameConfig.fileNamingConfigList.deleteRequest,\r\n        deleteSuccess: state.fileNameConfig.fileNamingConfigList.deleteSuccess,\r\n        deleteError: state.fileNameConfig.fileNamingConfigList.deleteError,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        getListOfUserConfig()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (deleteSuccess) {\r\n            addToast(createMessage('success', 'user configuration', 'delete'), { appearance: 'success', autoDismiss: true });\r\n            getListOfUserConfig()\r\n            setConfigurationDetails(null)\r\n            setShowConfig(false)\r\n        }\r\n        if (deleteError) {\r\n            addToast(createMessage('error', `User Configuration`, 'Delete'), { appearance: 'error', autoDismiss: false });\r\n        }\r\n    }, [deleteRequest,\r\n        deleteSuccess,\r\n        deleteError])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        refreshData() {\r\n            getListOfUserConfig()\r\n        }\r\n    }));\r\n\r\n    const getListOfUserConfig = () => {\r\n        dispatch(FileNameConfigActionCreator.getListOfUserConfig())\r\n    }\r\n\r\n    const formatConfiguration = (confArr: IDocConfig[], separatorCode: string, type: string): string => {\r\n        let confString = ``\r\n        for (let index = 0; index < confArr.length; index++) {\r\n            let text = type === 'short' ? (confArr[index].domainAttributeMappingSelectedCode) : `<${confArr[index].attributeName}>`\r\n            confString += (text).trim() + ((index < confArr.length - 1) ? separatorCode : '')\r\n        }\r\n        return confString\r\n    }\r\n\r\n    const handleEdit = (config: IConfiguration) => {\r\n        setConfigurationDetails(config)\r\n        setShowConfig(true)\r\n    }\r\n\r\n    const addNewHandler = () => {\r\n        setShowConfig(true)\r\n    }\r\n\r\n    const deleteConfiguration = (conf: IConfiguration) => {\r\n        setToDelete(conf.namingConfigGroupCode)\r\n        setShowConfirmDelete(true)\r\n    }\r\n\r\n    const approveHandler = () => {\r\n        dispatch(FileNameConfigActionCreator.deleteUserConfiguration(toDelete))\r\n    }\r\n\r\n    return (\r\n        <Row className=\"form_container\" style={{ margin: 0 }}>\r\n            <Col sm={12} className=\"no_padding\" style={{ textAlign: 'right', marginBottom: '1rem' }}>\r\n                <Button variant=\"dark\" className=\"pull-right\" onClick={() => addNewHandler()}>+ Add New</Button>\r\n            </Col>\r\n            {\r\n                !confListLoading && confList.length === 0\r\n                && <thead>\r\n                    <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                        <NoRecord />\r\n                    </tr>\r\n                </thead>\r\n            }\r\n            {\r\n                !confListLoading && <Table striped hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                    <thead>\r\n                        <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                            <th>#</th>\r\n                            <th style={{ width: \"15%\" }}>Name</th>\r\n                            <th style={{ width: \"25%\" }}>File Name</th>\r\n                            <th style={{ width: \"60%\" }}>File Name Description</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            confList && confList.map((conf: IConfiguration, index: number) => {\r\n                                return <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{conf.namingConfigGroupName}</td>\r\n                                    <td>{formatConfiguration(conf.userDocConfig, conf.separatorCode, 'short')}</td>\r\n                                    <td>{formatConfiguration(conf.userDocConfig, conf.separatorCode, 'long')}</td>\r\n                                    <td className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                        <span>\r\n                                            <OverlayTrigger\r\n                                                placement=\"bottom\"\r\n                                                delay={{ show: 250, hide: 400 }}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-error`}>\r\n                                                        Edit\r\n                                                    </Tooltip>\r\n                                                }\r\n                                            >\r\n                                                <FiEdit2 onClick={() => handleEdit(conf)} size={20} style={{ cursor: 'pointer' }} />\r\n                                            </OverlayTrigger>\r\n                                        </span> &nbsp;\r\n                                        <span>\r\n                                            <OverlayTrigger\r\n                                                placement=\"bottom\"\r\n                                                delay={{ show: 250, hide: 400 }}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-error`}>\r\n                                                        Delete\r\n                                                    </Tooltip>\r\n                                                }\r\n                                            >\r\n                                                {/* onClick={() => handleDetails(cT)} */}\r\n                                                <AiOutlineDelete onClick={() => deleteConfiguration(conf)} size={20} style={{ cursor: 'pointer' }} />\r\n                                            </OverlayTrigger>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            }\r\n            {\r\n                showConfirmDelete\r\n                &&\r\n                <DeleteConfirm\r\n                    show={showConfirmDelete}\r\n                    onHide={() => setShowConfirmDelete(false)}\r\n                    confirmDelete={approveHandler}\r\n                    details={toDelete}\r\n                    type=\"configuration\"\r\n                />\r\n            }\r\n        </Row>\r\n\r\n    )\r\n})\r\n\r\nconst FileNamingModal = ({ show, onHide, details, setConfigurationDetails, userType, dispatch }: any) => {\r\n    const { addToast } = useToasts();\r\n    const clientDefault = [\"CAN\", \"DT\", \"PC\"]\r\n    const partnerDefault = [\"CIDSC\", \"DT\", \"CAN\", \"PC\"]\r\n    const configRef = useRef<any>();\r\n    const configNameSaveRef = useRef<any>();\r\n    const [uniqueIdentifier, setUniqueIdentifier] = useState<any>(null)\r\n    const [groupIdentifier, setGroupIdentifier] = useState<any>(null)\r\n    const [filteredOptions, setFilteredOptions] = useState<any>([]);\r\n    const [fieldsSelected, setFieldSelected] = useState<any>({});\r\n\r\n    const {\r\n        isLoading,\r\n        dataConjunction,\r\n        dataFieldOptions,\r\n        dataFileNamingConfig,\r\n        dataUserConjunction,\r\n        productTypes,\r\n        documentTypes\r\n    } = useSelector((state: any) => ({\r\n        isLoading: state.fileNameConfig.conjunction.loading,\r\n        dataConjunction: state.fileNameConfig.conjunction.data,\r\n        dataFieldOptions: state.fileNameConfig.fieldOptions.data,\r\n        dataFileNamingConfig: state.fileNameConfig.fileNamingConfig.data,\r\n        dataUserConjunction: state.fileNameConfig.userConjunction.data,\r\n        productTypes: state.types.productType.data,\r\n        documentTypes: state.types.documentType.data,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        let selectedTemp = {}\r\n        if (userType === 'Client' || userType === 'Equabli') {\r\n            selectedTemp = {\r\n                1: 'CAN',\r\n                2: 'DT',\r\n                3: 'PC',\r\n                4: null,\r\n                5: null,\r\n                6: null,\r\n            }\r\n        } else {\r\n            selectedTemp = {\r\n                1: 'CIDSC',\r\n                2: 'DT',\r\n                3: 'CAN',\r\n                4: 'PC',\r\n                5: null,\r\n                6: null,\r\n                7: null\r\n            }\r\n        }\r\n        setFieldSelected(selectedTemp)\r\n        dispatch(FileNameConfigActionCreator.getUserConfig())\r\n        dispatch(FileNameConfigActionCreator.getFieldOptions())\r\n        dispatch(FileNameConfigActionCreator.getConjunction())\r\n        // dispatch(FileNameConfigActionCreator.getUserSeparator())\r\n        dispatch(TypesActionCreator.getProductTypes())\r\n        dispatch(TypesActionCreator.getDocumentTypes())\r\n        if (details?.userDocConfig) {\r\n            for (let i = 0; i < details.userDocConfig.length; i++) {\r\n                if (details.userDocConfig[i].isDocumentGroupIdentifier) {\r\n                    setGroupIdentifier(details.userDocConfig[i].docMgrConfigSelectedCode.replace('field', 'field_'))\r\n                }\r\n                if (details.userDocConfig[i].isDocumentUniqueIdentifier) {\r\n                    setUniqueIdentifier(details.userDocConfig[i].docMgrConfigSelectedCode.replace('field', 'field_'))\r\n                }\r\n            }\r\n        }\r\n        return () => {\r\n            setConfigurationDetails(null)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataFieldOptions?.length > 0\r\n        ) {\r\n            handleDefaultAndSavedSelection()\r\n        }\r\n    }, [dataFieldOptions, dataFileNamingConfig])\r\n\r\n    const handleDefaultAndSavedSelection = async () => {\r\n        const { fieldFinal, selectionFinal }: { fieldFinal: any, selectionFinal: any } = await fileNameConfigService.handleDefaultAndSavedSelection(dataFieldOptions, dataFileNamingConfig, userType, fieldsSelected, details)\r\n        setFilteredOptions(fieldFinal)\r\n        setFieldSelected(selectionFinal)\r\n    }\r\n\r\n    const handleSave = (e: any, type: any) => {\r\n        e.preventDefault();\r\n        const {\r\n            config_name,\r\n            conjunction,\r\n            field_1,\r\n            field_2,\r\n            field_3,\r\n            field_4,\r\n            field_5,\r\n            field_6,\r\n            field_7\r\n        } = configRef.current\r\n        const configRequest: any = {\r\n            \"namingConfigGroupName\": config_name.value,\r\n            \"separatorCode\": conjunction.value,\r\n            userDocConfig: []\r\n        }\r\n        if (field_1.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field1\",\r\n                \"domainAttributeMappingSelectedCode\": field_1.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_1',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_1'\r\n            })\r\n        }\r\n        if (field_2.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field2\",\r\n                \"domainAttributeMappingSelectedCode\": field_2.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_2',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_2'\r\n            })\r\n        }\r\n        if (field_3.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field3\",\r\n                \"domainAttributeMappingSelectedCode\": field_3.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_3',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_3'\r\n            })\r\n        }\r\n        if (field_4.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field4\",\r\n                \"domainAttributeMappingSelectedCode\": field_4.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_4',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_4'\r\n            })\r\n        }\r\n        if (field_5.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field5\",\r\n                \"domainAttributeMappingSelectedCode\": field_5.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_5',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_5'\r\n            })\r\n        }\r\n        if (field_6.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field6\",\r\n                \"domainAttributeMappingSelectedCode\": field_6.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_6',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_6'\r\n            })\r\n        }\r\n        if (field_7 && field_7.value) {\r\n            configRequest.userDocConfig.push({\r\n                \"docMgrConfigSelectedCode\": \"field7\",\r\n                \"domainAttributeMappingSelectedCode\": field_7.value,\r\n                isMandatory: true,\r\n                \"isDocumentUniqueIdentifier\": uniqueIdentifier === 'field_7',\r\n                \"isDocumentGroupIdentifier\": groupIdentifier === 'field_7'\r\n            })\r\n        }\r\n        dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n    }\r\n\r\n    const resetHandler = async (e: any, type: any) => {\r\n        if (type === 'config') {\r\n            let selectedTemp = {}\r\n            if (userType === 'Client' || userType === 'Equabli') {\r\n                selectedTemp = {\r\n                    1: 'CAN',\r\n                    2: 'DT',\r\n                    3: 'PC',\r\n                    4: null,\r\n                    5: null,\r\n                    6: null,\r\n                }\r\n            } else {\r\n                selectedTemp = {\r\n                    1: 'CIDSC',\r\n                    2: 'DT',\r\n                    3: 'CAN',\r\n                    4: 'PC',\r\n                    5: null,\r\n                    6: null,\r\n                    7: null\r\n                }\r\n            }\r\n            configRef.current.conjunction.value = '_'\r\n            setFieldSelected(selectedTemp)\r\n            const tempMap = Object.values(selectedTemp)\r\n            let dataFieldOptionsFiltered = filteredOptions.map((fO: any) => {\r\n                if (tempMap.indexOf(fO.shortCode) === -1) {\r\n                    fO.selected = false\r\n                    fO.available = true\r\n                }\r\n                return fO\r\n            })\r\n            setFilteredOptions(dataFieldOptionsFiltered)\r\n            setTimeout(async () => {\r\n                configNameSaveRef.current.click()\r\n            }, 100)\r\n        }\r\n    }\r\n\r\n    const handleMove = async (field: any, direction: any) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        let temp = null\r\n        if (direction === 'down') {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field + 1]\r\n            fieldsSelectedTemp[field + 1] = temp\r\n        } else {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field - 1]\r\n            fieldsSelectedTemp[field - 1] = temp\r\n        }\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const handleSelection = (field: any, selected: any) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        fieldsSelectedTemp[field] = selected\r\n        const tempMap = Object.values(fieldsSelectedTemp)\r\n        let dataFieldOptionsFiltered = filteredOptions.map((fO: any) => {\r\n            if (selected === fO.shortCode) {\r\n                fO.available = false\r\n            }\r\n            if (!selected && (fieldsSelectedTemp[field] === fO.shortCode)) {\r\n                fO.available = true\r\n            }\r\n            if (tempMap.indexOf(fO.shortCode) === -1) {\r\n                fO.selected = false\r\n                fO.available = true\r\n            }\r\n            return fO\r\n        })\r\n        setFilteredOptions(dataFieldOptionsFiltered)\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const disableHandler = (fieldName: any) => {\r\n        let flag = false\r\n        if ((userType === 'Client' || userType === 'Equabli') && clientDefault.indexOf(fieldName) !== -1) {\r\n            flag = true\r\n        } else if (partnerDefault.indexOf(fieldName) !== -1) {\r\n            flag = true\r\n        }\r\n        return flag\r\n    }\r\n\r\n    const downloadProductCodes = (fileName: string) => {\r\n        let settings = {\r\n            fileName: fileName\r\n        }\r\n        let objToDownload: any = []\r\n        let tempJson: any = []\r\n        if (fileName === 'Product Codes') {\r\n            objToDownload = [\r\n                {\r\n                    sheet: \"Matrix\",\r\n                    columns: [\r\n                        { label: \"Product Code\", value: \"productCode\" },\r\n                        { label: \"Product Name\", value: \"productName\" }\r\n                    ],\r\n                    content: [],\r\n                }\r\n            ]\r\n            tempJson = productTypes && productTypes.map((data: any) => {\r\n                let obj: any = {\r\n                    \"productCode\": data.shortName,\r\n                    \"productName\": data.fullName\r\n                }\r\n                return obj\r\n            })\r\n        } else {\r\n            objToDownload = [\r\n                {\r\n                    sheet: \"Matrix\",\r\n                    columns: [\r\n                        { label: \"Document Code\", value: \"documentCode\" },\r\n                        { label: \"Document Name\", value: \"documentName\" }\r\n                    ],\r\n                    content: [],\r\n                }\r\n            ]\r\n            tempJson = documentTypes && documentTypes.map((data: any) => {\r\n                let obj: any = {\r\n                    \"documentCode\": data.shortCode,\r\n                    \"documentName\": data.documentType\r\n                }\r\n                return obj\r\n            })\r\n        }\r\n\r\n        objToDownload[0].content = tempJson\r\n        xlsx(objToDownload, settings)\r\n    }\r\n\r\n    const showExample = (json: any) => {\r\n        let index: number = 0\r\n        let documentNameGenerated = ''\r\n        for (let key in fieldsSelected) {\r\n            if (json[fieldsSelected[key]]) {\r\n                documentNameGenerated += `${index === 0 ? '' : json.conj}${json[fieldsSelected[key]]}`\r\n            }\r\n            index++\r\n        }\r\n        return documentNameGenerated\r\n    }\r\n\r\n    const handleIdentifiers = (type: string, field: string) => {\r\n        if (type === 'group') {\r\n            if (uniqueIdentifier === field) {\r\n                addToast(`Group Identifier and Unique Identifier cannot be the same field`, { appearance: 'info', autoDismiss: true });\r\n            } else {\r\n                setGroupIdentifier(field)\r\n            }\r\n        } else {\r\n            if (groupIdentifier === field) {\r\n                addToast(`Unique Identifier and Group Identifier cannot be the same field`, { appearance: 'info', autoDismiss: true });\r\n            } else {\r\n                setUniqueIdentifier(field)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            className='fileNamingConfigurationModal'\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add File Naming Configuration\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                {\r\n                    isLoading\r\n                    && <CgSpinnerAlt style={{ textAlign: 'center', width: '100%' }} className=\"spinner\" size={50} />\r\n                }\r\n                {\r\n                    !isLoading\r\n                    &&\r\n                    <Row style={{ margin: 0 }}>\r\n                        <Col lg={7} sm={12}>\r\n                            <br />\r\n                            <Form ref={configRef} onSubmit={(e) => handleSave(e, 'config')}>\r\n                                {\r\n                                    <Row>\r\n                                        <Col lg={12} md={12} className=\"no_padding\">\r\n                                            <Form.Group as={Col} className=\"mb-5\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <Form.Control\r\n                                                        as=\"input\"\r\n                                                        name=\"config_name\"\r\n                                                        defaultValue={details ? details.namingConfigGroupName : ''}\r\n                                                        className=\"select_custom\">\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Name</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                                {\r\n                                    <Row>\r\n                                        <Col lg={12} md={12} className=\"no_padding\">\r\n                                            <Form.Group as={Col}>\r\n                                                <Col md={12} sm={12}>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        name=\"conjunction\"\r\n                                                        defaultValue={details ? details.separatorCode : \"_\"}\r\n                                                        className=\"select_custom\">\r\n                                                        {\r\n                                                            dataConjunction &&\r\n                                                            dataConjunction.map((cR: any, index: number) => {\r\n                                                                return <option key={`cr_${index}`} value={cR.keyCode}>{cR.description}</option>\r\n                                                            })\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Conjunction / Concatenation Parameter</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n                                <Row>\r\n                                    <Col sm={6}></Col>\r\n                                    <Col sm={6} className={Styles.identifier_group}>\r\n                                        <Col sm={2} className=\"no_padding\">\r\n                                            <p>Arrange</p>\r\n                                        </Col>\r\n                                        <Col sm={5}>\r\n                                            <p>Group Identifier</p>\r\n                                        </Col>\r\n                                        <Col sm={5}>\r\n                                            <p>Unique Identifier</p>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </Row>\r\n                                {\r\n                                    fieldsSelected\r\n                                    && Object.keys(fieldsSelected).map((keyName, keyIndex) => {\r\n                                        return (\r\n                                            <Row key={`options_${keyIndex}`}>\r\n                                                <Col lg={12} md={12} className=\"no_padding\">\r\n                                                    <Form.Group as={Col} className=\"mb-5\">\r\n                                                        <Col sm={12}>\r\n                                                            <Row style={{ margin: 0 }}>\r\n                                                                <Col sm={6} className=\"no_padding\">\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        name={`field_${keyIndex + 1}`}\r\n                                                                        className=\"select_custom\"\r\n                                                                        disabled={\r\n                                                                            disableHandler(fieldsSelected[keyName])\r\n                                                                        }\r\n                                                                        onChange={(e) => handleSelection(keyIndex + 1, e.target.value)}\r\n                                                                        value={fieldsSelected[keyName] || ''}>\r\n                                                                        {\r\n                                                                            !fieldsSelected[Number(keyName) + 1]\r\n                                                                            && <option></option>\r\n                                                                        }\r\n                                                                        {\r\n                                                                            (filteredOptions && filteredOptions.length > 0) &&\r\n                                                                            filteredOptions.map((cR: any, index: number) => {\r\n                                                                                return <option disabled={!cR.available} key={`cr_${index}`} value={cR.attributeCode}>\r\n                                                                                    {cR.attributeName}\r\n                                                                                </option>\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                                <Col sm={6} style={{ position: 'relative' }}>\r\n                                                                    <Row style={{ margin: 0, height: '45px' }}>\r\n                                                                        <Col sm={2} className=\"no_padding\" style={{\r\n                                                                            display: 'flex',\r\n                                                                            justifyContent: 'center',\r\n                                                                            alignItems: 'center'\r\n                                                                        }}>\r\n                                                                            {\r\n                                                                                keyIndex !== 0\r\n                                                                                && fieldsSelected[keyName]\r\n                                                                                && <HiArrowNarrowUp onClick={() => handleMove(keyIndex + 1, 'up')} />\r\n                                                                            }\r\n                                                                            {\r\n                                                                                keyIndex !== (Object.keys(fieldsSelected).length - 1)\r\n                                                                                && fieldsSelected[keyName]\r\n                                                                                && fieldsSelected[Number(keyName) + 1]\r\n                                                                                && <HiArrowNarrowDown onClick={() => handleMove(keyIndex + 1, 'down')} />\r\n                                                                            }\r\n                                                                        </Col>\r\n                                                                        <Col sm={10} >\r\n                                                                            <Row sm={12} style={{ height: '45px' }}>\r\n                                                                                <Col md={6} sm={12} className=\"switch_box\" style={{ justifyContent: 'center' }}>\r\n                                                                                    <input\r\n                                                                                        type=\"checkbox\"\r\n                                                                                        className=\"switch small\"\r\n                                                                                        onChange={() => handleIdentifiers('group', `field_${keyIndex + 1}`)}\r\n                                                                                        name=\"consent\"\r\n                                                                                        checked={groupIdentifier === `field_${keyIndex + 1}`}\r\n                                                                                        defaultChecked={groupIdentifier === `field_${keyIndex + 1}`}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                                <Col md={6} sm={12} className=\"switch_box\" style={{ justifyContent: 'center' }}>\r\n                                                                                    <input\r\n                                                                                        type=\"checkbox\"\r\n                                                                                        className=\"switch small\"\r\n                                                                                        onChange={() => handleIdentifiers('unique', `field_${keyIndex + 1}`)}\r\n                                                                                        name=\"consent\"\r\n                                                                                        checked={uniqueIdentifier === `field_${keyIndex + 1}`}\r\n                                                                                        defaultChecked={uniqueIdentifier === `field_${keyIndex + 1}`}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                        <Form.Label className=\"label_custom white\">Field {keyIndex + 1}\r\n                                                            {\r\n                                                                (fieldsSelected[keyName] === 'PC' || fieldsSelected[keyName] === 'DT') &&\r\n                                                                <BsFillQuestionCircleFill size={14} style={{ marginLeft: '1rem', color: 'black', cursor: 'pointer' }} onClick={() => downloadProductCodes(fieldsSelected[keyName] === 'DT' ? 'Document Types' : 'Product Codes')} />\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                (fieldsSelected[keyName] === 'DGD') && <span className={Styles.date_format}>Format: DDMMYYYY</span>\r\n                                                            }\r\n                                                        </Form.Label>\r\n\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>)\r\n                                    })\r\n                                }\r\n                                <Col sm={12}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} ref={configNameSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                    {/* <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler(e, 'config')}>Reset to Default</Button> */}\r\n                                </Col>\r\n                            </Form>\r\n                        </Col >\r\n                        <Col lg={5} sm={12} >\r\n                            <Row>\r\n                                <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Examples</h5></Col>\r\n                            </Row>\r\n                            <br />\r\n                            <Row style={{ padding: '1rem 2rem' }} className=\"form_container\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <span> Conjunction = </span><b>[{details ? details.separatorCode : \"_\"}]</b><br />\r\n                                        <span> Client Account Number =</span> <b>40001</b><br />\r\n                                        <span> Document Type = </span><b>Bill of Sales </b><br />\r\n                                        <span> Product Code = </span><b>Credit Card</b><br />\r\n                                        <span> Original Account Number = </span><b>250001</b><br />\r\n                                        <span> Document Generation Date = </span><b>20 December 2023</b><br />\r\n                                        <span> Document Name =</span> <b>Bills</b><br />\r\n                                    </li>\r\n                                </ul>\r\n                                <p className={Styles.document_name_example_p}>\r\n                                    {\r\n                                        showExample({\r\n                                            conj: details ? details.separatorCode : \"_\",\r\n                                            CAN: 40001,\r\n                                            DT: 'BS',\r\n                                            PC: 'CC',\r\n                                            OAN: 250001,\r\n                                            DGD: 20122023,\r\n                                            DN: 'Bills'\r\n                                        })\r\n                                    }\r\n                                </p>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row >\r\n                }\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst RetentionPolicy = ({ dispatch }: any) => {\r\n    const retentionSaveRef = useRef<any>();\r\n    const retentionRef = useRef<any>();\r\n    const [retention, setRetention] = useState<any>(60)\r\n    const [minMaxError, setMinMaxError] = useState<any>(false)\r\n\r\n    const {\r\n        isLoadingRetention,\r\n        dataUserRetentionPolicy,\r\n        dataRetentionPolicy,\r\n    } = useSelector((state: any) => ({\r\n        isLoadingRetention: state.fileNameConfig.userRetentionPolicy.loading,\r\n        dataUserRetentionPolicy: state.fileNameConfig.userRetentionPolicy.data,\r\n        dataRetentionPolicy: state.fileNameConfig.retentionPolicy.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(FileNameConfigActionCreator.getRetentionPolicy())\r\n        dispatch(FileNameConfigActionCreator.getUserRetentionPolicy())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (dataUserRetentionPolicy) {\r\n            setRetention(dataUserRetentionPolicy ? dataUserRetentionPolicy.configValSelectedCode : dataRetentionPolicy.defaultValue)\r\n        }\r\n    }, [dataUserRetentionPolicy])\r\n\r\n    const handleSave = () => {\r\n        if (Number(retention) < 60 || Number(retention) > 365) {\r\n            setMinMaxError(true)\r\n            return\r\n        } else {\r\n            setMinMaxError(false)\r\n            let configRequest = [{\r\n                \"configShortCode\": \"RP\",\r\n                \"configValShortCode\": retention,\r\n                \"orgTypeCode\": \"CT\"\r\n            }]\r\n            dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n        }\r\n    }\r\n\r\n    const resetHandler = () => {\r\n        setRetention(60)\r\n        setTimeout(() => {\r\n            retentionSaveRef.current.click()\r\n        }, 0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoadingRetention && <Row style={{ margin: 0 }} className=\"form_container\">\r\n                    <Col lg={12} sm={12}>\r\n                        <Row>\r\n                            <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Document Retention Policy</h5></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <br />\r\n                        <Form ref={retentionRef} onSubmit={(e) => handleSave()}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Row>\r\n                                            <Col md={11} sm={11}>\r\n                                                <Form.Control\r\n                                                    className=\"select_custom\"\r\n                                                    type=\"number\"\r\n                                                    name=\"retention_policy\"\r\n                                                    onChange={(e) => {\r\n                                                        setRetention(e.target.value)\r\n                                                    }}\r\n                                                    value={retention} />\r\n                                            </Col>\r\n                                            <Col md={1} style={{ display: 'flex', alignItems: 'center' }}><p style={{ margin: 0 }}>Days</p></Col>\r\n                                            <span style={{ color: 'red', marginLeft: \"1rem\" }}><small>{minMaxError ? 'Retention Policy Should be between 60 to 365 days' : ''}</small></span>\r\n                                        </Row>\r\n                                        <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Retain document after closure of account till</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} ref={retentionSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler()}>Reset to Default</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst DocumentPolicy = ({ dispatch }: any) => {\r\n    const otherSaveRef = useRef<any>()\r\n    const [modeSelected, setModeSelected] = useState('KBF');\r\n    const [mode, setMode] = useState([\r\n        {\r\n            keycode: 'KBF',\r\n            keyvalue: 'Keep Both Files'\r\n        },\r\n        {\r\n            keycode: 'RE',\r\n            keyvalue: 'Replace Existing'\r\n        }\r\n    ])\r\n\r\n    const {\r\n        isLoadingDocumentPolicy,\r\n        dataDocumentPolicy,\r\n        dataUserDocumentPolicy,\r\n    } = useSelector((state: any) => ({\r\n        isLoadingDocumentPolicy: state.fileNameConfig.userDocumentPolicy.loading,\r\n        dataUserDocumentPolicy: state.fileNameConfig.userDocumentPolicy.data,\r\n        dataDocumentPolicy: state.fileNameConfig.documentPolicy.data,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (dataUserDocumentPolicy) {\r\n            setModeSelected((dataUserDocumentPolicy ? dataUserDocumentPolicy.configValSelectedCode : \"KBF\"))\r\n        }\r\n    }, [dataUserDocumentPolicy])\r\n\r\n    useEffect(() => {\r\n        dispatch(FileNameConfigActionCreator.getDocumentPolicy())\r\n        dispatch(FileNameConfigActionCreator.getUserDocumentPolicy())\r\n    }, [])\r\n\r\n    const resetHandler = () => {\r\n        setModeSelected('KBF')\r\n        setTimeout(() => {\r\n            otherSaveRef.current.click()\r\n        }, 0)\r\n    }\r\n    const handleSave = () => {\r\n        let configRequest = [{\r\n            \"configShortCode\": \"DP\",\r\n            \"configValShortCode\": modeSelected,\r\n            \"orgTypeCode\": \"CT\"\r\n        }]\r\n        dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                !isLoadingDocumentPolicy && <Row style={{ margin: 0 }} className=\"form_container\">\r\n                    <Col lg={12} sm={12}>\r\n                        <Row>\r\n                            <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Other Configuration</h5></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <br />\r\n                        <Form onSubmit={(e) => handleSave()}>\r\n                            <Row>\r\n                                <Col lg={12} md={6}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Row>\r\n                                            <Col md={12} sm={12}>\r\n                                                {\r\n                                                    mode && mode.map((m: any, index: number) => (\r\n                                                        <Form.Check\r\n                                                            key={`default-${index}`}\r\n                                                            inline\r\n                                                            type=\"radio\"\r\n                                                            onChange={(e: any) => {\r\n                                                                setModeSelected(e.target.value)\r\n                                                            }}\r\n                                                            checked={m.keycode == modeSelected}\r\n                                                            value={m.keycode}\r\n                                                            name='mode'\r\n                                                            label={m.keyvalue}\r\n                                                        />\r\n                                                    ))\r\n                                                }\r\n                                            </Col>\r\n                                            <span style={{ color: 'red', marginLeft: \"1rem\" }}><small></small></span>\r\n                                        </Row>\r\n                                        <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Incase of Document Duplication</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} className=\"mt-4\" style={{ marginLeft: '1rem' }}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} ref={otherSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler()}>Reset to Default</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DocumentGeneralConfiguration","import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a: any, b: any) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes()\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes()\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"movement_group\":\"User_movement_group__rXgoz\",\"button_center\":\"User_button_center__6vxGS\",\"search_input\":\"User_search_input__T8WWv\",\"search\":\"User_search__MehqM\",\"advanceSearch\":\"User_advanceSearch__nPdKC\",\"my_document_search\":\"User_my_document_search__5paaV\",\"collapse_summary\":\"User_collapse_summary__edJ8p\",\"advance_search\":\"User_advance_search__xOTlC\",\"required_documents\":\"User_required_documents__ITyrR\",\"document_name_example_p\":\"User_document_name_example_p__Dxc5b\",\"date_format\":\"User_date_format__VX8lq\",\"identifier_group\":\"User_identifier_group__tqevy\"};"],"names":["_ref","_ref$size","size","_jsx","className","children","_jsxs","BsFolder2Open","onHide","show","confirmDelete","_ref$text","text","_ref$actionText","actionText","details","type","deleteRef","useRef","useEffect","Modal","centered","animation","Header","closeButton","Title","id","Body","Container","folderName","documentType","productName","requestedFrom","Footer","Button","variant","ref","onClick","FileNameConfigActionCreator","dispatch","Conjunction","CONJUNCTION_REQUEST","commonServices","getLookupValues","lookupGroupKeyValue","then","user","CONJUNCTION_SUCCESS","payload","success","error","CONJUNCTION_FAILURE","failure","FieldOptions","FIELD_OPTIONS_REQUEST","fileNameConfigService","getConfig","FIELD_OPTIONS_SUCCESS","FIELD_OPTIONS_FAILURE","RetentionPolicy","RETENTION_POLICY_REQUEST","RETENTION_POLICY_SUCCESS","RETENTION_POLICY_FAILURE","DocumentPolicy","DOCUMENT_POLICY_REQUEST","DOCUMENT_POLICY_SUCCESS","DOCUMENT_POLICY_FAILURE","UserFileNamingConfig","USER_FILE_NAMING_CONFIG_REQUEST","getUserConfig","fileNameConfig","userNameConfig","USER_FILE_NAMING_CONFIG_SUCCESS","USER_FILE_NAMING_CONFIG_FAILURE","UserListOfUserConfig","USER_LIST_OF_FILE_NAMING_CONFIG_REQUEST","getListOfUserConfig","list","USER_LIST_OF_FILE_NAMING_CONFIG_SUCCESS","USER_LIST_OF_FILE_NAMING_CONFIG_FAILURE","UserRetentionPolicy","USER_RETENTION_POLICY_REQUEST","USER_RETENTION_POLICY_SUCCESS","USER_RETENTION_POLICY_FAILURE","UserDocumentPolicy","USER_DOCUMENT_POLICY_REQUEST","USER_DOCUMENT_POLICY_SUCCESS","USER_DOCUMENT_POLICY_FAILURE","requestBody","SaveUserConfiguration","SAVE_USER_CONFIG_REQUEST","saveUserConfiguration","SAVE_USER_CONFIG_SUCCESS","SAVE_USER_CONFIG_FAILURE","namingConfigGroupCode","DeleteUserConfiguration","DELETE_USER_CONFIG_REQUEST","deleteUserConfiguration","DELETE_USER_CONFIG_SUCCESS","DELETE_USER_CONFIG_FAILURE","title","prevailOnUnmount","arguments","length","undefined","defaultTitle","document","current","ListOfUserFileNamingConfiguration","forwardRef","setConfigurationDetails","setShowConfig","addToast","useToasts","_useState7","useState","_useState8","_slicedToArray","showConfirmDelete","setShowConfirmDelete","_useState9","_useState10","toDelete","setToDelete","_useSelector2","useSelector","state","confListLoading","fileNamingConfigList","loading","confListError","confList","data","deleteRequest","deleteSuccess","deleteError","createMessage","appearance","autoDismiss","useImperativeHandle","refreshData","formatConfiguration","confArr","separatorCode","confString","index","domainAttributeMappingSelectedCode","concat","attributeName","trim","Row","style","margin","Col","sm","textAlign","marginBottom","lineHeight","backgroundColor","NoRecord","Table","striped","hover","responsive","color","width","map","conf","namingConfigGroupName","userDocConfig","minWidth","OverlayTrigger","placement","delay","hide","overlay","Tooltip","FiEdit2","cursor","AiOutlineDelete","deleteConfiguration","DeleteConfirm","FileNamingModal","_ref2","userType","clientDefault","partnerDefault","configRef","configNameSaveRef","_useState11","_useState12","uniqueIdentifier","setUniqueIdentifier","_useState13","_useState14","groupIdentifier","setGroupIdentifier","_useState15","_useState16","filteredOptions","setFilteredOptions","_useState17","_useState18","fieldsSelected","setFieldSelected","_useSelector3","isLoading","conjunction","dataConjunction","dataFieldOptions","fieldOptions","dataFileNamingConfig","fileNamingConfig","dataUserConjunction","userConjunction","productTypes","types","productType","documentTypes","TypesActionCreator","getProductTypes","getDocumentTypes","i","isDocumentGroupIdentifier","docMgrConfigSelectedCode","replace","isDocumentUniqueIdentifier","handleDefaultAndSavedSelection","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fileNameConfig","fieldFinal","selectionFinal","wrap","_context","prev","next","sent","stop","apply","handleMove","_ref6","_callee4","field","direction","fieldsSelectedTemp","temp","_context4","Object","assign","_x3","_x4","disableHandler","fieldName","flag","indexOf","handleIdentifiers","CgSpinnerAlt","lg","Form","onSubmit","e","preventDefault","_configRef$current","config_name","field_1","field_2","field_3","field_4","field_5","field_6","field_7","configRequest","value","push","isMandatory","handleSave","md","Group","as","Control","name","defaultValue","Label","cR","keyCode","description","Styles","identifier_group","keys","keyName","keyIndex","disabled","onChange","selected","tempMap","values","dataFieldOptionsFiltered","fO","shortCode","available","handleSelection","target","Number","attributeCode","position","height","display","justifyContent","alignItems","HiArrowNarrowUp","HiArrowNarrowDown","checked","defaultChecked","BsFillQuestionCircleFill","marginLeft","fileName","settings","objToDownload","tempJson","sheet","columns","label","content","shortName","fullName","xlsx","downloadProductCodes","date_format","padding","document_name_example_p","json","documentNameGenerated","key","conj","showExample","CAN","DT","PC","OAN","DGD","DN","_ref7","retentionSaveRef","retentionRef","_useState19","_useState20","retention","setRetention","_useState21","_useState22","minMaxError","setMinMaxError","_useSelector4","isLoadingRetention","userRetentionPolicy","dataUserRetentionPolicy","dataRetentionPolicy","retentionPolicy","configValSelectedCode","_Fragment","left","setTimeout","click","_ref8","otherSaveRef","_useState23","_useState24","modeSelected","setModeSelected","_useState25","keycode","keyvalue","_useState26","mode","_useSelector5","isLoadingDocumentPolicy","userDocumentPolicy","dataUserDocumentPolicy","dataDocumentPolicy","documentPolicy","m","Check","inline","UseDocumentTitle","useDispatch","_useState","_useState2","setUserType","_useState3","_useState4","showConfig","_useState5","_useState6","configurationDetails","userService","getUser","recordSource","_useSelector","saveSuccess","saveConfig","saveError","getDocTypes","DocTypes","DOC_TYPES_REQUEST","getFilterTypes","compliance","sort","a","b","DOC_TYPES_SUCCESS","DOC_TYPES_FAILURE","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","_excluded","React","bsPrefix","bordered","borderless","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass"],"sourceRoot":""}