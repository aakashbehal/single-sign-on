{"version":3,"sources":["containers/DocumentManager/DocumentManager.module.sass","components/modal/DocumentUpload.tsx","containers/DocumentManager/MyDocuments.tsx","containers/DocumentManager/ReceivedDocumentRequests.tsx","containers/DocumentManager/SentDocumentRequests.tsx","containers/DocumentManager/Documents.tsx"],"names":["module","exports","DocumentUpload","show","onHide","accountId","Styles","addToast","useToasts","editRef","useRef","useDispatch","React","useState","dragActive","setDragActive","inputRef","userLoggedIn","setUserLoggedIn","dateFrom","fileTypeSelected","formSubmitted","setFormSubmitted","file","fileType","generationDate","pdfOnly","fileSize","formError","setFormError","useEffect","user","userService","getUser","validateUpload","formObj","formIsValid","error","key","k","onSubmitHandler","e","a","preventDefault","docFile","current","config","headers","Array","from","files","length","type","formData","FormData","append","dateFormatterForRequestFileUpload","loginKey","orgType","partnerId","clientId","axiosCustom","post","process","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","onButtonClick","console","log","click","Modal","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","Container","Col","sm","md","onDragEnter","onSubmit","ref","multiple","onChange","target","color","onClick","cursor","style","fontSize","margin","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","Footer","padding","details_warning","Button","variant","disabled","width","tenuresInit","statusCode","status","myDocs","name","ModifiedDate","shareDate","receivedDate","sharedBy","sharedWith","email","MyDocuments","tenures","showAdvanceSearch","setShowAdvanceSearch","uploadDocModal","setUploadDocModal","Row","search_input","search","Form","Control","my_document_search","onMouseDown","placeholder","advanceSearch","advance_search","lg","Group","as","map","tenure","index","value","Label","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","ReceivedDocumentRequests","button_center","SentDocumentRequests","ChartJS","register","ArcElement","Tooltip","Legend","ChartDataLabels","productsInit","portfolioInit","usersInit","documentCoverageArr","percentage","title","accountsDone","accountsTotal","dataRequested","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","dataSent","Documents","Tabs","defaultActiveKey","fill","Tab","eventKey"],"mappings":"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","file":"static/js/4.eb63da8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\"};","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, dateFormatterForRequestFileUpload } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\n\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        file: false,\r\n        fileType: false,\r\n        generationDate: false,\r\n        pdfOnly: false,\r\n        fileSize: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false,\r\n            fileType: false,\r\n            generationDate: false,\r\n            pdfOnly: false\r\n        }\r\n        if (formObj.file !== 0 && formObj['pdfOnly'] !== 'application/pdf') {\r\n            error['pdfOnly'] = true\r\n        }\r\n        delete formObj.pdfOnly\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        const {\r\n            docFile\r\n        } = editRef.current\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        if (validateUpload({\r\n            file: (Array.from(docFile.files)).length,\r\n            pdfOnly: docFile.files && docFile.files[0] ? docFile.files[0].type : '',\r\n            fileType: fileTypeSelected,\r\n            generationDate: dateFrom\r\n        })) {\r\n\r\n            setFormSubmitted(true)\r\n            let formData: any = new FormData()\r\n            formData.append(\"docType\", fileTypeSelected)\r\n            formData.append(\"docDate\", dateFormatterForRequestFileUpload(dateFrom))\r\n            formData.append(\"file\", docFile.files[0])\r\n            formData.append(\"accountId\", accountId)\r\n            formData.append(\"createdBy\", userLoggedIn.loginKey)\r\n            try {\r\n                const user = userService.getUser();\r\n                if (user.orgType === \"PT\") {\r\n                    formData.append('partnerId', user.partnerId)\r\n                } else if (user.orgType === \"CL\") {\r\n                    formData.append('clientId', user.clientId)\r\n                }\r\n                const response = await axiosCustom.post(`${process.env.REACT_APP_BASE_URL1}${process.env.REACT_APP_AWS_SERVICE}/uploadDocument`, formData, config)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } catch (error: any) {\r\n                setFormSubmitted(false)\r\n                addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n                throw error\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            console.log(e.dataTransfer.files)\r\n            // handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        console.log(`handle changes`)\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            console.log(e.target.files)\r\n            // handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        console.log(`clicked`);\r\n        inputRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    Upload New Document\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input ref={inputRef} type=\"file\" id=\"input-file-upload\" multiple={true} onChange={handleChange} />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"file\"] ? 'File is required' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{formError[\"pdfOnly\"] ? 'File should be PDF format' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileSize\"] ? 'File size cannot be more than 50MB' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }}>\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import { useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst myDocs = [\r\n    {\r\n        name: 'Portfolio-567890',\r\n        ModifiedDate: '03/23/2020',\r\n        shareDate: '04/23/2020',\r\n        receivedDate: '-',\r\n        size: '753kb',\r\n        sharedBy: 'Me',\r\n        sharedWith: [\r\n            { name: 'Sarah Smith', email: 'sarah.smith@gmail.com' },\r\n            { name: 'Nina Frazier', email: 'nina.fraizer@gmail.com' },\r\n            { name: 'Nina Frazier', email: 'nina.fraizer@gmail.com' },\r\n            { name: 'Nina Frazier', email: 'nina.fraizer@gmail.com' }\r\n        ]\r\n    },\r\n    {\r\n        name: 'Portfolio-567890',\r\n        ModifiedDate: '03/23/2020',\r\n        shareDate: '-',\r\n        receivedDate: '01/22/2021',\r\n        size: '753kb',\r\n        sharedBy: 'CKS Financial',\r\n        sharedWith: [\r\n            { name: 'Sarah Smith', email: 'sarah.smith@gmail.com' },\r\n            { name: 'Nina Frazier', email: 'nina.fraizer@gmail.com' }\r\n        ]\r\n    }\r\n]\r\n\r\nconst MyDocuments = () => {\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [documents, setDocuments] = useState(myDocs)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => { }\r\n\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\">\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                {/* <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col> */}\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        {/* <Col>\r\n            <TableComponent\r\n                data={documents}\r\n                isLoading={false}\r\n                map={{\r\n                    name: 'Name',\r\n                    ModifiedDate: 'Modified Date',\r\n                    shareDate: 'Shared Date',\r\n                    receivedDate: 'Received Date',\r\n                    size: 'Size',\r\n                    sharedBy: 'Shared By',\r\n                    sharedWith: 'Shared With'\r\n                }}\r\n                totalCount={2}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'myDocuments'}\r\n                searchCriteria={{}}\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col> */}\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload show={uploadDocModal} onHide={() => setUploadDocModal(false)} accountId={123} Styles={Styles} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default MyDocuments\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst ReceivedDocumentRequests = () => {\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => { }\r\n\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\">\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* <Row>\r\n                <Col md={9} sm={9} className={Styles.search_input}>\r\n                </Col>\r\n                <Col md={3} sm={3} style={{ display: 'flex' }}>\r\n                    <Button variant=\"dark\" style={{ flex: 1, marginRight: '1rem' }}>Export</Button>\r\n                    <Button variant=\"dark\" style={{ flex: 3 }}>Show/Hide Columns</Button>\r\n                </Col>\r\n            </Row> */}\r\n        </Col>\r\n        <br />\r\n        {/* <Col>\r\n            <TableComponent\r\n                data={[]}\r\n                isLoading={false}\r\n                map={{}}\r\n                totalCount={0}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'account'}\r\n                searchCriteria={{}}\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col> */}\r\n    </>)\r\n}\r\n\r\nexport default ReceivedDocumentRequests\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst SentDocumentRequests = () => {\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => { }\r\n\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\">\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (tenures && tenures.length > 0) &&\r\n                                                    tenures.map((tenure: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col sm={12}>\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <DatePicker\r\n                                                format={'MM/dd/yyyy'}\r\n                                                className=\"select_custom white\"\r\n                                                monthPlaceholder={'mm'}\r\n                                                dayPlaceholder={'dd'}\r\n                                                yearPlaceholder={'yyyy'} />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                    </Form.Group>\r\n\r\n                                </Row>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\">Reset</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {/* <Row>\r\n                <Col md={9} sm={9} className={Styles.search_input}>\r\n                </Col>\r\n                <Col md={3} sm={3} style={{ display: 'flex' }}>\r\n                    <Button variant=\"dark\" style={{ flex: 1, marginRight: '1rem' }}>Export</Button>\r\n                    <Button variant=\"dark\" style={{ flex: 3 }}>Show/Hide Columns</Button>\r\n                </Col>\r\n            </Row> */}\r\n        </Col>\r\n        <br />\r\n        {/* <Col>\r\n            <TableComponent\r\n                data={[]}\r\n                isLoading={false}\r\n                map={{}}\r\n                totalCount={0}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'account'}\r\n                searchCriteria={{}}\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col> */}\r\n    </>)\r\n}\r\n\r\nexport default SentDocumentRequests\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\n\r\nimport { BsArrowsAngleContract, BsArrowsAngleExpand } from \"react-icons/bs\"\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport MyDocuments from \"./MyDocuments\";\r\nimport ReceivedDocumentRequests from \"./ReceivedDocumentRequests\";\r\nimport SentDocumentRequests from \"./SentDocumentRequests\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\nconst productsInit = [\r\n    {\r\n        statusCode: 'all_products',\r\n        status: 'All Products'\r\n    }\r\n]\r\nconst portfolioInit = [\r\n    {\r\n        statusCode: 'all_portfolio',\r\n        status: 'All Portfolio'\r\n    }\r\n]\r\nconst usersInit = [\r\n    {\r\n        statusCode: 'all_users',\r\n        status: 'All Users'\r\n    }\r\n]\r\n\r\nconst documentCoverageArr = [\r\n    {\r\n        percentage: 60,\r\n        title: 'Signed Contract or Term & Conditions',\r\n        accountsDone: 558,\r\n        accountsTotal: 931,\r\n        type: 'Signed contract or T&C'\r\n    },\r\n    {\r\n        percentage: 60,\r\n        title: 'Last Activity Statement',\r\n        accountsDone: 249,\r\n        accountsTotal: 416,\r\n        type: 'Last Activity Statement'\r\n    },\r\n    {\r\n        percentage: 10,\r\n        title: 'Charge-off Statement',\r\n        accountsDone: 42,\r\n        accountsTotal: 416,\r\n        type: 'Charge-off Statement'\r\n    },\r\n    {\r\n        percentage: 30,\r\n        title: 'Copy of Truth in Lending Disclosure',\r\n        accountsDone: 65,\r\n        accountsTotal: 215,\r\n        type: 'Lending Disclosure'\r\n    }\r\n];\r\n\r\nconst options = {\r\n    // responsive: true,\r\n    // maintainAspectRatio: false,\r\n    cutout: 100,\r\n    plugins: {\r\n        datalabels: {\r\n            color: 'white',\r\n            padding: 6,\r\n        },\r\n        legend: {\r\n            position: 'bottom' as const,\r\n        },\r\n    },\r\n}\r\n\r\nexport const dataRequested = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [45, 35, 20],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\nexport const dataSent = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [60, 30, 10],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\n\r\nconst Documents = () => {\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [products, setProducts] = useState(productsInit)\r\n    const [portfolios, setPortfolios] = useState(portfolioInit)\r\n    const [users, setUsers] = useState(usersInit)\r\n    const [documentCoverage, setDocumentCoverage] = useState(documentCoverageArr)\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [collapse, setCollapse] = useState(false);\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => { }\r\n\r\n    const documentSummary = () => {\r\n        return <Col sm={12} className=\"form_container\">\r\n            <Row>\r\n                <Col sm={11}><h4 style={{ marginLeft: '1rem' }}>Document Summary</h4></Col>\r\n                <Col sm={1} style={{ textAlign: 'right', paddingRight: '2rem', cursor: 'pointer' }} onClick={() => setCollapse((collapse) => !collapse)}>\r\n                    {!collapse && <BsArrowsAngleContract size={20} />}\r\n                    {collapse && <BsArrowsAngleExpand size={20} />}\r\n                </Col>\r\n            </Row>\r\n            <Col sm={12} className={collapse ? Styles.collapse_summary : ''}>\r\n                <Row>\r\n                    <Col sm={5}>\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Coverage</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col >\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row >\r\n                                <hr />\r\n                                <Col sm={12} className={`no_padding ${Styles.progress_container_outer}`}>\r\n                                    {\r\n                                        documentCoverage && documentCoverage.length > 0\r\n                                        && documentCoverage.map((dC, index) => {\r\n                                            return (\r\n                                                <div className={Styles.progress_container}>\r\n                                                    <p className={Styles.ProgressTitle}><b>{dC.title}</b></p>\r\n                                                    <ProgressBar className={Styles.progressbar} now={dC.percentage} label={`${dC.percentage}%`} />\r\n                                                    <p className={Styles.ProgressDesc}><span className={Styles.clickable}>{dC.accountsDone}</span> out of <b>{dC.accountsTotal}</b> accounts has {dC.type}</p>\r\n                                                    <hr />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                </Col>\r\n                            </Form >\r\n                        </Col >\r\n                    </Col >\r\n                    <Col sm={5}  >\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Requirement</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col sm={6} className={`${Styles.chart_container} ${Styles.right_border}`}>\r\n                                        <h5>Sent Requests</h5>\r\n                                        <Doughnut data={dataSent} options={options} />\r\n                                    </Col>\r\n                                    <Col sm={6} className={Styles.chart_container}>\r\n                                        <h5>Received Requests</h5>\r\n                                        <Doughnut data={dataRequested} options={options} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col sm={2} >\r\n                        <Col className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Usage</h5>\r\n                            <br />\r\n                            <Col sm={12} className=\"no_padding\">\r\n                                <div className={Styles.progress_container}>\r\n                                    <ProgressBar className={Styles.progressbar} now={60} label={`60%`} />\r\n                                    <br />\r\n                                    <p><b>11.58 GB used out of 15 GB</b></p>\r\n                                    <p><b>Total 15K documents</b></p>\r\n                                    <Button variant=\"dark\">Upgrade Your Plan</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Col>\r\n                    </Col>\r\n                </Row >\r\n            </Col >\r\n        </Col >\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* {\r\n                documentSummary()\r\n            } */}\r\n            <br />\r\n            <Col className=\"no_padding\">\r\n                <Tabs\r\n                    defaultActiveKey=\"Documents\"\r\n                    id=\"fill-tab-example\"\r\n                    fill\r\n                    className=\"mb-3\"\r\n                >\r\n                    <Tab eventKey=\"Documents\" title=\"My Documents\">\r\n                        <MyDocuments />\r\n                    </Tab>\r\n                    <Tab eventKey=\"sendDocuments\" title=\"Sent Document Requests\">\r\n                        <SentDocumentRequests />\r\n                    </Tab>\r\n                    <Tab eventKey=\"receivedDocuments\" title=\"Received Document Request\">\r\n                        <ReceivedDocumentRequests />\r\n                    </Tab>\r\n                    <Tab eventKey=\"templates\" title=\"Templates\">\r\n\r\n                    </Tab>\r\n                    <Tab eventKey=\"downloadHistory\" title=\"Download History\">\r\n\r\n                    </Tab>\r\n                </Tabs >\r\n            </Col >\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Documents"],"sourceRoot":""}