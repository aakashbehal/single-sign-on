{"version":3,"file":"static/js/192.d180715b.chunk.js","mappings":"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","sources":["components/CustomHooks/FileUploadHook.tsx","components/modal/DocumentUpload.tsx"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nconst FileUploadHook = (files: any) => {\r\n    const [state, setState] = useState<any>(null)\r\n    const zipTargetFiles: any = async (files: any) => {\r\n        let zipFile: any = null\r\n        if (files.length === 1) {\r\n            setState({\r\n                zipFile,\r\n                file: files[0]\r\n            })\r\n        } else {\r\n            const zip = require('jszip')();\r\n            let matrixFile: any = null\r\n            for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name === 'matrix.xlsx') {\r\n                    matrixFile = files[i]\r\n                }\r\n                if (files[i].type === 'application/zip' || files[i].type === \"application/x-zip-compressed\") {\r\n                    zipFile = files[i]\r\n                }\r\n                if (!zipFile && files[i].name !== 'matrix.xlsx') {\r\n                    zip.file(files[i].name, files[i]);\r\n                }\r\n            }\r\n            if (!zipFile) {\r\n                zip.generateAsync({ type: \"blob\" })\r\n                    .then((content: any) => {\r\n                        return new File([content], 'new.zip', { type: 'application/x-zip-compressed' })\r\n                    })\r\n                    .then((file: any) => {\r\n                        setState({\r\n                            matrixFile,\r\n                            file: file\r\n                        });\r\n                    })\r\n            } else {\r\n                setState({\r\n                    matrixFile,\r\n                    file: zipFile\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        state,\r\n        {\r\n            zipTargetFiles\r\n        }\r\n    ];\r\n}\r\n\r\nexport default FileUploadHook","\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Container, Modal, Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { BsFileEarmarkPdf, BsFillFileEarmarkImageFill } from 'react-icons/bs';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\nimport { SiMicrosoftexcel } from 'react-icons/si';\r\nimport { GrDocumentZip } from 'react-icons/gr';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { saveAs } from 'file-saver';\r\nimport xlsx from 'json-as-xlsx';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, formatBytes, handleResponse } from '../../helpers/util';\r\nimport { SummaryActionCreator } from '../../store/actions/summary.actions';\r\nimport FileUploadHook from '../CustomHooks/FileUploadHook';\r\nimport DocumentTypes from '../Common/DocumentType';\r\nimport { userService } from '../../services';\r\n\r\nconst SAMPLE_UPLOAD = [\r\n    {\r\n        sheet: \"Matrix\",\r\n        columns: [\r\n            { label: \"Document Type\" },\r\n            { label: \"Product Code\" },\r\n            { label: \"Original Account Number\" },\r\n            { label: \"Client Account Number\" },\r\n            { label: \"Document Generation Date\" },\r\n            { label: \"Equabli Account Number\" },\r\n            { label: \"Client Short Code\" },\r\n            { label: \"File Name\" }\r\n        ],\r\n        content: [],\r\n    }\r\n]\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent, search, details = null }: any) => {\r\n    const { addToast } = useToasts();\r\n    const dispatch = useDispatch();\r\n    const documentTypeRef = useRef<any>();\r\n    const [fileToUpload, { zipTargetFiles }] = FileUploadHook(null)\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n    const [files, setFiles] = useState<any>([])\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        fileLengthSingle: false,\r\n        fileSize: false\r\n    })\r\n    const [userType, setUserType] = useState<string>('')\r\n    const [profileImageTemp, setProfileImageTemp] = useState<any>()\r\n    const [noMatrixFile, SetNoMatrixFile] = useState(false);\r\n    const [jsonForRequest, setJsonForRequest] = useState([])\r\n    const [documentTypeFromName, setDocumentTypeFromName] = useState<any>(null)\r\n\r\n    const {\r\n        documentTypes\r\n    } = useSelector((state: any) => ({\r\n        documentTypes: state.types.documentType.data,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        const type = userService.getUserType()\r\n        setUserType(type)\r\n        if (parentComponent === 'documentNotSummary_request') {\r\n            getNotList()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fileToUpload && JSON.stringify(fileToUpload) !== \"{}\") {\r\n            uploadFile()\r\n        }\r\n    }, [fileToUpload])\r\n\r\n    const downloadExcel = (fileName: any, data: any) => {\r\n        let settings = {\r\n            fileName\r\n        }\r\n        xlsx(data, settings)\r\n    }\r\n\r\n    const getNotList = async () => {\r\n        try {\r\n            const response = await axiosCustom.post(`${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_DOCUMENT_SERVICE}/user/document/summary/accounts/not`, {\r\n                pageSize: details.pageSize,\r\n                pageNumber: details.pageNumber - 1,\r\n                docTypeCode: details.docTypeCode,\r\n                tenure: details.duration === 'null' ? null : details.duration,\r\n                portfolio: details.portfolio === 'null' ? null : details.portfolio,\r\n                productCode: details.productCode === 'null' ? null : details.productCode,\r\n                userId: details.userId === 'null' ? null : details.userId\r\n            })\r\n            const data = handleResponse(response)\r\n            const objToDownload: any = [\r\n                {\r\n                    sheet: \"Matrix\",\r\n                    columns: [\r\n                        { label: \"Document Type\", value: \"documentType\" },\r\n                        { label: \"Requested From\", value: \"requestedFrom\" },\r\n                        { label: \"Original Account Number\", value: \"originalAccountNumber\" },\r\n                        { label: \"Client Account Number\", value: \"clientAccountNumber\" },\r\n                        { label: \"Equabli Account Number\", value: \"equabliAccountNumber\" },\r\n                        { label: \"Client Short Code\", value: \"clientShortCode\" }\r\n                    ],\r\n                    content: [],\r\n                }\r\n            ]\r\n            const tempJson = data && data.response && data.response.datas.map((data: any) => {\r\n                let obj = {\r\n                    \"documentType\": details.docTypeCode,\r\n                    \"requestedFrom\": \"\",\r\n                    \"originalAccountNumber\": \"\",\r\n                    \"clientAccountNumber\": data,\r\n                    \"equabliAccountNumber\": \"\",\r\n                    \"clientShortCode\": \"\"\r\n                }\r\n                return obj\r\n            })\r\n            objToDownload[0].content = tempJson\r\n            setJsonForRequest(objToDownload)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const validateUpload = (formObj: any) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false\r\n        }\r\n        if (formObj.file === 0) {\r\n            error['fileLengthSingle'] = true\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        if (validateUpload({\r\n            file: files.length\r\n        })) {\r\n            setFormSubmitted(true)\r\n            zipTargetFiles(files)\r\n        }\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        SetNoMatrixFile(false)\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        let API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload`\r\n        const { file, matrixFile } = fileToUpload\r\n        if ((parentComponent === 'myDocument' || parentComponent === 'receiveDocumentRequest') && files.length > 1 && !matrixFile) {\r\n            setFormSubmitted(false)\r\n            SetNoMatrixFile(true)\r\n            return\r\n        }\r\n        let formData: any = new FormData()\r\n        try {\r\n            // size of the file should not be more than 10\r\n            if (file.size > 10485760) {\r\n                addToast(createMessage('info', `FILE_LARGE`, ''), { appearance: 'info', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                return\r\n            }\r\n            if (file.type === 'application/zip' || file.type === 'application/x-zip-compressed') {\r\n                formData.append(\"doc\", file);\r\n                formData.append(\"doc\", matrixFile)\r\n                API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } else {\r\n                if (parentComponent === 'profile') {\r\n                    API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_USER_SERVICE}/v1/users/uploadProfilePic`\r\n                    formData.append(\"file\", file);\r\n                } else if (parentComponent === 'documents') {\r\n                    const {\r\n                        document_type\r\n                    } = documentTypeRef.current\r\n                    API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/account`\r\n                    formData.append(\"accountNumber\", details.accountId);\r\n                    formData.append(\"docType\", document_type.value);\r\n                    formData.append(\"doc\", file);\r\n                } else if (parentComponent === \"receiveDocumentRequest\" && details !== null) {\r\n                    API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/fullfill`\r\n                    formData.append(\"doc\", file);\r\n                    formData.append(\"id\", details.id)\r\n                    // ===================================================\r\n                    // formData.append(\"clientShortCode\", JSON.stringify())\r\n                } else if (parentComponent === \"sentDocumentRequest\" || parentComponent === 'documentNotSummary_request') {\r\n                    API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                    formData.append(\"doc\", file);\r\n                } else if (parentComponent === 'documentNotSummary') {\r\n                    API_URL = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/specific/accounts`;\r\n                    formData.append(\"doc\", file);\r\n                    formData.append(\"docTypeCode\", details.docTypeCode);\r\n                } else {\r\n                    formData.append(\"doc\", file);\r\n                }\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            }\r\n            // dispatch(SummaryActionCreator.getReceiveSummary())\r\n            dispatch(SummaryActionCreator.getSentSummary({}))\r\n            search()\r\n        } catch (error: any) {\r\n            setFormSubmitted(false)\r\n            addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n            // throw error.message.message\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e: any) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFiles = (file: any) => {\r\n        let tempFiles = Object.assign([], files)\r\n        if (parentComponent === 'profile') {\r\n            var reader = new FileReader();\r\n            var url = reader.readAsDataURL(file[0]);\r\n            reader.onloadend = function (e) {\r\n                setProfileImageTemp(reader.result)\r\n            }\r\n        } if (parentComponent !== 'documents') {\r\n            if (tempFiles.length === 0) {\r\n                tempFiles = Array.from(file)\r\n            } else {\r\n                tempFiles = [...tempFiles, ...Array.from(file)]\r\n            }\r\n        } else {\r\n            const documentTypesCodes = documentTypes.map((dT: any) => dT.shortCode)\r\n            const fileArray: any = Array.from(file)\r\n            documentTypesCodes.map((dTc: any) => {\r\n                if (fileArray[0].name.includes(`_${dTc}_`)) {\r\n                    setDocumentTypeFromName(dTc)\r\n                }\r\n            })\r\n            tempFiles = Array.from(file)\r\n        }\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e: any) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e: any) {\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        if (parentComponent !== 'profile') {\r\n            inputRef.current.click();\r\n        } else {\r\n            ProfileRef.current.click()\r\n        }\r\n    };\r\n\r\n    const deleteHandler = (index: any) => {\r\n        let tempFiles = Object.assign([], files)\r\n        tempFiles.splice(index, 1);\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    const downloadSampleFile = () => {\r\n        let sampleFile = ''\r\n        if (parentComponent === 'myDocument') {\r\n            sampleFile = \"./sample_file_upload.xlsx\"\r\n        } else {\r\n            sampleFile = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/download`\r\n        }\r\n        axiosCustom.get(sampleFile, { responseType: 'arraybuffer' })\r\n            .then((response: any) => {\r\n                var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                saveAs(blob, 'SendRequestDocumentSample.xlsx');\r\n            });\r\n    }\r\n\r\n    const ProfileRef = useRef<any>()\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {\r\n                        (\r\n                            parentComponent === 'myDocument'\r\n                            || parentComponent === 'documents'\r\n                            || parentComponent === 'documentNotSummary'\r\n                            || parentComponent === 'documentNotSummary_request'\r\n                        )\r\n                            ? \"Upload New Document\"\r\n                            :\r\n                            (parentComponent === 'sentDocumentRequest'\r\n                                ? 'Upload file for bulk document request'\r\n                                : '')\r\n                    }\r\n                    {\r\n                        parentComponent === 'profile'\r\n                        && \"Upload Profile Picture\"\r\n                    }\r\n                    {\r\n                        parentComponent === 'receiveDocumentRequest'\r\n                        && \"Upload File to FulFill the request\"\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        {\r\n                            parentComponent !== 'profile'\r\n                            &&\r\n                            <div className={Styles.list_upload_container}>\r\n                                {\r\n                                    files && files.length > 0 && files.map((file: any, index: any) => {\r\n                                        return <div className={Styles.list_upload} key={`file_${index}`}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                                <Col sm={6} >\r\n                                                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                        {file.type === 'application/x-zip-compressed' && <GrDocumentZip />}\r\n                                                        {\r\n                                                            file.type === 'application/pdf'\r\n                                                            && <BsFileEarmarkPdf />\r\n                                                        }\r\n                                                        {\r\n                                                            (file.type === 'image/png' || file.type === 'image/jpeg')\r\n                                                            && <BsFillFileEarmarkImageFill />\r\n                                                        }\r\n                                                        {\r\n                                                            file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                                                            && <SiMicrosoftexcel />\r\n                                                        }\r\n                                                        <OverlayTrigger\r\n                                                            key={`sw_${index}`}\r\n                                                            placement=\"bottom\"\r\n                                                            delay={{ show: 250, hide: 400 }}\r\n                                                            overlay={(\r\n                                                                <Tooltip id=\"tooltip-error\">\r\n                                                                    {file.name}\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        >\r\n                                                            <span style={{ marginLeft: '.5rem' }} className={Styles.file_name}>{file.name}</span>\r\n                                                        </OverlayTrigger>\r\n                                                    </div>\r\n                                                </Col>\r\n                                                <Col sm={5} >\r\n                                                    {\r\n                                                        parentComponent === 'documents'\r\n                                                        && <form ref={documentTypeRef}>\r\n                                                            <DocumentTypes selectedValue={documentTypeFromName || ''} />\r\n                                                        </form>\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col sm={1} >\r\n                                                    <MdOutlineDelete onClick={() => deleteHandler(index)} size={25} style={{ marginRight: '.5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </Col>\r\n                                            </div>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        }\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                {\r\n                                    parentComponent !== 'profile'\r\n                                    && <input\r\n                                        ref={inputRef}\r\n                                        type=\"file\"\r\n                                        id=\"input-file-upload\"\r\n                                        accept=\"image/png, image/jpeg, application/pdf, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, .zip\"\r\n                                        multiple={parentComponent === 'documents' || parentComponent === 'documentNotSummary_request' ? false : true}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                }\r\n                                {\r\n                                    parentComponent === 'profile' && !profileImageTemp\r\n                                    && <input\r\n                                        onChange={handleChange}\r\n                                        ref={ProfileRef}\r\n                                        type=\"file\"\r\n                                        name=\"user_image\"\r\n                                        id=\"input-file-upload\"\r\n                                        accept=\"image/png, image/jpeg\"\r\n                                    />\r\n                                }\r\n                                {\r\n                                    profileImageTemp &&\r\n                                    <div className='temp_image'>\r\n                                        <img src={profileImageTemp} alt=\"\" />\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    !profileImageTemp &&\r\n                                    <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                        <div>\r\n                                            <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                            <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                            <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                        </div>\r\n                                    </label>\r\n                                }\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileLengthSingle\"] ? 'File is required' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{noMatrixFile ? 'Matrix File is required' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    (parentComponent === 'myDocument' || parentComponent === 'receiveDocumentRequest')\r\n                    && files.length > 1\r\n                    &&\r\n                    <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the <b>Matrix file</b> and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={() => downloadExcel('matrix', SAMPLE_UPLOAD)} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'documentNotSummary_request'\r\n                    &&\r\n                    <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the <b>Matrix file</b> and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={() => downloadExcel('matrix', jsonForRequest)} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload"],"names":["files","_useState","useState","_useState2","_slicedToArray","state","setState","zipTargetFiles","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","zipFile","zip","matrixFile","i","wrap","_context","prev","next","length","file","require","name","type","generateAsync","then","content","File","stop","_x","apply","arguments","SAMPLE_UPLOAD","sheet","columns","label","show","onHide","Styles","accountId","parentComponent","search","_ref$details","details","addToast","useToasts","dispatch","useDispatch","documentTypeRef","useRef","_FileUploadHook","FileUploadHook","_FileUploadHook2","fileToUpload","_React$useState","React","_React$useState2","dragActive","setDragActive","inputRef","setFiles","_useState3","_useState4","formSubmitted","setFormSubmitted","_useState5","fileLengthSingle","fileSize","_useState6","formError","setFormError","_useState7","_useState8","setUserType","_useState9","_useState10","profileImageTemp","setProfileImageTemp","_useState11","_useState12","noMatrixFile","SetNoMatrixFile","_useState13","_useState14","jsonForRequest","setJsonForRequest","_useState15","_useState16","documentTypeFromName","setDocumentTypeFromName","documentTypes","useSelector","types","documentType","data","useEffect","userService","getUserType","getNotList","JSON","stringify","uploadFile","downloadExcel","fileName","settings","xlsx","_ref2","response","objToDownload","tempJson","axiosCustom","post","concat","process","pageSize","pageNumber","docTypeCode","tenure","duration","portfolio","productCode","userId","sent","handleResponse","value","datas","map","t0","console","log","validateUpload","formObj","formIsValid","error","key","k","onSubmitHandler","_ref3","_callee2","e","_context2","preventDefault","_ref4","_callee3","config","API_URL","formData","document_type","_response","_context3","headers","abrupt","FormData","size","createMessage","appearance","autoDismiss","append","current","id","SummaryActionCreator","getSentSummary","handleDrag","stopPropagation","handleFiles","tempFiles","Object","assign","reader","FileReader","readAsDataURL","onloadend","result","Array","from","_toConsumableArray","documentTypesCodes","dT","shortCode","fileArray","dTc","includes","handleChange","target","onButtonClick","click","ProfileRef","_jsxs","Modal","centered","animation","children","_jsx","Header","closeButton","Title","Body","className","Container","Col","sm","list_upload_container","index","list_upload","style","display","alignItems","justifyContent","GrDocumentZip","BsFileEarmarkPdf","BsFillFileEarmarkImageFill","SiMicrosoftexcel","OverlayTrigger","placement","delay","hide","overlay","Tooltip","marginLeft","file_name","ref","DocumentTypes","selectedValue","MdOutlineDelete","onClick","splice","deleteHandler","marginRight","color","cursor","md","onDragEnter","onSubmit","accept","multiple","onChange","src","alt","CgSoftwareUpload","fontSize","margin","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","Footer","padding","CgSpinnerAlt","details_warning","Button","variant","disabled","width","sampleFile","get","responseType","blob","Blob","saveAs"],"sourceRoot":""}