{"version":3,"sources":["store/actions/common/types.actions.tsx","containers/User/User.module.sass","components/modal/DeleteConfirm.tsx","store/actions/requiredDocuments.actions.tsx","containers/User/RequiredDocuments.tsx"],"names":["TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","userType","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","module","exports","DeleteConfirm","onHide","show","confirmDelete","text","actionText","details","deleteRef","useRef","useEffect","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","documentType","productName","Footer","variant","ref","onClick","RequiredDocumentActionCreator","RequiredDocuments","REQUIRED_DOCUMENTS_REQUEST","requiredDocumentService","getRequiredDocuments","costs","REQUIRED_DOCUMENTS_SUCCESS","REQUIRED_DOCUMENTS_FAILURE","AddEditCost","documentTypes","Styles","editRequired","productTypes","Modal","Container","Col","md","sm","Form","Group","as","Control","name","disabled","defaultValue","length","map","dT","index","value","statusCode","Label","style","padding","Button","width","PublicMethodsExample","defaultSelected","documentList","labelKey","multiple","options","placeholder","useDispatch","useState","showAdvanceSearch","setShowAdvanceSearch","addEditRequired","setAddEditRequired","setEditRequired","showDeleteConfirm","setShowDeleteConfirm","setDetails","useSelector","state","requiredDocuments","data","loading","productType","loadingProductTypes","errorProductTypes","loadingDocumentTypes","errorDocumentTypes","Row","search_input","search","my_document_search","onMouseDown","advanceSearch","advance_search","marginTop","lg","productCode","button_center","Table","striped","bordered","hover","responsive","marginBottom","lineHeight","backgroundColor","color","cT","dL","required_documents","documentName","minWidth","textAlign","OverlayTrigger","placement","delay","hide","overlay","Tooltip","cursor"],"mappings":"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","file":"static/js/9.2459d347.chunk.js","sourcesContent":["import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes(userType)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes(userType)\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movement_group\":\"User_movement_group__hN-zZ\",\"button_center\":\"User_button_center__jLzXE\",\"search_input\":\"User_search_input__1yonV\",\"search\":\"User_search__kQVRZ\",\"advanceSearch\":\"User_advanceSearch__28VFr\",\"my_document_search\":\"User_my_document_search__3qvbe\",\"collapse_summary\":\"User_collapse_summary__2ZBSi\",\"advance_search\":\"User_advance_search__3O2qV\",\"required_documents\":\"User_required_documents__1ToGB\"};","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import { RequiredDocuments } from \"../types.d\";\r\nimport { requiredDocumentService } from \"../../services\"\r\n\r\nexport const RequiredDocumentActionCreator = {\r\n    getRequiredDocuments: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: RequiredDocuments.REQUIRED_DOCUMENTS_REQUEST })\r\n        const success = (costs: any) => ({ type: RequiredDocuments.REQUIRED_DOCUMENTS_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: RequiredDocuments.REQUIRED_DOCUMENTS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        requiredDocumentService.getRequiredDocuments(userType)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, OverlayTrigger, Row, Table, Tooltip } from \"react-bootstrap\";\r\nimport { AiOutlineCloudDownload, AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\n\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { DocumentCostConfigActionCreator } from \"../../store/actions/documentCostConfiguration.actions\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\n\r\nimport Styles from \"./User.module.sass\";\r\nimport { RequiredDocumentActionCreator } from \"../../store/actions/requiredDocuments.actions\";\r\n\r\nconst RequiredDocuments = () => {\r\n    const dispatch = useDispatch()\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [addEditRequired, setAddEditRequired] = useState(false)\r\n    const [editRequired, setEditRequired] = useState(null)\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null)\r\n\r\n    const { requiredDocuments, loading, error, productTypes, loadingProductTypes, errorProductTypes, documentTypes, loadingDocumentTypes, errorDocumentTypes } = useSelector((state: any) => ({\r\n        requiredDocuments: state.requiredDocuments.data,\r\n        loading: state.requiredDocuments.loading,\r\n        error: state.requiredDocuments.error,\r\n        productTypes: state.types.productType.data,\r\n        loadingProductTypes: state.types.productType.loading,\r\n        errorProductTypes: state.types.productType.error,\r\n        documentTypes: state.types.documentType.data,\r\n        loadingDocumentTypes: state.types.documentType.loading,\r\n        errorDocumentTypes: state.types.documentType.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(RequiredDocumentActionCreator.getRequiredDocuments('CL'))\r\n        dispatch(TypesActionCreator.getProductTypes('CL'))\r\n        dispatch(TypesActionCreator.getDocumentTypes('CL'))\r\n    }, [])\r\n\r\n    const handleEdit = (required) => {\r\n        setEditRequired(required)\r\n        setAddEditRequired(true)\r\n    }\r\n\r\n    const deleteAlert = () => { }\r\n\r\n    const handleDetails = (required) => {\r\n        setDetails(required)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"service_offered\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (productTypes && productTypes.length > 0) &&\r\n                                                    productTypes.map((dT: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={dT.productCode}>{dT.name}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\" onClick={() => setShowAdvanceSearch(!showAdvanceSearch)}>Cancel</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => {\r\n                        setEditRequired(null)\r\n                        setAddEditRequired(true)\r\n                    }}>Add New Document Configuration</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                <thead>\r\n                    <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                        <th>Product</th>\r\n                        <th>Required Documents</th>\r\n                        <th style={{ width: '120px' }}>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        requiredDocuments && requiredDocuments.map((cT, index) => {\r\n                            return (<tr key={`rD_${index}`}>\r\n                                <td>{cT.productName}</td>\r\n                                <td>\r\n                                    {cT.documentList && cT.documentList.map((dL, index) => {\r\n                                        return <span key={`dL_${index}`} className={Styles.required_documents}>{dL.documentName}</span>\r\n                                    })}\r\n                                </td>\r\n                                <td className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Edit\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiEdit2 onClick={() => handleEdit(cT)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span> &nbsp;\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => handleDetails(cT)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>)\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </Col>\r\n        {\r\n            addEditRequired\r\n            && <AddEditCost show={addEditRequired} onHide={() => setAddEditRequired(false)} editRequired={editRequired} Styles={Styles} documentTypes={documentTypes} productTypes={productTypes} />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='requiredDocuments'\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nconst AddEditCost = ({ show, onHide, Styles, documentTypes, editRequired, productTypes }) => {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {editRequired ? 'Edit Required Document Configuration' : \"Add New Required Document Configuration\"}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <br />\r\n                    <Col md={12} sm={12} >\r\n                        <Form.Group as={Col} className=\"mb-4\">\r\n                            <Col md={12} sm={12} >\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"service_offered\"\r\n                                    disabled={editRequired}\r\n                                    defaultValue={editRequired ? editRequired.productName : ''}\r\n                                    className=\"select_custom white\">\r\n                                    <option></option>\r\n                                    {\r\n                                        (productTypes && productTypes.length > 0) &&\r\n                                        productTypes.map((dT: any, index: number) => {\r\n                                            return <option key={`cr_${index}`} value={dT.statusCode}>{dT.name}</option>\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Form.Label className=\"label_custom white\">Product</Form.Label>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <br />\r\n                    <Col sm={12}>\r\n                        <Form.Group as={Col} className=\"mb-4\">\r\n                            <Col md={12} sm={12}>\r\n                                {/* <Form.Control defaultValue={editCost ? editCost.cost : ''} className=\"select_custom white\" type=\"number\" name=\"document_name\" /> */}\r\n                                <PublicMethodsExample documentTypes={documentTypes} editRequired={editRequired} />\r\n                            </Col>\r\n                            <Form.Label className=\"label_custom white\">Required Documents</Form.Label>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }}>\r\n                <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Save</Button>\r\n                <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }} onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nconst PublicMethodsExample = ({ documentTypes, editRequired }) => {\r\n    const ref = useRef<any>();\r\n    return (\r\n        <>\r\n            <Typeahead\r\n                defaultSelected={editRequired ? editRequired.documentList : []}\r\n                id=\"public-methods-example\"\r\n                labelKey=\"documentName\"\r\n                multiple\r\n                options={documentTypes}\r\n                placeholder=\"Choose a state...\"\r\n                ref={ref}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RequiredDocuments;"],"sourceRoot":""}