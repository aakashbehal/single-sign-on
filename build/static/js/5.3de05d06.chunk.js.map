{"version":3,"sources":["containers/User/User.module.sass","store/actions/fileNameConfig.actions.tsx","helpers/useDocumentTitle.tsx","containers/User/DocumentGeneralConfiguration.tsx"],"names":["module","exports","FileNameConfigActionCreator","dispatch","type","Conjunction","CONJUNCTION_REQUEST","fileNameConfigService","getConjunction","then","user","CONJUNCTION_SUCCESS","payload","success","error","CONJUNCTION_FAILURE","failure","finally","CONJUNCTION_RESET","requestParams","FieldOptions","FIELD_OPTIONS_REQUEST","getFieldOptions","FIELD_OPTIONS_SUCCESS","FIELD_OPTIONS_FAILURE","FIELD_OPTIONS_RESET","UserFileNamingConfig","USER_FILE_NAMING_CONFIG_REQUEST","getUserConfig","userNameConfig","USER_FILE_NAMING_CONFIG_SUCCESS","USER_FILE_NAMING_CONFIG_FAILURE","USER_FILE_NAMING_CONFIG_RESET","UseDocumentTitle","title","prevailOnUnmount","defaultTitle","useRef","document","useEffect","current","PARTNER_DEFAULT","1","2","3","4","5","6","CLIENT_DEFAULT","DocumentGeneralConfiguration","addToast","useToasts","useDispatch","configRef","useState","setModeSelected","filteredOptions","setFilteredOptions","userType","setUserType","fieldsSelected","setFieldSelected","keycode","keyvalue","mode","useSelector","state","loadingConjunction","fileNameConfig","conjunction","loading","errorConjunction","dataConjunction","data","loadingFieldOptions","fieldOptions","errorFieldOptions","dataFieldOptions","dataFileNamingConfig","fileNamingConfig","loadingFileNamingConfig","errorFileNamingConfig","userService","getUser","role","userUuid","console","log","fileConfiguration","handleDefaultAndSavedSelection","a","fieldFinal","selectionFinal","handleMove","field","direction","fieldsSelectedTemp","Object","assign","temp","handleSelection","selected","dataFieldOptionsFiltered","map","fO","shortCode","available","handleSave","e","preventDefault","field_1","field_2","field_3","field_4","field_5","field_6","value","createMessage","appearance","autoDismiss","resetHandler","Row","style","margin","className","Col","sm","marginLeft","Form","ref","onSubmit","lg","md","Group","as","Control","name","length","cR","index","Label","disabled","docConcatVal","Styles","movement_group","onClick","onChange","target","default","Button","variant","width","retentionPolicyInDay","display","alignItems","left","m","Check","inline","checked","documentKeepPolicy","label"],"mappings":"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","file":"static/js/5.3de05d06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movement_group\":\"User_movement_group__hN-zZ\",\"button_center\":\"User_button_center__jLzXE\"};","import { Conjunction, FieldOptions, UserFileNamingConfig } from \"../types.d\";\r\nimport { fileNameConfigService } from \"../../services\"\r\n\r\nexport const FileNameConfigActionCreator = {\r\n    getConjunction: () => (dispatch: any) => {\r\n        const request = () => ({ type: Conjunction.CONJUNCTION_REQUEST })\r\n        const success = (user: any) => ({ type: Conjunction.CONJUNCTION_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: Conjunction.CONJUNCTION_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConjunction()\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: Conjunction.CONJUNCTION_RESET }))\r\n    },\r\n    getFieldOptions: (requestParams) => (dispatch: any) => {\r\n        const request = () => ({ type: FieldOptions.FIELD_OPTIONS_REQUEST })\r\n        const success = (user: any) => ({ type: FieldOptions.FIELD_OPTIONS_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: FieldOptions.FIELD_OPTIONS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getFieldOptions(requestParams)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: FieldOptions.FIELD_OPTIONS_RESET }))\r\n    },\r\n    getUserConfig: (requestParams) => (dispatch: any) => {\r\n        const request = () => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig(requestParams)\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_RESET }))\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nconst UseDocumentTitle = (title, prevailOnUnmount = false) => {\r\n    const defaultTitle = useRef(document.title)\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n\r\n    useEffect(() => () => {\r\n        if (!prevailOnUnmount) {\r\n            document.title = defaultTitle.current;\r\n        }\r\n    }, [])\r\n}\r\n\r\nexport default UseDocumentTitle;","import { useEffect, useRef, useState } from \"react\"\r\nimport { Col, Row, Form, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { HiArrowNarrowDown, HiArrowNarrowUp } from \"react-icons/hi\"\r\n\r\nimport Styles from \"./User.module.sass\"\r\nimport { FileNameConfigActionCreator } from \"../../store/actions/fileNameConfig.actions\";\r\nimport { fileNameConfigService, userService } from \"../../services\";\r\nimport UseDocumentTitle from \"../../helpers/useDocumentTitle\"\r\nimport { useToasts } from \"react-toast-notifications\"\r\nimport { createMessage } from \"../../helpers/messages\"\r\n\r\nconst PARTNER_DEFAULT = {\r\n    1: 'CID',\r\n    2: 'DTI',\r\n    3: 'CAN',\r\n    4: null,\r\n    5: null,\r\n    6: null\r\n}\r\n\r\nconst CLIENT_DEFAULT = {\r\n    1: 'CAN',\r\n    2: 'DTI',\r\n    3: null,\r\n    4: null,\r\n    5: null,\r\n}\r\n\r\nconst DocumentGeneralConfiguration = () => {\r\n    const { addToast } = useToasts();\r\n    UseDocumentTitle('Document General Configuration')\r\n    const dispatch = useDispatch();\r\n    const configRef = useRef<any>();\r\n    const [modeSelected, setModeSelected] = useState('CREATE_NEW');\r\n    const [filteredOptions, setFilteredOptions] = useState([]);\r\n    const [userType, setUserType] = useState(null)\r\n    const [fieldsSelected, setFieldSelected] = useState<any>({});\r\n    const [mode, setMode] = useState([\r\n        {\r\n            keycode: 'CREATE_NEW',\r\n            keyvalue: 'Keep both files'\r\n        },\r\n        {\r\n            keycode: 'REPLACE',\r\n            keyvalue: 'Replace existing'\r\n        }\r\n    ])\r\n\r\n    const {\r\n        loadingConjunction,\r\n        errorConjunction,\r\n        dataConjunction,\r\n        loadingFieldOptions,\r\n        errorFieldOptions,\r\n        dataFieldOptions,\r\n        dataFileNamingConfig,\r\n        loadingFileNamingConfig,\r\n        errorFileNamingConfig\r\n    } = useSelector((state: any) => ({\r\n        loadingConjunction: state.fileNameConfig.conjunction.loading,\r\n        errorConjunction: state.fileNameConfig.conjunction.error,\r\n        dataConjunction: state.fileNameConfig.conjunction.data,\r\n        loadingFieldOptions: state.fileNameConfig.fieldOptions.loading,\r\n        errorFieldOptions: state.fileNameConfig.fieldOptions.error,\r\n        dataFieldOptions: state.fileNameConfig.fieldOptions.data,\r\n        dataFileNamingConfig: state.fileNameConfig.fileNamingConfig.data,\r\n        loadingFileNamingConfig: state.fileNameConfig.fileNamingConfig.loading,\r\n        errorFileNamingConfig: state.fileNameConfig.fileNamingConfig.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser();\r\n        setUserType(user.role)\r\n        if (user.role === 'Client') {\r\n            setFieldSelected(CLIENT_DEFAULT)\r\n        } else {\r\n            setFieldSelected(PARTNER_DEFAULT)\r\n        }\r\n        dispatch(FileNameConfigActionCreator.getUserConfig({ userUuid: user.userUuid, userType: user.role }))\r\n        dispatch(FileNameConfigActionCreator.getConjunction())\r\n        dispatch(FileNameConfigActionCreator.getFieldOptions({ userType: user.role }))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(fieldsSelected)\r\n    }, [fieldsSelected])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataFileNamingConfig\r\n            && dataFileNamingConfig.fileConfiguration\r\n        ) {\r\n            handleDefaultAndSavedSelection()\r\n        }\r\n    }, [dataFieldOptions, dataFileNamingConfig])\r\n\r\n    const handleDefaultAndSavedSelection = async () => {\r\n        // setFilteredOptions(dataFieldOptionsFiltered)\r\n        const { fieldFinal, selectionFinal } = await fileNameConfigService.handleDefaultAndSavedSelection(dataFieldOptions, dataFileNamingConfig, userType, fieldsSelected)\r\n        setFilteredOptions(fieldFinal)\r\n        setFieldSelected(selectionFinal)\r\n    }\r\n\r\n    const handleMove = (field, direction) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        let temp = null\r\n        if (direction === 'down') {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field + 1]\r\n            fieldsSelectedTemp[field + 1] = temp\r\n        } else {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field - 1]\r\n            fieldsSelectedTemp[field - 1] = temp\r\n        }\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const handleSelection = (field, selected) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        const dataFieldOptionsFiltered = dataFieldOptions.map((fO) => {\r\n            if (selected === fO.shortCode) {\r\n                fO.available = false\r\n            }\r\n            if (!selected && (fieldsSelectedTemp[field] === fO.shortCode)) {\r\n                fO.available = true\r\n            }\r\n            return fO\r\n        })\r\n        fieldsSelectedTemp[field] = selected\r\n        setFilteredOptions(dataFieldOptionsFiltered)\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        const {\r\n            conjunction,\r\n            field_1,\r\n            field_2,\r\n            field_3,\r\n            field_4,\r\n            field_5,\r\n            field_6,\r\n        } = configRef.current\r\n        console.log(\r\n            conjunction.value,\r\n            field_1.value,\r\n            field_2.value,\r\n            field_3.value,\r\n            field_4.value,\r\n            field_5.value,\r\n            field_6.value,)\r\n        addToast(createMessage('', `FILE_NAME_CONFIGURATION_SAVED_SUCCESS`, ''), { appearance: 'success', autoDismiss: false });\r\n    }\r\n\r\n    const resetHandler = () => {\r\n        if (userType === 'Client') {\r\n            setFieldSelected(CLIENT_DEFAULT)\r\n        } else {\r\n            setFieldSelected(PARTNER_DEFAULT)\r\n        }\r\n        configRef.current.conjunction.value = '_'\r\n    }\r\n\r\n    return <>\r\n        <Row style={{ margin: 0 }} className=\"form_container\">\r\n            <Col sm={3}></Col>\r\n            <Col sm={6}>\r\n                <Row>\r\n                    <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>File Name Configuration</h5></Col>\r\n                </Row>\r\n                <br />\r\n                <br />\r\n                <Form ref={configRef} onSubmit={(e) => handleSave(e)}>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-5\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"conjunction\"\r\n                                        className=\"select_custom\">\r\n                                        {/* <option></option> */}\r\n                                        {\r\n                                            (dataConjunction && dataConjunction.length > 0) &&\r\n                                            dataConjunction.map((cR: any, index: number) => {\r\n                                                return <option key={`cr_${index}`} value={cR.shortCode}>{cR.type}</option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom\">Conjunction / Concatenation Parameter</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-5\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"field_1\"\r\n                                        className=\"select_custom\"\r\n                                        disabled\r\n                                        value={fieldsSelected[1] || ''}>\r\n                                        {/* <option></option> */}\r\n                                        {\r\n                                            (dataFieldOptions && dataFieldOptions.length > 0) &&\r\n                                            dataFieldOptions.map((cR: any, index: number) => {\r\n                                                return <option\r\n                                                    key={`cr_${index}`}\r\n                                                    value={cR.shortCode}>\r\n                                                    {cR.docConcatVal}\r\n                                                </option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom\">Field 1</Form.Label>\r\n                                <div className={Styles.movement_group}>\r\n                                    <HiArrowNarrowDown onClick={() => handleMove(1, 'down')} />\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-5\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"field_2\"\r\n                                        value={fieldsSelected[2] || ''}\r\n                                        disabled\r\n                                        className=\"select_custom\">\r\n                                        {/* <option></option> */}\r\n                                        {\r\n                                            (dataFieldOptions && dataFieldOptions.length > 0) &&\r\n                                            dataFieldOptions.map((cR: any, index: number) => {\r\n                                                return <option\r\n                                                    key={`cr_${index}`}\r\n                                                    value={cR.shortCode}>\r\n                                                    {cR.docConcatVal}\r\n                                                </option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom\">Field 2</Form.Label>\r\n                                <div className={Styles.movement_group}>\r\n                                    <HiArrowNarrowUp onClick={() => handleMove(2, 'up')} />\r\n                                    {\r\n                                        (userType !== 'Client'\r\n                                            || fieldsSelected[3])\r\n                                        && <HiArrowNarrowDown onClick={() => handleMove(2, 'down')} />\r\n                                    }\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-5\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"field_3\"\r\n                                        value={fieldsSelected[3] || ''}\r\n                                        disabled={userType !== 'Client'}\r\n                                        onChange={(e) => handleSelection(3, e.target.value)}\r\n                                        className=\"select_custom\">\r\n                                        {\r\n                                            userType === 'Client'\r\n                                            && <option></option>}\r\n                                        {\r\n                                            (dataFieldOptions && dataFieldOptions.length > 0) &&\r\n                                            dataFieldOptions.map((cR: any, index: number) => {\r\n                                                if (userType !== 'Client') {\r\n                                                    return <option disabled={!cR.available} key={`cr_${index}`} value={cR.shortCode}>{cR.docConcatVal}</option>\r\n                                                } else if (userType === 'Client' && !cR.default) {\r\n                                                    return <option disabled={!cR.available} key={`cr_${index}`} value={cR.shortCode}>{cR.docConcatVal}</option>\r\n                                                } else {\r\n                                                    return false\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom\">Field 3</Form.Label>\r\n                                <div className={Styles.movement_group}>\r\n                                    {\r\n                                        (userType !== 'Client'\r\n                                            || fieldsSelected[3])\r\n                                        && <HiArrowNarrowUp onClick={() => handleMove(3, 'up')} />\r\n                                    }\r\n                                    {\r\n                                        fieldsSelected[4] &&\r\n                                        <HiArrowNarrowDown onClick={() => handleMove(3, 'down')} />\r\n                                    }\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-5\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"field_4\"\r\n                                        onChange={(e) => handleSelection(4, e.target.value)}\r\n                                        value={fieldsSelected[4] || ''}\r\n                                        className=\"select_custom\">\r\n                                        <option></option>\r\n                                        {\r\n                                            (filteredOptions && filteredOptions.length > 0) &&\r\n                                            filteredOptions.map((cR: any, index: number) => {\r\n                                                if (!cR.default) {\r\n                                                    return <option disabled={!cR.available} key={`cr_${index}`} value={cR.shortCode}>{cR.docConcatVal}</option>\r\n                                                } else {\r\n                                                    return false\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom\">Field 4</Form.Label>\r\n                                {\r\n                                    fieldsSelected[4] &&\r\n                                    <div className={Styles.movement_group}>\r\n                                        <HiArrowNarrowUp onClick={() => handleMove(4, 'up')} />\r\n                                        {\r\n                                            fieldsSelected[5] &&\r\n                                            <HiArrowNarrowDown onClick={() => handleMove(4, 'down')} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-5\" >\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"field_5\"\r\n                                        onChange={(e) => handleSelection(5, e.target.value)}\r\n                                        value={fieldsSelected[5] || ''}\r\n                                        className=\"select_custom\">\r\n                                        <option></option>\r\n                                        {\r\n                                            (filteredOptions && filteredOptions.length > 0) &&\r\n                                            filteredOptions.map((cR: any, index: number) => {\r\n                                                if (!cR.default) {\r\n                                                    return <option disabled={!cR.available} key={`cr_${index}`} value={cR.shortCode}>{cR.docConcatVal}</option>\r\n                                                } else {\r\n                                                    return false\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom\">Field 5</Form.Label>\r\n                                {\r\n                                    fieldsSelected[5] &&\r\n                                    <div className={Styles.movement_group}>\r\n                                        <HiArrowNarrowUp onClick={() => handleMove(5, 'up')} />\r\n                                        {\r\n                                            fieldsSelected[6] &&\r\n                                            <HiArrowNarrowDown onClick={() => handleMove(5, 'down')} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {\r\n                            userType !== 'Client'\r\n                            &&\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            name=\"field_6\"\r\n                                            onChange={(e) => handleSelection(6, e.target.value)}\r\n                                            value={fieldsSelected[6] || ''}\r\n                                            className=\"select_custom\">\r\n                                            <option></option>\r\n                                            {\r\n                                                (filteredOptions && filteredOptions.length > 0) &&\r\n                                                filteredOptions.map((cR: any, index: number) => {\r\n                                                    if (!cR.default) {\r\n                                                        return <option disabled={!cR.available} key={`cr_${index}`} value={cR.shortCode}>{cR.docConcatVal}</option>\r\n                                                    } else {\r\n                                                        return false\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom\">Field 6</Form.Label>\r\n                                    {\r\n                                        fieldsSelected[6] &&\r\n                                        <div className={Styles.movement_group}>\r\n                                            <HiArrowNarrowUp onClick={() => handleMove(6, 'up')} />\r\n                                        </div>\r\n                                    }\r\n                                </Form.Group>\r\n                            </Col>\r\n                        }\r\n                        <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                            <Button variant=\"dark\" style={{ width: \"140px\" }} type=\"submit\">Save</Button>{\" \"}\r\n                            <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={() => resetHandler()}>Reset to Default</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Col>\r\n            <Col sm={3}></Col>\r\n        </Row>\r\n        <br />\r\n        {\r\n            userType === 'Client'\r\n            && <>\r\n                <Row style={{ margin: 0 }} className=\"form_container\">\r\n                    <Col sm={3}></Col>\r\n                    <Col sm={6}>\r\n                        <Row>\r\n                            <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Document Retention Policy</h5></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <br />\r\n                        <Form onSubmit={(e) => handleSave(e)}>\r\n                            <Row>\r\n                                <Col lg={12} md={6}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Row>\r\n                                            <Col md={11} sm={11}>\r\n                                                <Form.Control className=\"select_custom\" type=\"text\" name=\"charge_off_balance_from\" value={dataFileNamingConfig.retentionPolicyInDay} />\r\n                                            </Col>\r\n                                            <Col md={1} style={{ display: 'flex', alignItems: 'center' }}><p style={{ margin: 0 }}>Days</p></Col>\r\n                                        </Row>\r\n                                        <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Retain document after closure of account till</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} type=\"submit\">Save</Button>{\" \"}\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={resetHandler}>Reset to Default</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col sm={3}></Col>\r\n                </Row>\r\n                <br />\r\n                <Row style={{ margin: 0 }} className=\"form_container\">\r\n                    <Col sm={3}></Col>\r\n                    <Col sm={6}>\r\n                        <Row>\r\n                            <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Other Configuration</h5></Col>\r\n                        </Row>\r\n                        <br />\r\n                        <br />\r\n                        <Form onSubmit={(e) => handleSave(e)}>\r\n                            <Row>\r\n                                <Col lg={12} md={6}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Row>\r\n                                            <Col md={12} sm={12}>\r\n                                                {\r\n                                                    mode && mode.map((m, index) => (\r\n                                                        <Form.Check\r\n                                                            key={`default-${index}`}\r\n                                                            inline\r\n                                                            type=\"radio\"\r\n                                                            onClick={(e: any) => {\r\n                                                                setModeSelected(e.target.value)\r\n                                                            }}\r\n                                                            checked={dataFileNamingConfig.documentKeepPolicy === m.keycode}\r\n                                                            value={m.keycode}\r\n                                                            name='mode'\r\n                                                            label={m.keyvalue}\r\n                                                        />\r\n                                                    ))\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Incase of Document Duplication</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} type=\"submit\">Save</Button>{\" \"}\r\n                                    <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={resetHandler}>Reset to Default</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col sm={3}></Col>\r\n                </Row>\r\n            </>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default DocumentGeneralConfiguration"],"sourceRoot":""}