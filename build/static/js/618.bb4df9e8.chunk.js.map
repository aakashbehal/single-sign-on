{"version":3,"file":"static/js/618.bb4df9e8.chunk.js","mappings":"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","sources":["components/modal/DeleteConfirm.tsx","store/actions/share.actions.tsx","components/modal/Share.tsx","containers/DocumentManager/DocumentsList.tsx","store/actions/downloadHistory.actions.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }: IDeleteConfirm) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'myDocument' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete the <b>{details.folderName}</b> folder\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'receiveDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import {\r\n    ShareFolder,\r\n    ShareFile,\r\n    RevokeFolder,\r\n    RevokeFile\r\n} from \"../types.d\";\r\nimport { shareService } from \"../../services\"\r\n\r\nexport const ShareActionCreator = {\r\n    shareFolder: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: ShareFolder.SHARE_FOLDER_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: ShareFolder.SHARE_FOLDER_SUCCESS, payload: data })\r\n        const failure = () => ({ type: ShareFolder.SHARE_FOLDER_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.shareFolder(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    shareDocument: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: ShareFile.SHARE_FILE_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: ShareFile.SHARE_FILE_SUCCESS, payload: data })\r\n        const failure = () => ({ type: ShareFile.SHARE_FILE_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.shareDocument(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n            .finally(() => {\r\n                dispatch({ type: ShareFile.SHARE_FILE_RESET })\r\n            })\r\n    },\r\n    revokeShareFolder: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: RevokeFolder.REVOKE_FOLDER_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RevokeFolder.REVOKE_FOLDER_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RevokeFolder.REVOKE_FOLDER_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.revokeShareFolder(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n\r\n    },\r\n    revokeShareDocument: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: RevokeFile.REVOKE_FILE_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RevokeFile.REVOKE_FILE_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RevokeFile.REVOKE_FILE_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.revokeShareDocument(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Modal, Row, Col, Button, Form, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { CgTrash } from 'react-icons/cg';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\n\r\nimport Styles from \"./Modal.module.sass\";\r\nimport { UserActionCreator } from '../../store/actions/user.actions';\r\nimport { ShareActionCreator } from '../../store/actions/share.actions';\r\nimport { AiFillWarning } from 'react-icons/ai';\r\n\r\nconst Share = ({ show, onHide, parentComponent, searchHandler }: any) => {\r\n    const [details, setDetails] = useState<any>(show)\r\n    const dispatch = useDispatch()\r\n    const ref = useRef<any>();\r\n    const [formError, setFormError] = useState({\r\n        shareDetail: false,\r\n    })\r\n    const [isEnable, setIsEnable] = useState<boolean>(false)\r\n    const [toSentList, setToSentList] = useState<any>([])\r\n    const [emailToRemove, setEmailToRemove] = useState<any>(null)\r\n    const [usersUpdates, setUsersUpdated] = useState<any>([])\r\n    const { users, loading, error } = useSelector((state: any) => ({\r\n        users: state.users.data,\r\n        loading: state.users.loading,\r\n        error: state.users.error,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        filterUserList(details)\r\n    }, [details, users])\r\n\r\n    const {\r\n        shareFolderLoading,\r\n        shareFolderSuccess,\r\n        shareFolderError,\r\n        shareFileLoading,\r\n        shareFileSuccess,\r\n        shareFileError,\r\n        revokeFolderLoading,\r\n        revokeFolderSuccess,\r\n        revokeFolderError,\r\n        revokeFileLoading,\r\n        revokeFileSuccess,\r\n        revokeFileError\r\n    } = useSelector((state: any) => ({\r\n        shareFolderLoading: state.share.shareFolderLoading,\r\n        shareFolderSuccess: state.share.shareFolderSuccess,\r\n        shareFolderError: state.share.shareFolderError,\r\n        shareFileLoading: state.share.shareFileLoading,\r\n        shareFileSuccess: state.share.shareFileSuccess,\r\n        shareFileError: state.share.shareFileError,\r\n        revokeFolderLoading: state.share.revokeFolderLoading,\r\n        revokeFolderSuccess: state.share.revokeFolderSuccess,\r\n        revokeFolderError: state.share.revokeFolderError,\r\n        revokeFileLoading: state.share.revokeFileLoading,\r\n        revokeFileSuccess: state.share.revokeFileSuccess,\r\n        revokeFileError: state.share.revokeFileError\r\n    }))\r\n\r\n    /**\r\n     * Share Folder \r\n     */\r\n    useEffect(() => {\r\n        if (shareFolderSuccess || shareFileSuccess) {\r\n            const detailTemp: any = Object.assign({}, details)\r\n            detailTemp.sharedWith.push(...toSentList)\r\n            ref.current.clear()\r\n            setIsEnable(false)\r\n            setDetails(detailTemp)\r\n            searchHandler()\r\n        }\r\n    }, [\r\n        shareFolderLoading,\r\n        shareFolderSuccess,\r\n        shareFolderError,\r\n        shareFileLoading,\r\n        shareFileSuccess,\r\n        shareFileError\r\n    ])\r\n\r\n    /**\r\n    * Revoke \r\n    */\r\n    useEffect(() => {\r\n        if (revokeFolderSuccess || revokeFileSuccess) {\r\n            const detailTemp: any = Object.assign({}, details)\r\n            detailTemp.sharedWith = detailTemp.sharedWith.filter((dT: any) => {\r\n                if (dT.email !== emailToRemove) {\r\n                    return dT\r\n                }\r\n            })\r\n            setIsEnable(false)\r\n            setDetails(detailTemp)\r\n            setEmailToRemove(null)\r\n            searchHandler()\r\n        }\r\n    }, [revokeFolderLoading,\r\n        revokeFolderSuccess,\r\n        revokeFolderError,\r\n        revokeFileLoading,\r\n        revokeFileSuccess,\r\n        revokeFileError])\r\n\r\n    useEffect(() => {\r\n        dispatch(UserActionCreator.getConnectedUsers())\r\n    }, [])\r\n\r\n    const filterUserList = (details: any) => {\r\n        let tempUsers: any = []\r\n        let sharedWithTemp = Object.assign({}, details)\r\n        let sharedArray = sharedWithTemp.sharedWith.map((shared: any) => shared.email)\r\n        users.map((user: any) => {\r\n            if (sharedArray.indexOf(user.loginKey) === -1) {\r\n                tempUsers.push(user)\r\n            }\r\n            return true\r\n        })\r\n        setUsersUpdated(tempUsers)\r\n    }\r\n\r\n    const validate = (formObj: any) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            shareDetail: false,\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n            if (formObj[\"shareDetail\"].length === 0) {\r\n                error[\"shareDetail\"] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        let formObj: any = {}\r\n        formObj[\"shareDetail\"] = toSentList\r\n        if (validate(formObj)) {\r\n            if (parentComponent === 'documents') {\r\n                formObj[\"documentId\"] = details.id\r\n                dispatch(ShareActionCreator.shareDocument(formObj))\r\n            } else {\r\n                formObj[\"clientAccountNo\"] = details.folderName\r\n                dispatch(ShareActionCreator.shareFolder(formObj))\r\n            }\r\n        }\r\n    }\r\n\r\n    const revokeHandler = (data: any) => {\r\n        let formObj: any = {}\r\n        formObj[\"email\"] = data.email\r\n        setEmailToRemove(data.email)\r\n        if (parentComponent === 'documents') {\r\n            dispatch(ShareActionCreator.revokeShareDocument(formObj))\r\n        } else {\r\n            dispatch(ShareActionCreator.revokeShareDocument(formObj))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Share \"<b>{parentComponent === 'myDocument' ? `${details.folderName}` : `${details.documentName}`}</b>\"\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Form>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-1 mt-4\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Typeahead\r\n                                        isLoading={loading}\r\n                                        id=\"public-methods-example\"\r\n                                        labelKey=\"modifiedFirstName\"\r\n                                        multiple\r\n                                        ref={ref}\r\n                                        allowNew={true}\r\n                                        newSelectionPrefix='Not a Platform User: '\r\n                                        onChange={(selected) => {\r\n                                            setIsEnable(true)\r\n                                            let selectedUpdated = selected.map((s: any) => {\r\n                                                let temp = {\r\n                                                    \"name\": s.firstName,\r\n                                                    \"email\": s.loginKey || s.firstName,\r\n                                                    \"isRegisterUser\": !s.customOption,\r\n                                                    \"principleId\": s.principleId,\r\n                                                    \"orgType\": s.orgType,\r\n                                                    \"userOrgCode\": s.orgCode,\r\n                                                }\r\n                                                return temp\r\n                                            })\r\n                                            setToSentList(selectedUpdated)\r\n                                        }}\r\n                                        options={usersUpdates}\r\n                                    />\r\n                                </Col>\r\n                                <span style={{ color: 'red', paddingLeft: '1rem' }}><small>{formError[\"shareDetail\"] ? 'At least one recipient is required ' : ''}</small></span>\r\n                                <Form.Label className=\"label_custom white\">Add People</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <Col sm={12}>\r\n                    <p className={Styles.people_share_with}>People with Access</p>\r\n                    {\r\n                        (shareFolderError || shareFileError)\r\n                        && <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={\r\n                                <Tooltip id={`tooltip-error`}>\r\n                                    Error in fetching\r\n                                </Tooltip>\r\n                            }\r\n                        >\r\n                            <AiFillWarning size={20} className={Styles.details_warning} />\r\n                        </OverlayTrigger>\r\n                    }\r\n                    {\r\n                        (!shareFolderError || !shareFileError)\r\n                        && (shareFolderLoading || shareFileLoading)\r\n                        && <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                    }\r\n                    {\r\n                        details.sharedWith && details.sharedWith.length > 0 && <ul className={Styles.share_with_ul}>\r\n                            {\r\n                                details.sharedWith.map((sW: any, index: any) => {\r\n                                    return <li className={Styles.share_with_li} key={`li_${index}`}>\r\n                                        <div className={Styles.share_with_div}>\r\n                                            <div className='share_With_parent' style={{ marginRight: '1rem' }}>\r\n                                                {\r\n                                                    sW.profilePicture && <img src={sW.profilePicture} className='profile_pic_account' alt=\"\" />\r\n                                                }\r\n                                                {\r\n                                                    !sW.profilePicture\r\n                                                    && <span className={`shared_with ${Styles.share_with_span_pic}`}>\r\n                                                        <span>{sW.name.charAt(0)}</span>\r\n                                                    </span>\r\n                                                }\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className={Styles.share_with_p}>{sW.userOrgCode || sW.orgCode} - {sW.name}</p>\r\n                                                <p className={Styles.share_with_p}>{sW.email}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Button\r\n                                                className={Styles.share_with_button}\r\n                                                variant=\"dark\"\r\n                                                onClick={() => revokeHandler(sW)}\r\n                                            >\r\n                                                <CgTrash\r\n                                                    size={20}\r\n                                                    style={{ margin: '0 .5rem', cursor: 'pointer' }}\r\n                                                />\r\n                                                Revoke Access\r\n                                            </Button>\r\n                                        </div>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    }\r\n                    {\r\n                        details.sharedWith && details.sharedWith.length === 0 &&\r\n                        <p style={{ textAlign: 'center' }}>No record Found</p>\r\n                    }\r\n                </Col>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"dark\" style={{ width: '100%' }} disabled={!isEnable} onClick={onSubmitHandler}>Share</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default Share\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { saveAs } from 'file-saver';\r\nimport { Col, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport { checkIfAdvanceSearchIsActive, downloadFromLink, downloadSignedFile } from \"../../helpers/util\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport Share from \"../../components/modal/Share\";\r\nimport AdvanceSearchHook from \"../../components/CustomHooks/AdvanceSearchHook\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { MiscActionCreator } from \"../../store/actions/common/misc.actions\";\r\n\r\n\r\nconst DocumentsList = ({ location }: { location: any }) => {\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const aRef = useRef<any>()\r\n    const params = new URLSearchParams(location.search);\r\n    const AccountId = params.get('account_id');\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('documentName')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([])\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n    const [showShare, setShowShare] = useState(null);\r\n    let [searchObj, { setInitObj, textSearch, advanceSearch, resetHandler }] = AdvanceSearchHook()\r\n\r\n    const {\r\n        documents,\r\n        totalCount,\r\n        error,\r\n        columns,\r\n        loading,\r\n        defaultColumns,\r\n        deleteRequest,\r\n        deleteSuccess,\r\n        deleteError,\r\n        downloadRequest,\r\n        downloadError,\r\n        downloadSuccess,\r\n        downloadLink\r\n    } = useSelector((state: any) => ({\r\n        documents: state.myDocuments.documents.data,\r\n        totalCount: state.myDocuments.documents.totalCount,\r\n        error: state.myDocuments.documents.error,\r\n        columns: state.myDocuments.documents.columns,\r\n        loading: state.myDocuments.documents.loading,\r\n        defaultColumns: state.misc.allTableColumns.data,\r\n        deleteRequest: state.myDocuments.documents.deleteRequest,\r\n        deleteSuccess: state.myDocuments.documents.deleteSuccess,\r\n        deleteError: state.myDocuments.documents.deleteError,\r\n        downloadRequest: state.myDocuments.documentDownload.loading,\r\n        downloadError: state.myDocuments.documentDownload.error,\r\n        downloadSuccess: state.myDocuments.documentDownload.success,\r\n        downloadLink: state.myDocuments.documentDownload.downloadLink\r\n    }))\r\n\r\n    useEffect(() => {\r\n        setInitObj({\r\n            pageSize: pageSize,\r\n            pageNumber: pageNumber,\r\n            textSearch: null,\r\n            sortOrder: sortType,\r\n            sortParam: sortElement\r\n        })\r\n        dispatch(MiscActionCreator.getColumnForAllTables('document'))\r\n        return () => {\r\n            dispatch(MyDocumentsActionCreator.resetDocumentList())\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (searchObj !== null) {\r\n            search(pageSize, pageNumber)\r\n        }\r\n    }, [searchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns?.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            setColumnsSaved(defaultColumns)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n\r\n    useEffect(() => {\r\n        if (deleteSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Document'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageSize, pageNumber)\r\n        }\r\n        if (deleteError) { addToast(createMessage('error', `deleting`, 'document'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [\r\n        deleteSuccess,\r\n        deleteError])\r\n\r\n    const search = (\r\n        pageSize: any,\r\n        pageNumber: any\r\n    ) => {\r\n        searchObj = { ...searchObj, pageSize, pageNumber, accountNumber: AccountId, sortParam: sortElement, sortOrder: sortType }\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentList(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n    */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageSize(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadHandler = async (document: any) => {\r\n        //download file\r\n        addToast(createMessage('info', `DOWNLOAD_STARTED`, ''), { appearance: 'info', autoDismiss: true })\r\n        await downloadSignedFile(document)\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.id]))\r\n        addToast(createMessage('info', `DOWNLOAD_SUCCESSFUL`, ''), { appearance: 'success', autoDismiss: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!downloadRequest && downloadSuccess && downloadLink) {\r\n            downloadFromLink(downloadLink)\r\n            dispatch(MyDocumentsActionCreator.restDownloadDocument())\r\n        }\r\n    }, [downloadRequest, downloadError, downloadSuccess, downloadLink])\r\n\r\n    const handleDetails = (document: any) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(MyDocumentsActionCreator.deleteDocument(details.id))\r\n    }\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_self\"></a>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'documents'}\r\n                    Styles={Styles}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag: any) => setShowAdvanceSearch(flag)}\r\n                    textSearchHook={textSearch}\r\n                    searchObj={searchObj}\r\n                    advanceSearchHook={advanceSearch}\r\n                    resetHandlerHook={resetHandler}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={documents}\r\n                isLoading={loading}\r\n                map={{\r\n                    name: \"Name\",\r\n                    documentType: \"Document Type\",\r\n                    originalAccountNo: \"Original Account Number\",\r\n                    equabliAccountNo: \"Equabli Account Number\",\r\n                    clientAccountNo: \"Client Account Number\",\r\n                    generateDate: \"Generated Date\",\r\n                    uploadDate: \"Upload Date\",\r\n                    shareDate: \"Share Date\",\r\n                    receiveDate: \"Receive Date\",\r\n                    fileSize: \"File Size\",\r\n                    sharedBy: \"Shared By\",\r\n                    sharedWith: \"Shared With\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['name']}\r\n                handleNavigate={(data: any) => {\r\n                    setShowDocument(true)\r\n                    setDocumentToShow(data)\r\n                }}\r\n                currencyColumns={[]}\r\n                sortElement={(header: any) => setSortElement(header)}\r\n                sortType={(type: any) => setSortType(type)}\r\n                currentPage={pageNumber}\r\n                setCurrentPage={setPageNumber}\r\n                parentComponent={'documents'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data: any) => downloadHandler(data),\r\n                        share: (data: any) => setShowShare(data),\r\n                        view: (data: any) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        },\r\n                        delete: (data: any) => handleDetails(data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload show={uploadDocModal} onHide={() => setUploadDocModal(false)} accountId={123} Styles={Styles} parentComponent=\"documents\" search={search} details={{ accountId: AccountId }} />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='documents'\r\n            />\r\n        }\r\n        {\r\n            showShare\r\n            && <Share\r\n                show={showShare}\r\n                parentComponent=\"documents\"\r\n                onHide={() => setShowShare(null)}\r\n                searchHandler={() => search(pageSize, pageNumber)}\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default DocumentsList\r\n\r\n","import {\r\n    GetDownloadHistory,\r\n    SaveDownloadHistory,\r\n    DeleteDownloadHistory\r\n} from \"../types.d\";\r\nimport { downloadHistory } from \"../../services\"\r\n\r\nexport const DownloadHistoryActionCreator = {\r\n    getDownloadHistory: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.getDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDownloadHistory: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.saveDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n    deleteDownloadHistory: (id: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.deleteDownloadHistory(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n}"],"names":["_ref","onHide","show","confirmDelete","_ref$text","text","_ref$actionText","actionText","details","type","deleteRef","useRef","useEffect","_jsxs","Modal","centered","size","animation","children","_jsx","Header","closeButton","Title","id","Body","className","Container","folderName","documentType","productName","requestedFrom","Footer","Button","variant","ref","onClick","ShareActionCreator","payload","dispatch","ShareFolder","SHARE_FOLDER_REQUEST","shareService","shareFolder","then","data","SHARE_FOLDER_SUCCESS","success","error","SHARE_FOLDER_FAILURE","ShareFile","SHARE_FILE_REQUEST","shareDocument","SHARE_FILE_SUCCESS","SHARE_FILE_FAILURE","finally","SHARE_FILE_RESET","RevokeFile","REVOKE_FILE_REQUEST","revokeShareDocument","REVOKE_FILE_SUCCESS","REVOKE_FILE_FAILURE","parentComponent","searchHandler","_useState","useState","_useState2","_slicedToArray","setDetails","useDispatch","_useState3","shareDetail","_useState4","formError","setFormError","_useState5","_useState6","isEnable","setIsEnable","_useState7","_useState8","toSentList","setToSentList","_useState9","_useState10","emailToRemove","setEmailToRemove","_useState11","_useState12","usersUpdates","setUsersUpdated","_useSelector","useSelector","state","users","loading","filterUserList","_useSelector2","shareFolderLoading","share","shareFolderSuccess","shareFolderError","shareFileLoading","shareFileSuccess","shareFileError","revokeFolderLoading","revokeFolderSuccess","revokeFolderError","revokeFileLoading","revokeFileSuccess","revokeFileError","_detailTemp$sharedWit","detailTemp","Object","assign","sharedWith","push","apply","_toConsumableArray","current","clear","filter","dT","email","UserActionCreator","getConnectedUsers","tempUsers","sharedArray","map","shared","user","indexOf","loginKey","concat","documentName","Form","Row","Col","lg","md","Group","as","sm","Typeahead","isLoading","labelKey","multiple","allowNew","newSelectionPrefix","onChange","selected","selectedUpdated","s","firstName","customOption","principleId","orgType","orgCode","options","style","color","paddingLeft","Label","Styles","people_share_with","OverlayTrigger","placement","delay","hide","overlay","Tooltip","AiFillWarning","details_warning","CgSpinnerAlt","length","share_with_ul","sW","index","share_with_li","share_with_div","marginRight","profilePicture","src","alt","share_with_span_pic","name","charAt","share_with_p","userOrgCode","share_with_button","formObj","revokeHandler","CgTrash","margin","cursor","textAlign","width","disabled","formIsValid","key","k","validate","location","addToast","useToasts","aRef","AccountId","URLSearchParams","search","get","showAdvanceSearch","setShowAdvanceSearch","sortElement","setSortElement","sortType","setSortType","pageSize","setPageSize","pageNumber","setPageNumber","uploadDocModal","setUploadDocModal","_useState13","_useState14","showDocument","setShowDocument","_useState15","_useState16","documentToShow","setDocumentToShow","_useState17","_useState18","columnsSaved","setColumnsSaved","_useState19","_useState20","showDeleteConfirm","setShowDeleteConfirm","_useState21","_useState22","_useState23","_useState24","showShare","setShowShare","_AdvanceSearchHook","AdvanceSearchHook","_AdvanceSearchHook2","searchObj","_AdvanceSearchHook2$","setInitObj","textSearch","advanceSearch","resetHandler","documents","myDocuments","totalCount","columns","defaultColumns","misc","allTableColumns","deleteRequest","deleteSuccess","deleteError","downloadRequest","documentDownload","downloadError","downloadSuccess","downloadLink","sortOrder","sortParam","MiscActionCreator","getColumnForAllTables","MyDocumentsActionCreator","resetDocumentList","createMessage","appearance","autoDismiss","_objectSpread","accountNumber","getMyDocumentList","downloadHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","document","wrap","_context","prev","next","downloadSignedFile","DownloadHistoryActionCreator","saveDownloadHistory","stop","_x","arguments","downloadFromLink","restDownloadDocument","_Fragment","href","target","AdvanceSearch","flag","textSearchHook","advanceSearchHook","resetHandlerHook","TableComponent","originalAccountNo","equabliAccountNo","clientAccountNo","generateDate","uploadDate","shareDate","receiveDate","fileSize","sharedBy","actionArray","handleNavigate","currencyColumns","header","currentPage","setCurrentPage","searchCriteria","hideShareArray","addEditArray","download","view","delete","onPaginationChange","handlePagination","DocumentUpload","accountId","ViewDocument","documentData","DeleteConfirm","deleteDocument","Share","getDownloadHistory","requestPayload","GetDownloadHistory","GET_DOWNLOAD_HISTORY_REQUEST","downloadHistory","sent","GET_DOWNLOAD_HISTORY_SUCCESS","GET_DOWNLOAD_HISTORY_FAILURE","failure","SaveDownloadHistory","SAVE_DOWNLOAD_HISTORY_REQUEST","SAVE_DOWNLOAD_HISTORY_SUCCESS","SAVE_DOWNLOAD_HISTORY_FAILURE","SAVE_DOWNLOAD_HISTORY_RESET","deleteDownloadHistory","DeleteDownloadHistory","DELETE_DOWNLOAD_HISTORY_REQUEST","DELETE_DOWNLOAD_HISTORY_SUCCESS","DELETE_DOWNLOAD_HISTORY_FAILURE","DELETE_DOWNLOAD_HISTORY_RESET"],"sourceRoot":""}