{"version":3,"sources":["store/actions/common/types.actions.tsx","components/modal/DeleteConfirm.tsx","containers/User/User.module.sass","store/actions/documentCostConfiguration.actions.tsx","containers/User/DocumentCostConfiguration.tsx"],"names":["TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","DeleteConfirm","onHide","show","confirmDelete","text","actionText","details","deleteRef","useRef","useEffect","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","documentType","productName","requestedFrom","Footer","variant","ref","onClick","module","exports","DocumentCostConfigActionCreator","userType","DocumentsCost","DOCUMENTS_COST_REQUEST","documentCostConfigurationService","getDocumentCost","costs","DOCUMENTS_COST_SUCCESS","DOCUMENTS_COST_FAILURE","SaveDocumentsCost","SAVE_DOCUMENTS_COST_REQUEST","saveDocumentCost","SAVE_DOCUMENTS_COST_SUCCESS","SAVE_DOCUMENTS_COST_FAILURE","finally","SAVE_DOCUMENTS_COST_RESET","docTypeCode","DeleteDocumentsCost","DELETE_DOCUMENTS_COST_REQUEST","deleteDocumentCost","DELETE_DOCUMENTS_COST_SUCCESS","DELETE_DOCUMENTS_COST_FAILURE","DELETE_DOCUMENTS_COST_RESET","AddEditCost","documentTypes","Styles","editCost","costAlreadyAdded","addEditRef","useState","cost","costLessThanZero","formError","setFormError","handleSave","e","preventDefault","current","value","Number","formObj","formIsValid","key","k","console","log","validateUpload","Modal","Form","onSubmit","Container","Col","md","sm","Group","as","Control","name","disabled","defaultValue","length","map","dT","index","indexOf","shortCode","style","color","Label","step","padding","Button","width","DocumentCostConfiguration","useDispatch","addToast","useToasts","showAdvanceSearch","setShowAdvanceSearch","addEditCost","setAddEditCost","setEditCost","showDeleteConfirm","setShowDeleteConfirm","setDetails","setCostAlreadyAdded","useSelector","state","data","loading","loadingDocumentTypes","errorDocumentTypes","adding","addSuccessful","addError","editing","editSuccessful","editError","deleteSuccessful","deleteError","getDocumentCosts","tempC","c","createMessage","appearance","autoDismiss","Row","search_input","search","my_document_search","onMouseDown","placeholder","advanceSearch","advance_search","marginTop","lg","button_center","Table","striped","bordered","hover","responsive","marginBottom","lineHeight","backgroundColor","textAlign","cT","clientName","minWidth","OverlayTrigger","placement","delay","hide","overlay","Tooltip","handleEdit","cursor","handleDetails"],"mappings":"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","file":"static/js/9.eecd0ec1.chunk.js","sourcesContent":["import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes()\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes()\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'receiveDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movement_group\":\"User_movement_group__hN-zZ\",\"button_center\":\"User_button_center__jLzXE\",\"search_input\":\"User_search_input__1yonV\",\"search\":\"User_search__kQVRZ\",\"advanceSearch\":\"User_advanceSearch__28VFr\",\"my_document_search\":\"User_my_document_search__3qvbe\",\"collapse_summary\":\"User_collapse_summary__2ZBSi\",\"advance_search\":\"User_advance_search__3O2qV\",\"required_documents\":\"User_required_documents__1ToGB\"};","import { DocumentsCost, SaveDocumentsCost, DeleteDocumentsCost } from \"../types.d\";\r\nimport { documentCostConfigurationService } from \"../../services\"\r\n\r\nexport const DocumentCostConfigActionCreator = {\r\n    getDocumentCost: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsCost.DOCUMENTS_COST_REQUEST })\r\n        const success = (costs: any) => ({ type: DocumentsCost.DOCUMENTS_COST_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: DocumentsCost.DOCUMENTS_COST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        documentCostConfigurationService.getDocumentCost(userType)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDocumentCost: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_REQUEST })\r\n        const success = (costs: any) => ({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        documentCostConfigurationService.saveDocumentCost(payload)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_RESET }))\r\n    },\r\n\r\n    editDocumentCost: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_REQUEST })\r\n        const success = (costs: any) => ({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: SaveDocumentsCost.SAVE_DOCUMENTS_COST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        documentCostConfigurationService.saveDocumentCost(payload)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    deleteDocumentCost: (docTypeCode) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDocumentsCost.DELETE_DOCUMENTS_COST_REQUEST })\r\n        const success = (costs: any) => ({ type: DeleteDocumentsCost.DELETE_DOCUMENTS_COST_SUCCESS, payload: costs })\r\n        const failure = (error: any) => ({ type: DeleteDocumentsCost.DELETE_DOCUMENTS_COST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        documentCostConfigurationService.deleteDocumentCost(docTypeCode)\r\n            .then(\r\n                costs => {\r\n                    dispatch(success(costs))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDocumentsCost.DELETE_DOCUMENTS_COST_RESET }))\r\n    },\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, OverlayTrigger, Row, Table, Tooltip } from \"react-bootstrap\";\r\nimport { AiOutlineCloudDownload, AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport { CgOptions, CgSearch, CgSpinnerAlt } from \"react-icons/cg\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { DocumentCostConfigActionCreator } from \"../../store/actions/documentCostConfiguration.actions\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport { createMessage } from \"../../helpers/messages\"\r\n\r\nimport Styles from \"./User.module.sass\";\r\n\r\nconst DocumentCostConfiguration = () => {\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [addEditCost, setAddEditCost] = useState(false)\r\n    const [editCost, setEditCost] = useState(null)\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n    const [costAlreadyAdded, setCostAlreadyAdded] = useState<any>([])\r\n\r\n    const { cost,\r\n        loading,\r\n        error,\r\n        documentTypes,\r\n        loadingDocumentTypes,\r\n        errorDocumentTypes,\r\n        adding,\r\n        addSuccessful,\r\n        addError,\r\n        editing,\r\n        editSuccessful,\r\n        editError,\r\n        deleteSuccessful,\r\n        deleteError\r\n    } = useSelector((state: any) => ({\r\n        cost: state.cost.data,\r\n        loading: state.cost.loading,\r\n        error: state.cost.error,\r\n        documentTypes: state.types.documentType.data,\r\n        loadingDocumentTypes: state.types.documentType.loading,\r\n        errorDocumentTypes: state.types.documentType.error,\r\n        adding: state.cost.adding,\r\n        addSuccessful: state.cost.addSuccessful,\r\n        addError: state.cost.addError,\r\n        editing: state.cost.editing,\r\n        editSuccessful: state.cost.editSuccessful,\r\n        editError: state.cost.editError,\r\n        deleteSuccessful: state.cost.deleteSuccessful,\r\n        deleteError: state.cost.deleteError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        getDocumentCosts()\r\n        dispatch(TypesActionCreator.getDocumentTypes())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (cost && cost.length > 0) {\r\n            let tempC = cost.map((c) => {\r\n                return c.docTypeCode\r\n            })\r\n            setCostAlreadyAdded(tempC)\r\n        }\r\n    }, [cost])\r\n\r\n    useEffect(() => {\r\n        if (addSuccessful) {\r\n            addToast(createMessage('success', `added`, 'Cost'), { appearance: 'success', autoDismiss: true });\r\n            setAddEditCost(false);\r\n            getDocumentCosts()\r\n        }\r\n        if (addError) { addToast(createMessage('error', `adding`, 'cost'), { appearance: 'error', autoDismiss: false }); }\r\n        if (editSuccessful) {\r\n            addToast(createMessage('success', `edit`, 'Cost'), { appearance: 'success', autoDismiss: true });\r\n            setAddEditCost(false)\r\n            getDocumentCosts()\r\n        }\r\n        if (editError) { addToast(createMessage('error', `editing`, 'cost'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteSuccessful) {\r\n            addToast(createMessage('success', `delete`, 'Cost'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            getDocumentCosts()\r\n        }\r\n        if (deleteError) { addToast(createMessage('error', `deleting`, 'cost'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [addSuccessful,\r\n        addError,\r\n        editSuccessful,\r\n        editError,\r\n        deleteSuccessful,\r\n        deleteError])\r\n\r\n    const handleEdit = (cost) => {\r\n        setEditCost(cost)\r\n        setAddEditCost(true)\r\n    }\r\n\r\n    const getDocumentCosts = () => {\r\n        dispatch(DocumentCostConfigActionCreator.getDocumentCost('CL'))\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(DocumentCostConfigActionCreator.deleteDocumentCost(details.docTypeCode))\r\n    }\r\n\r\n    const handleDetails = (cost) => {\r\n        setDetails(cost)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <Col md={10} sm={10} className={Styles.search_input}>\r\n                    <CgSearch size={20} className={Styles.search} />\r\n                    <Form.Control type=\"text\" name=\"my_document_search\" className={Styles.my_document_search} onMouseDown={() => setShowAdvanceSearch(false)} placeholder=\"Search\" ></Form.Control>\r\n                    <CgOptions size={20} className={Styles.advanceSearch} onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n                    {showAdvanceSearch && <div className={Styles.advance_search}>\r\n                        <Form className=\"\" style={{ marginTop: '2rem' }}>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12} >\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"document_type\"\r\n                                                className=\"select_custom white\">\r\n                                                <option></option>\r\n                                                {\r\n                                                    (documentTypes && documentTypes.length > 0) &&\r\n                                                    documentTypes.map((dT: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={dT.shortCode}>{dT.documentType}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Document Name</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Col sm={12}>\r\n                                <Col className={Styles.button_center}>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\" onClick={() => setShowAdvanceSearch(!showAdvanceSearch)}>Cancel</Button>\r\n                                </Col>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                    }\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => {\r\n                        setEditCost(null)\r\n                        setAddEditCost(true)\r\n                    }}>Add New Cost</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            {\r\n                loading &&\r\n                <div className={`table_loading`} >\r\n                    <CgSpinnerAlt className=\"spinner\" size={50} />\r\n                </div >\r\n            }\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {\r\n                    !loading && cost.length === 0\r\n                    && <thead>\r\n                        <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                            <th>No Records</th>\r\n                        </tr>\r\n                    </thead>\r\n                }\r\n                {\r\n                    !loading && cost.length > 0\r\n                    && <>\r\n                        <thead>\r\n                            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                                <th>Document Type</th>\r\n                                <th>Client Name</th>\r\n                                <th>Cost</th>\r\n                                <th style={{ width: '120px' }}>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                cost && cost.length > 0 && cost.map((cT, index) => {\r\n                                    return (<tr key={`cost_${index}`}>\r\n                                        <td>{cT.documentType}</td>\r\n                                        <td>{cT.clientName || '-'}</td>\r\n                                        <td>${cT.cost}</td>\r\n                                        <td className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>\r\n                                            <span>\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FiEdit2 onClick={() => handleEdit(cT)} size={20} style={{ cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span> &nbsp;\r\n                                            <span>\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiOutlineDelete onClick={() => handleDetails(cT)} size={20} style={{ cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>)\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </>\r\n                }\r\n\r\n            </Table>\r\n        </Col>\r\n        {\r\n            addEditCost\r\n            && <AddEditCost\r\n                show={addEditCost}\r\n                onHide={() => setAddEditCost(false)}\r\n                editCost={editCost}\r\n                Styles={Styles}\r\n                documentTypes={documentTypes}\r\n                dispatch={dispatch}\r\n                costAlreadyAdded={costAlreadyAdded}\r\n            />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='costConfiguration'\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nconst AddEditCost = ({ show, onHide, Styles, documentTypes, editCost, dispatch, costAlreadyAdded }) => {\r\n    const addEditRef = useRef<any>()\r\n    const [formError, setFormError] = useState<any>({\r\n        docTypeCode: false,\r\n        cost: false,\r\n        costLessThanZero: false\r\n    })\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            docTypeCode: false,\r\n            cost: false,\r\n            costLessThanZero: false\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        if (formObj.cost < 0) {\r\n            error.costLessThanZero = true\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        console.log(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const handleSave = (e) => {\r\n        e.preventDefault()\r\n        const {\r\n            documentType,\r\n            cost\r\n        } = addEditRef.current\r\n        const payload = {\r\n            \"docTypeCode\": documentType.value,\r\n            \"cost\": cost.value ? Number(cost.value) : ''\r\n        }\r\n        if (validateUpload(payload)) {\r\n            dispatch(DocumentCostConfigActionCreator.saveDocumentCost(payload))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Form ref={addEditRef} onSubmit={(e) => handleSave(e)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                        {editCost ? 'Edit Document Cost' : \"Add New Document Cost\"}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <br />\r\n                        <Col md={12} sm={12} >\r\n                            <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12} >\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"documentType\"\r\n                                        disabled={editCost}\r\n                                        defaultValue={editCost ? editCost.docTypeCode : ''}\r\n                                        className=\"select_custom white\">\r\n                                        <option></option>\r\n                                        {\r\n                                            (documentTypes && documentTypes.length > 0) &&\r\n                                            documentTypes.map((dT: any, index: number) => {\r\n                                                return <option key={`cr_${index}`} disabled={costAlreadyAdded.indexOf(dT.shortCode) !== -1} value={dT.shortCode}>{dT.documentType}</option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Control>\r\n                                    <span style={{ color: 'red' }}><small>{formError[\"docTypeCode\"] ? 'Document Type is required' : ''}</small></span>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <br />\r\n                        <Col sm={12}>\r\n                            <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control\r\n                                        defaultValue={editCost ? editCost.cost : ''}\r\n                                        className=\"select_custom white\"\r\n                                        type=\"number\"\r\n                                        name=\"cost\"\r\n                                        step={0.1}\r\n                                    />\r\n                                    <span style={{ color: 'red' }}><small>{formError[\"cost\"] ? 'Cost is required' : ''}</small></span>\r\n                                    <span style={{ color: 'red' }}><small>{formError[\"costLessThanZero\"] ? 'Document Cost cannot be less the 0' : ''}</small></span>\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">Document Cost</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer style={{ padding: '1rem 4rem 2rem' }}>\r\n                    {\r\n                        editCost\r\n                        &&\r\n                        <>\r\n                            <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Save</Button>\r\n                            <Button variant=\"dark\" style={{ width: '100%' }} onClick={onHide}>Cancel</Button>\r\n                        </>\r\n                    }\r\n                    {\r\n                        !editCost\r\n                        &&\r\n                        <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Add</Button>\r\n                    }\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentCostConfiguration;"],"sourceRoot":""}