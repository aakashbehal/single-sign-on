{"version":3,"sources":["containers/User/User.module.sass","store/actions/fileNameConfig.actions.tsx","helpers/useDocumentTitle.tsx","containers/User/DocumentGeneralConfiguration.tsx"],"names":["module","exports","FileNameConfigActionCreator","userType","dispatch","type","Conjunction","CONJUNCTION_REQUEST","fileNameConfigService","getConfig","orgType","fileNameConfig","then","user","CONJUNCTION_SUCCESS","payload","success","error","CONJUNCTION_FAILURE","failure","FieldOptions","FIELD_OPTIONS_REQUEST","FIELD_OPTIONS_SUCCESS","FIELD_OPTIONS_FAILURE","RetentionPolicy","RETENTION_POLICY_REQUEST","RETENTION_POLICY_SUCCESS","RETENTION_POLICY_FAILURE","DocumentPolicy","DOCUMENT_POLICY_REQUEST","DOCUMENT_POLICY_SUCCESS","DOCUMENT_POLICY_FAILURE","UserFileNamingConfig","USER_FILE_NAMING_CONFIG_REQUEST","getUserConfig","userNameConfig","USER_FILE_NAMING_CONFIG_SUCCESS","USER_FILE_NAMING_CONFIG_FAILURE","UserRetentionPolicy","USER_RETENTION_POLICY_REQUEST","USER_RETENTION_POLICY_SUCCESS","USER_RETENTION_POLICY_FAILURE","UserSeparator","USER_SEPARATOR_REQUEST","USER_SEPARATOR_SUCCESS","USER_SEPARATOR_FAILURE","UserDocumentPolicy","USER_DOCUMENT_POLICY_REQUEST","USER_DOCUMENT_POLICY_SUCCESS","USER_DOCUMENT_POLICY_FAILURE","requestBody","SaveUserConfiguration","SAVE_USER_CONFIG_REQUEST","saveUserConfiguration","SAVE_USER_CONFIG_SUCCESS","SAVE_USER_CONFIG_FAILURE","finally","SAVE_USER_CONFIG_RESET","UseDocumentTitle","title","prevailOnUnmount","defaultTitle","useRef","document","useEffect","current","DocumentGeneralConfiguration","clientDefault","partnerDefault","addToast","useToasts","useDispatch","configRef","retentionRef","configNameSaveRef","retentionSaveRef","otherSaveRef","useState","modeSelected","setModeSelected","filteredOptions","setFilteredOptions","setUserType","fieldsSelected","setFieldSelected","minMaxError","setMinMaxError","keycode","keyvalue","mode","retention","setRetention","useSelector","state","dataConjunction","conjunction","data","isLoading","loading","dataFieldOptions","fieldOptions","dataFileNamingConfig","fileNamingConfig","dataUserRetentionPolicy","userRetentionPolicy","isLoadingRetention","dataUserConjunction","userConjunction","dataUserDocumentPolicy","userDocumentPolicy","isLoadingDocumentPolicy","dataRetentionPolicy","retentionPolicy","dataDocumentPolicy","documentPolicy","saveLoading","saveConfig","saveSuccess","saveError","configValSelectedCode","defaultValue","userService","getUser","recordSource","selectedTemp","1","2","3","4","5","6","7","length","handleDefaultAndSavedSelection","createMessage","appearance","autoDismiss","a","fieldFinal","selectionFinal","handleMove","field","direction","fieldsSelectedTemp","Object","assign","temp","handleSave","e","preventDefault","configRequest","field_1","field_2","field_3","field_4","field_5","field_6","push","value","Number","resetHandler","tempMap","values","dataFieldOptionsFiltered","map","fO","indexOf","shortCode","selected","available","setTimeout","click","disableHandler","fieldName","console","log","flag","className","size","Row","style","margin","Col","lg","sm","marginLeft","Form","ref","onSubmit","JSON","stringify","md","Group","as","Control","name","configVals","cR","index","fieldValue","Label","keys","keyName","keyIndex","disabled","onChange","handleSelection","target","Styles","movement_group","onClick","Button","variant","width","display","alignItems","color","left","m","Check","inline","checked","label"],"mappings":"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","file":"static/js/11.93992f87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movement_group\":\"User_movement_group__hN-zZ\",\"button_center\":\"User_button_center__jLzXE\",\"search_input\":\"User_search_input__1yonV\",\"search\":\"User_search__kQVRZ\",\"advanceSearch\":\"User_advanceSearch__28VFr\",\"my_document_search\":\"User_my_document_search__3qvbe\",\"collapse_summary\":\"User_collapse_summary__2ZBSi\",\"advance_search\":\"User_advance_search__3O2qV\",\"required_documents\":\"User_required_documents__1ToGB\"};","import {\r\n    Conjunction,\r\n    FieldOptions,\r\n    UserFileNamingConfig,\r\n    UserRetentionPolicy,\r\n    UserSeparator,\r\n    UserDocumentPolicy,\r\n    SaveUserConfiguration,\r\n    RetentionPolicy,\r\n    DocumentPolicy\r\n} from \"../types.d\";\r\nimport { fileNameConfigService } from \"../../services\"\r\n\r\nexport const FileNameConfigActionCreator = {\r\n    getConjunction: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: Conjunction.CONJUNCTION_REQUEST })\r\n        const success = (user: any) => ({ type: Conjunction.CONJUNCTION_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: Conjunction.CONJUNCTION_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig({ orgType: userType.orgType, fileNameConfig: 'SEPARATOR' })\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getFieldOptions: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: FieldOptions.FIELD_OPTIONS_REQUEST })\r\n        const success = (user: any) => ({ type: FieldOptions.FIELD_OPTIONS_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: FieldOptions.FIELD_OPTIONS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig({ orgType: userType.orgType, fileNameConfig: 'FIELD' })\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getRetentionPolicy: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: RetentionPolicy.RETENTION_POLICY_REQUEST })\r\n        const success = (user: any) => ({ type: RetentionPolicy.RETENTION_POLICY_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: RetentionPolicy.RETENTION_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig({ orgType: userType.orgType, fileNameConfig: 'RETENTION_POLICY' })\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentPolicy: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentPolicy.DOCUMENT_POLICY_REQUEST })\r\n        const success = (user: any) => ({ type: DocumentPolicy.DOCUMENT_POLICY_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: DocumentPolicy.DOCUMENT_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getConfig({ orgType: userType.orgType, fileNameConfig: 'DOCUMENT_POLICY' })\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserConfig: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserFileNamingConfig.USER_FILE_NAMING_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ orgType: userType.orgType, fileNameConfig: 'FIELD' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserRetentionPolicy: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserRetentionPolicy.USER_RETENTION_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ orgType: userType.orgType, fileNameConfig: 'RETENTION_POLICY' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserSeparator: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: UserSeparator.USER_SEPARATOR_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserSeparator.USER_SEPARATOR_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserSeparator.USER_SEPARATOR_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ orgType: userType.orgType, fileNameConfig: 'SEPARATOR' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getUserDocumentPolicy: (userType) => (dispatch: any) => {\r\n        const request = () => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: UserDocumentPolicy.USER_DOCUMENT_POLICY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.getUserConfig({ orgType: userType.orgType, fileNameConfig: 'DOCUMENT_POLICY' })\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    saveUserConfiguration: (requestBody) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_REQUEST })\r\n        const success = (userNameConfig: any) => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_SUCCESS, payload: userNameConfig })\r\n        const failure = (error: any) => ({ type: SaveUserConfiguration.SAVE_USER_CONFIG_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        fileNameConfigService.saveUserConfiguration(requestBody)\r\n            .then(\r\n                userNameConfig => {\r\n                    dispatch(success(userNameConfig))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveUserConfiguration.SAVE_USER_CONFIG_RESET }))\r\n    }\r\n}","import { useRef, useEffect } from \"react\";\r\n\r\nconst UseDocumentTitle = (title, prevailOnUnmount = false) => {\r\n    const defaultTitle = useRef(document.title)\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n\r\n    useEffect(() => () => {\r\n        if (!prevailOnUnmount) {\r\n            document.title = defaultTitle.current;\r\n        }\r\n    }, [])\r\n}\r\n\r\nexport default UseDocumentTitle;","import { useEffect, useRef, useState } from \"react\"\r\nimport { Col, Row, Form, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { HiArrowNarrowDown, HiArrowNarrowUp } from \"react-icons/hi\"\r\n\r\nimport Styles from \"./User.module.sass\"\r\nimport { FileNameConfigActionCreator } from \"../../store/actions/fileNameConfig.actions\";\r\nimport { fileNameConfigService, userService } from \"../../services\";\r\nimport UseDocumentTitle from \"../../helpers/useDocumentTitle\"\r\nimport { useToasts } from \"react-toast-notifications\"\r\nimport { createMessage } from \"../../helpers/messages\"\r\nimport { CgSpinnerAlt } from \"react-icons/cg\"\r\n\r\nconst DocumentGeneralConfiguration = () => {\r\n    const clientDefault = [\"CAN\", \"DT\", \"PC\"]\r\n    const partnerDefault = [\"CIDSC\", \"DT\", \"CAN\", \"PC\"]\r\n    const { addToast } = useToasts();\r\n    UseDocumentTitle('Document General Configuration')\r\n    const dispatch = useDispatch();\r\n    const configRef = useRef<any>();\r\n    const retentionRef = useRef<any>();\r\n    const configNameSaveRef = useRef<any>();\r\n    const retentionSaveRef = useRef<any>();\r\n    const otherSaveRef = useRef<any>();\r\n    const [modeSelected, setModeSelected] = useState('KBF');\r\n    const [filteredOptions, setFilteredOptions] = useState<any>([]);\r\n    const [userType, setUserType] = useState(null)\r\n    const [fieldsSelected, setFieldSelected] = useState<any>({});\r\n    const [minMaxError, setMinMaxError] = useState<any>(false)\r\n    const [mode, setMode] = useState([\r\n        {\r\n            keycode: 'KBF',\r\n            keyvalue: 'Keep Both Files'\r\n        },\r\n        {\r\n            keycode: 'RE',\r\n            keyvalue: 'Replace Existing'\r\n        }\r\n    ])\r\n    const [retention, setRetention] = useState<any>(60)\r\n\r\n    const {\r\n        dataConjunction,\r\n        isLoading,\r\n        dataFieldOptions,\r\n        dataFileNamingConfig,\r\n        dataUserRetentionPolicy,\r\n        isLoadingRetention,\r\n        dataUserConjunction,\r\n        dataRetentionPolicy,\r\n        dataDocumentPolicy,\r\n        dataUserDocumentPolicy,\r\n        isLoadingDocumentPolicy,\r\n        saveLoading,\r\n        saveSuccess,\r\n        saveError\r\n    } = useSelector((state: any) => ({\r\n        dataConjunction: state.fileNameConfig.conjunction.data,\r\n        isLoading: state.fileNameConfig.conjunction.loading,\r\n        dataFieldOptions: state.fileNameConfig.fieldOptions.data,\r\n        dataFileNamingConfig: state.fileNameConfig.fileNamingConfig.data,\r\n        dataUserRetentionPolicy: state.fileNameConfig.userRetentionPolicy.data,\r\n        isLoadingRetention: state.fileNameConfig.userRetentionPolicy.loading,\r\n        dataUserConjunction: state.fileNameConfig.userConjunction.data,\r\n        dataUserDocumentPolicy: state.fileNameConfig.userDocumentPolicy.data,\r\n        isLoadingDocumentPolicy: state.fileNameConfig.userDocumentPolicy.loading,\r\n        dataRetentionPolicy: state.fileNameConfig.retentionPolicy.data,\r\n        dataDocumentPolicy: state.fileNameConfig.documentPolicy.data,\r\n        saveLoading: state.fileNameConfig.saveConfig.loading,\r\n        saveSuccess: state.fileNameConfig.saveConfig.success,\r\n        saveError: state.fileNameConfig.saveConfig.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (dataUserRetentionPolicy) {\r\n            setRetention(dataUserRetentionPolicy ? dataUserRetentionPolicy.configValSelectedCode : dataRetentionPolicy.defaultValue)\r\n        }\r\n        if (dataUserDocumentPolicy) {\r\n            setModeSelected((dataUserDocumentPolicy ? dataUserDocumentPolicy.configValSelectedCode : \"KBF\"))\r\n        }\r\n    }, [dataUserRetentionPolicy, dataUserDocumentPolicy])\r\n\r\n    useEffect(() => {\r\n        const user = userService.getUser();\r\n        setUserType(user.recordSource);\r\n        let selectedTemp = {}\r\n        if (user.recordSource === 'Client' || user.recordSource === 'Equabli') {\r\n            selectedTemp = {\r\n                1: 'CAN',\r\n                2: 'DT',\r\n                3: 'PC',\r\n                4: null,\r\n                5: null,\r\n                6: null,\r\n            }\r\n        } else {\r\n            selectedTemp = {\r\n                1: 'CIDSC',\r\n                2: 'DT',\r\n                3: 'CAN',\r\n                4: 'PC',\r\n                5: null,\r\n                6: null,\r\n                7: null\r\n            }\r\n        }\r\n        setFieldSelected(selectedTemp)\r\n        dispatch(FileNameConfigActionCreator.getUserConfig({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getFieldOptions({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getConjunction({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getDocumentPolicy({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getRetentionPolicy({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getUserRetentionPolicy({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getUserSeparator({ orgType: 'CT' }))\r\n        dispatch(FileNameConfigActionCreator.getUserDocumentPolicy({ orgType: 'CT' }))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            dataFieldOptions.length > 0\r\n        ) {\r\n            handleDefaultAndSavedSelection()\r\n        }\r\n    }, [dataFieldOptions, dataFileNamingConfig])\r\n\r\n    useEffect(() => {\r\n        if (saveSuccess) {\r\n            addToast(createMessage('', `FILE_NAME_CONFIGURATION_SAVED_SUCCESS`, ''), { appearance: 'success', autoDismiss: true });\r\n        }\r\n        if (saveError) {\r\n            addToast(createMessage('error', `User Configuration`, 'Save'), { appearance: 'error', autoDismiss: false });\r\n        }\r\n    }, [saveSuccess, saveError])\r\n\r\n    const handleDefaultAndSavedSelection = async () => {\r\n        const { fieldFinal, selectionFinal }: { fieldFinal: any, selectionFinal: any } = await fileNameConfigService.handleDefaultAndSavedSelection(dataFieldOptions, dataFileNamingConfig, userType, fieldsSelected)\r\n        setFilteredOptions(fieldFinal)\r\n        setFieldSelected(selectionFinal)\r\n    }\r\n\r\n    const handleMove = async (field, direction) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        let temp = null\r\n        if (direction === 'down') {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field + 1]\r\n            fieldsSelectedTemp[field + 1] = temp\r\n        } else {\r\n            temp = fieldsSelectedTemp[field]\r\n            fieldsSelectedTemp[field] = fieldsSelectedTemp[field - 1]\r\n            fieldsSelectedTemp[field - 1] = temp\r\n        }\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const handleSelection = (field, selected) => {\r\n        const fieldsSelectedTemp = Object.assign({}, fieldsSelected)\r\n        fieldsSelectedTemp[field] = selected\r\n        const tempMap = Object.values(fieldsSelectedTemp)\r\n        let dataFieldOptionsFiltered = filteredOptions.map((fO) => {\r\n            if (selected === fO.shortCode) {\r\n                fO.available = false\r\n            }\r\n            if (!selected && (fieldsSelectedTemp[field] === fO.shortCode)) {\r\n                fO.available = true\r\n            }\r\n            if (tempMap.indexOf(fO.shortCode) === -1) {\r\n                fO.selected = false\r\n                fO.available = true\r\n            }\r\n            return fO\r\n        })\r\n        setFilteredOptions(dataFieldOptionsFiltered)\r\n        setFieldSelected(fieldsSelectedTemp)\r\n    }\r\n\r\n    const handleSave = (e, type) => {\r\n        e.preventDefault();\r\n        const configRequest: any = []\r\n        if (type === 'config') {\r\n            const {\r\n                conjunction,\r\n                field_1,\r\n                field_2,\r\n                field_3,\r\n                field_4,\r\n                field_5,\r\n                field_6,\r\n            } = configRef.current\r\n            configRequest.push({\r\n                \"configShortCode\": \"SEPARATOR\",\r\n                \"configValShortCode\": conjunction.value,\r\n                \"orgTypeCode\": \"CT\"\r\n            })\r\n            if (field_1.value) {\r\n                configRequest.push({\r\n                    \"configShortCode\": \"field1\",\r\n                    \"configValShortCode\": field_1.value,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n            if (field_2.value) {\r\n                configRequest.push({\r\n                    \"configShortCode\": \"field2\",\r\n                    \"configValShortCode\": field_2.value,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n            if (field_3.value) {\r\n                configRequest.push({\r\n                    \"configShortCode\": \"field3\",\r\n                    \"configValShortCode\": field_3.value,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n            if (field_4.value) {\r\n                configRequest.push({\r\n                    \"configShortCode\": \"field4\",\r\n                    \"configValShortCode\": field_4.value,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n            if (field_5.value) {\r\n                configRequest.push({\r\n                    \"configShortCode\": \"field5\",\r\n                    \"configValShortCode\": field_5.value,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n            if (field_6.value) {\r\n                configRequest.push({\r\n                    \"configShortCode\": \"field6\",\r\n                    \"configValShortCode\": field_6.value,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n        } else if (type === 'retention') {\r\n            if (Number(retention) < 60 || Number(retention) > 365) {\r\n                setMinMaxError(true)\r\n                return\r\n            } else {\r\n                setMinMaxError(false)\r\n                configRequest.push({\r\n                    \"configShortCode\": \"RP\",\r\n                    \"configValShortCode\": retention,\r\n                    \"orgTypeCode\": \"CT\"\r\n                })\r\n            }\r\n        } else if (type === 'mode') {\r\n            configRequest.push({\r\n                \"configShortCode\": \"DP\",\r\n                \"configValShortCode\": modeSelected,\r\n                \"orgTypeCode\": \"CT\"\r\n            })\r\n        }\r\n        dispatch(FileNameConfigActionCreator.saveUserConfiguration(configRequest))\r\n    }\r\n\r\n    const resetHandler = async (e, type) => {\r\n        if (type === 'config') {\r\n            let selectedTemp = {}\r\n            if (userType === 'Client' || userType === 'Equabli') {\r\n                selectedTemp = {\r\n                    1: 'CAN',\r\n                    2: 'DT',\r\n                    3: 'PC',\r\n                    4: null,\r\n                    5: null,\r\n                    6: null,\r\n                }\r\n            } else {\r\n                selectedTemp = {\r\n                    1: 'CIDSC',\r\n                    2: 'DT',\r\n                    3: 'CAN',\r\n                    4: 'PC',\r\n                    5: null,\r\n                    6: null,\r\n                    7: null\r\n                }\r\n            }\r\n            configRef.current.conjunction.value = '_'\r\n            setFieldSelected(selectedTemp)\r\n            const tempMap = Object.values(selectedTemp)\r\n            let dataFieldOptionsFiltered = filteredOptions.map((fO) => {\r\n                if (tempMap.indexOf(fO.shortCode) === -1) {\r\n                    fO.selected = false\r\n                    fO.available = true\r\n                }\r\n                return fO\r\n            })\r\n            setFilteredOptions(dataFieldOptionsFiltered)\r\n            setTimeout(async () => {\r\n                configNameSaveRef.current.click()\r\n            }, 100)\r\n        } else if (type === 'retention') {\r\n            setRetention(60)\r\n            setTimeout(() => {\r\n                retentionSaveRef.current.click()\r\n            }, 0)\r\n        } else if (type === 'mode') {\r\n            setModeSelected('KBF')\r\n            setTimeout(() => {\r\n                otherSaveRef.current.click()\r\n            }, 0)\r\n        }\r\n    }\r\n\r\n    const disableHandler = (fieldName) => {\r\n        console.log(partnerDefault, fieldName)\r\n        let flag = false\r\n        if ((userType === 'Client' || userType === 'Equabli') && clientDefault.indexOf(fieldName) !== -1) {\r\n            flag = true\r\n        } else if (partnerDefault.indexOf(fieldName) !== -1) {\r\n            flag = true\r\n        }\r\n        return flag\r\n    }\r\n\r\n    return <>\r\n        {\r\n            isLoading && <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        }\r\n        {\r\n            !isLoading &&\r\n            <Row style={{ margin: 0 }} className=\"form_container\">\r\n                <Col lg={3} sm={12}></Col>\r\n                <Col lg={6} sm={12}>\r\n                    <Row>\r\n                        <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>File Name Configuration</h5></Col>\r\n                    </Row>\r\n                    <br />\r\n                    <br />\r\n                    <Form ref={configRef} onSubmit={(e) => handleSave(e, 'config')}>\r\n                        {\r\n                            JSON.stringify(dataUserConjunction) !== \"{}\"\r\n                            && <Row>\r\n                                <Col lg={12} md={12} className=\"no_padding\">\r\n                                    <Form.Group as={Col} className=\"mb-5\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"conjunction\"\r\n                                                defaultValue={dataUserConjunction ? dataUserConjunction.configValSelectedCode : dataConjunction.defaultValue}\r\n                                                className=\"select_custom\">\r\n                                                {\r\n                                                    (dataConjunction && dataConjunction.configVals && dataConjunction.configVals.length > 0) &&\r\n                                                    dataConjunction.configVals.map((cR: any, index: number) => {\r\n                                                        return <option key={`cr_${index}`} value={cR.shortCode}>{cR.fieldValue}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom\">Conjunction / Concatenation Parameter</Form.Label>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        }\r\n                        {\r\n                            fieldsSelected\r\n                            && Object.keys(fieldsSelected).map((keyName, keyIndex) => {\r\n                                return (\r\n                                    <Row key={`options_${keyIndex}`}>\r\n                                        <Col lg={12} md={12} className=\"no_padding\">\r\n                                            <Form.Group as={Col} className=\"mb-5\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        name={`field_${keyIndex + 1}`}\r\n                                                        className=\"select_custom\"\r\n                                                        disabled={\r\n                                                            disableHandler(fieldsSelected[keyName])\r\n                                                        }\r\n                                                        onChange={(e) => handleSelection(keyIndex + 1, e.target.value)}\r\n                                                        value={fieldsSelected[keyName] || ''}>\r\n                                                        {\r\n                                                            !fieldsSelected[Number(keyName) + 1]\r\n                                                            && <option></option>\r\n                                                        }\r\n                                                        {\r\n                                                            (filteredOptions && filteredOptions.length > 0) &&\r\n                                                            filteredOptions.map((cR: any, index: number) => {\r\n                                                                return <option disabled={!cR.available} key={`cr_${index}`} value={cR.shortCode}>{cR.fieldValue}</option>\r\n                                                            })\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom\">Field {keyIndex + 1} </Form.Label>\r\n                                                <div className={Styles.movement_group}>\r\n                                                    {\r\n                                                        keyIndex !== 0\r\n                                                        && fieldsSelected[keyName]\r\n                                                        && <HiArrowNarrowUp onClick={() => handleMove(keyIndex + 1, 'up')} />\r\n                                                    }\r\n                                                    {\r\n                                                        keyIndex !== (Object.keys(fieldsSelected).length - 1)\r\n                                                        && fieldsSelected[keyName]\r\n                                                        && fieldsSelected[Number(keyName) + 1]\r\n                                                        && <HiArrowNarrowDown onClick={() => handleMove(keyIndex + 1, 'down')} />\r\n                                                    }\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>)\r\n                            })\r\n                        }\r\n                        <Col sm={12}>\r\n                            <Button variant=\"dark\" style={{ width: \"140px\" }} ref={configNameSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                            <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler(e, 'config')}>Reset to Default</Button>\r\n                        </Col>\r\n                    </Form>\r\n                </Col >\r\n                <Col lg={3} sm={12}></Col>\r\n            </Row >\r\n        }\r\n        <br />\r\n        {\r\n            (userType === 'Client' || userType === 'Equabli')\r\n            && <>\r\n                {\r\n                    !isLoadingRetention\r\n                    &&\r\n                    <Row style={{ margin: 0 }} className=\"form_container\">\r\n                        <Col lg={3} sm={12}></Col>\r\n                        <Col lg={6} sm={12}>\r\n                            <Row>\r\n                                <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Document Retention Policy</h5></Col>\r\n                            </Row>\r\n                            <br />\r\n                            <br />\r\n                            <Form ref={retentionRef} onSubmit={(e) => handleSave(e, 'retention')}>\r\n                                <Row>\r\n                                    <Col lg={12} md={12}>\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Row>\r\n                                                <Col md={11} sm={11}>\r\n                                                    <Form.Control\r\n                                                        className=\"select_custom\"\r\n                                                        type=\"number\"\r\n                                                        name=\"retention_policy\"\r\n                                                        onChange={(e) => {\r\n                                                            setRetention(e.target.value)\r\n                                                        }}\r\n                                                        value={retention} />\r\n                                                </Col>\r\n                                                <Col md={1} style={{ display: 'flex', alignItems: 'center' }}><p style={{ margin: 0 }}>Days</p></Col>\r\n                                                <span style={{ color: 'red', marginLeft: \"1rem\" }}><small>{minMaxError ? 'Retention Policy Should be between 60 to 365 days' : ''}</small></span>\r\n                                            </Row>\r\n                                            <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Retain document after closure of account till</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                                        <Button variant=\"dark\" style={{ width: \"140px\" }} ref={retentionSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                        <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler(e, 'retention')}>Reset to Default</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col lg={3} sm={12}></Col>\r\n                    </Row>\r\n                }\r\n                <br />\r\n                {\r\n                    !isLoadingDocumentPolicy\r\n                    && <Row style={{ margin: 0 }} className=\"form_container\">\r\n                        <Col lg={3} sm={12}></Col>\r\n                        <Col lg={6} sm={12}>\r\n                            <Row>\r\n                                <Col sm={12}><h5 style={{ marginLeft: '1rem' }}>Other Configuration</h5></Col>\r\n                            </Row>\r\n                            <br />\r\n                            <br />\r\n                            <Form onSubmit={(e) => handleSave(e, 'mode')}>\r\n                                <Row>\r\n                                    <Col lg={12} md={6}>\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Row>\r\n                                                <Col md={12} sm={12}>\r\n                                                    {\r\n                                                        mode && mode.map((m, index) => (\r\n                                                            <Form.Check\r\n                                                                key={`default-${index}`}\r\n                                                                inline\r\n                                                                type=\"radio\"\r\n                                                                onChange={(e: any) => {\r\n                                                                    setModeSelected(e.target.value)\r\n                                                                }}\r\n                                                                checked={m.keycode == modeSelected}\r\n                                                                value={m.keycode}\r\n                                                                name='mode'\r\n                                                                label={m.keyvalue}\r\n                                                            />\r\n                                                        ))\r\n                                                    }\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Form.Label className=\"label_custom\" style={{ left: '10px' }}>Incase of Document Duplication</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col sm={12} style={{ marginLeft: '1rem' }}>\r\n                                        <Button variant=\"dark\" style={{ width: \"140px\" }} ref={otherSaveRef} type=\"submit\">Save</Button>{\" \"}\r\n                                        <Button variant=\"dark\" style={{ width: \"140px\" }} onClick={(e) => resetHandler(e, 'mode')}>Reset to Default</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col lg={3} sm={12}></Col>\r\n                    </Row>\r\n                }\r\n\r\n            </>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default DocumentGeneralConfiguration\r\n\r\n"],"sourceRoot":""}