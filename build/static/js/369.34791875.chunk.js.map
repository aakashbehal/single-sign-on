{"version":3,"file":"static/js/369.34791875.chunk.js","mappings":"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","sources":["components/Common/NoResult.tsx","components/Table/pagination.tsx","components/Table/Table.tsx","helpers/skeleton-loading.tsx","store/actions/myDocuments.actions.tsx"],"sourcesContent":["import { BsFolder2Open } from \"react-icons/bs\";\r\n\r\nconst NoRecord = ({ size = 30 }: any) => {\r\n    return (\r\n        <div className=\"no_result\">\r\n            <div>\r\n                <BsFolder2Open size={size} />\r\n                <p><b>No Result</b></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoRecord","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye, AiFillFileExclamation } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType, createZipForFolderDownload } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MiscActionCreator } from '../../store/actions/common/misc.actions';\r\nimport SkeletonLoading from '../../helpers/skeleton-loading';\r\nimport NoRecord from '../Common/NoResult';\r\nimport { MyDocumentsActionCreator } from '../../store/actions/myDocuments.actions';\r\n\r\ninterface ITempObj {\r\n    folderName: string;\r\n    filePath: string;\r\n    fileSizeOriginal: number\r\n}\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    hideShareArray = [],\r\n    searchCriteria,\r\n    handleDocumentManagerSummary\r\n}: any) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [show, setShow] = useState(false)\r\n    const pageSizes = [10, 50, 100];\r\n    const [showHideColumns, setShowHideColumns] = useState<any>(hideShareArray)\r\n    // const [exportDocumentLinks, setExportDocumentLink] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (hideShareArray.length > 0) {\r\n            setShowHideColumns(hideShareArray);\r\n        }\r\n    }, [hideShareArray])\r\n\r\n    useEffect(() => {\r\n        if (data && data.length > 0) {\r\n            let headers = Object.keys(map).filter(item => {\r\n                return showHideColumns.includes(item)\r\n            })\r\n            setHeaders(headers);\r\n        }\r\n    }, [showHideColumns, data])\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const showSummaryNotHaving = () => {\r\n        handleDocumentManagerSummary.documentType = handleDocumentManagerSummary.documentType.replace(/[^\\w\\s]/gi, \" \")\r\n        let path = '/documents/accounts_missing_documents'\r\n        if (parentComponent === 'documentNotSummary') {\r\n            path = '/documents/accounts_documents'\r\n        }\r\n        history.push({\r\n            pathname: path,\r\n            search: new URLSearchParams(handleDocumentManagerSummary).toString(),\r\n        });\r\n    }\r\n\r\n    const handleClickHideShow = (e: any) => {\r\n        let { id, checked } = e.target;\r\n        let columnsTemp = Object.assign([], showHideColumns)\r\n        let columnUpdated: any = []\r\n        if (!checked) {\r\n            columnUpdated = columnsTemp.filter((item: any) => item !== id)\r\n        } else {\r\n            columnUpdated = [...columnsTemp, id]\r\n        }\r\n        setShowHideColumns(columnUpdated);\r\n        dispatch(MiscActionCreator.saveColumn({ parentComponent, showHideColumns: columnUpdated }))\r\n    };\r\n\r\n    const exportHandler = async () => {\r\n        if (parentComponent === 'documents') {\r\n            dispatch(MyDocumentsActionCreator.downloadDocument(isCheck))\r\n        } else {\r\n            dispatch(MyDocumentsActionCreator.downloadFolder(isCheck))\r\n        }\r\n    }\r\n\r\n    // const exportHandler = async () => {\r\n    //     let fileLinks: any = []\r\n    //     let formatted: ITempObj[] = []\r\n    //     for (let key in exportDocumentLinks) {\r\n    //         let filePath = null;\r\n    //         if (parentComponent === 'documents') {\r\n    //             filePath = exportDocumentLinks[key].filePath\r\n    //             if (filePath) {\r\n    //                 fileLinks = [...fileLinks, filePath]\r\n    //             }\r\n    //             console.log(fileLinks)\r\n    //             for (let key of fileLinks) {\r\n    //                 let obj: any = {\r\n    //                     filePath: key,\r\n    //                     fileSizeOriginal: 111111111\r\n    //                 }\r\n    //                 formatted.push(obj)\r\n    //             }\r\n    //         } else {\r\n    //             filePath = exportDocumentLinks[key].documentPaths\r\n    //             if (filePath) {\r\n    //                 if (fileLinks[exportDocumentLinks[key].folderName]) {\r\n    //                     fileLinks[exportDocumentLinks[key].folderName] = [...fileLinks, filePath]\r\n    //                 } else {\r\n    //                     fileLinks[exportDocumentLinks[key].folderName] = [filePath]\r\n    //                 }\r\n    //             }\r\n    //             for (let key in fileLinks) {\r\n    //                 for (let fileLink of fileLinks[key][0]) {\r\n    //                     let obj: ITempObj = {\r\n    //                         folderName: key,\r\n    //                         filePath: fileLink,\r\n    //                         fileSizeOriginal: 111111111\r\n    //                     }\r\n    //                     formatted.push(obj)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     await createZipForFolderDownload(formatted, \"Export\")\r\n    // }\r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                (parentComponent === 'documentSummary' || parentComponent === \"documentNotSummary\")\r\n                &&\r\n                <>\r\n                    <Button\r\n                        className='summary_history_button'\r\n                        onClick={() => showSummaryNotHaving()}\r\n                    >View {parentComponent === 'documentNotSummary' ? handleDocumentManagerSummary.complete : handleDocumentManagerSummary.inComplete} Accounts {parentComponent === 'documentNotSummary' ? \"\" : \"not\"} having {handleDocumentManagerSummary.documentType.replace(/[^\\w\\s]/gi, \" \")}\r\n                    </Button>\r\n                </>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (\r\n                    parentComponent === 'myDocuments'\r\n                    || parentComponent === 'sentDocumentRequest'\r\n                    || parentComponent === 'receiveDocumentRequest'\r\n                    || parentComponent === 'documents'\r\n                    || parentComponent === 'documentSummary'\r\n                    || parentComponent === 'documentNotSummary'\r\n                )\r\n                && <>\r\n                    {\r\n                        (parentComponent === 'myDocuments' || parentComponent === 'documents') &&\r\n                        isCheck && isCheck.length > 0 &&\r\n                        <Button variant=\"dark\" style={{ marginRight: '1rem' }} onClick={() => exportHandler()}>Export</Button>\r\n                    }\r\n                    <CustomDropdown\r\n                        trigger={<button style={{ cursor: 'pointer' }}>Show/Hide Columns</button>}\r\n                        menu={(Object.keys(map)).map((h, index) => {\r\n                            return <button\r\n                                key={`Hide_${index}`}\r\n                                onClick={() => { }}\r\n                            >\r\n                                <Form.Control\r\n                                    type='Checkbox'\r\n                                    id={h}\r\n                                    defaultChecked={showHideColumns.includes(h)}\r\n                                    style={{ cursor: 'pointer', width: 'auto', marginRight: \"1rem\" }}\r\n                                    onClick={handleClickHideShow}\r\n                                ></Form.Control>\r\n                                <span>\r\n                                    {map[h]}\r\n                                </span>\r\n                            </button>\r\n                        })}\r\n                    />\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId: any, data: any) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds: any, data: any) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId: any, index: any) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts: any) => {\r\n        return (\r\n            contacts && contacts.map((contact: any, index: any) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services: any) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service: any, index: any) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data: any) => {\r\n        return (\r\n            data && data.map((d: any, index: any) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data: any) => {\r\n        return (\r\n            data && data.map((d: any, index: any) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data: any) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data: any) => {\r\n        return (\r\n            data && data.map((d: any, index: any) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        // const exportDocumentLinksTemp: any = Object.assign({}, exportDocumentLinks)\r\n        setIsCheck(data.map((li: any) => {\r\n            let id: any = null\r\n            if (parentComponent === 'documents') {\r\n                id = Number(li.id)\r\n            } else {\r\n                id = li.folderName\r\n            }\r\n            // exportDocumentLinksTemp[id] = li\r\n            // setExportDocumentLink(exportDocumentLinksTemp)\r\n            return id\r\n        }));\r\n        if (isCheckAll) {\r\n            // setExportDocumentLink({})\r\n            // setExportList([])\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = (e: any) => {\r\n        let { id, checked } = e.target;\r\n        const data = JSON.parse(id)\r\n        // const exportDocumentLinksTemp: any = Object.assign({}, exportDocumentLinks)\r\n        if (parentComponent === 'documents') {\r\n            id = Number(data.id)\r\n        } else {\r\n            id = data.folderName\r\n        }\r\n        // exportDocumentLinksTemp[id] = data\r\n        // setExportDocumentLink(exportDocumentLinksTemp)\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            // delete exportDocumentLinksTemp[id]\r\n            // setExportDocumentLink(exportDocumentLinksTemp)\r\n            setIsCheck(isCheck.filter((item: any) => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data: any) => {\r\n        if (parentComponent === 'sentDocumentRequest' || parentComponent === 'receiveDocumentRequest') {\r\n            if (data.requestStatus === 'Open' && new Date(data.dueDate) >= new Date()) {\r\n                return '#b2e7d0' // green\r\n            } else if (data.requestStatus === 'Open' && new Date(data.dueDate) < new Date()) {\r\n                return '#fbbdc3' // red\r\n            } else if (data.requestStatus === 'Fulfilled') {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith: any) => {\r\n        if (sharedWith && sharedWith.length === 0) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW: any, index: any) => {\r\n                            if (sW.profilePicture) {\r\n                                return <OverlayTrigger\r\n                                    key={`sw_${index}`}\r\n                                    placement=\"bottom\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            {`Name: ${sW.name}\r\n                                        Email: ${sW.email}`}\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <img src={sW.profilePicture} style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }} loading='lazy' alt=\"\" className='profile_pic_share' />\r\n                                </OverlayTrigger>\r\n                            } else {\r\n                                return <OverlayTrigger\r\n                                    key={`sw_${index}`}\r\n                                    placement=\"bottom\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            {`Name: ${sW.name}\r\n                                        Email: ${sW.email}`}\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW?.name?.charAt(0).toUpperCase() || 'E'}</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleDocumentName = (data: any, index: number) => {\r\n        if (data['documentName'] || data[\"fileName\"]) {\r\n            return (<td\r\n                key={`documentName_${index}`}\r\n                className={`clickable_td td_string`}\r\n            >\r\n                <div style={{\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <BsFileEarmarkText size={24} />\r\n                    <div className='file_name clickable_td_emp' onClick={() => addEditArray.viewDocument(data)}>\r\n                        {data['documentName'] ? data['documentName'] : data['fileName']}\r\n                    </div>\r\n                </div >\r\n            </td >)\r\n        } else {\r\n            return <td\r\n                key={`documentName_${index}`}\r\n                className='center_align_td'\r\n            >\r\n                <AiFillFileExclamation\r\n                    size={24}\r\n                />\r\n                {parentComponent === 'sentDocumentRequest' ? 'Pending' : 'Not Provided Yet'}\r\n            </td>\r\n        }\r\n    }\r\n\r\n    const tableHeaderHandler = () => {\r\n        return <thead>\r\n            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                {(parentComponent === 'myRequests'\r\n                    || parentComponent === 'pendingForApproval'\r\n                    || parentComponent === 'pendingMyApproval'\r\n                ) && <th>#</th>}\r\n                {\r\n                    (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                    && <th className=\"span1\">\r\n                        <div\r\n                            className=\"table_header_container\"\r\n                            style={\r\n                                {\r\n                                    'minWidth': '20px',\r\n                                    'height': '30px',\r\n                                    'alignItems': 'center'\r\n                                }\r\n                            }>\r\n                            <Form.Control\r\n                                type='Checkbox'\r\n                                onChange={() => handleAllSelect()}\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                            </Form.Control>\r\n                        </div>\r\n                    </th>\r\n                }\r\n                {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    headers && headers.map((header, index) => {\r\n                        if (header !== 'recordStatusVal'\r\n                            && header !== 'batchSchedulerGroupId'\r\n                            && header !== 'logDescription'\r\n                            && header !== 'queueId'\r\n                            && header !== 'slaStatus'\r\n                            && header !== 'alertDefinition'\r\n                            && header !== 'RFILink'\r\n                            && header !== 'auditLink'\r\n                        ) {\r\n                            return (\r\n                                <th\r\n                                    className=\"span1\"\r\n                                    key={`header_${index}`}\r\n                                >\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                    ? '300px'\r\n                                                    : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                            }\r\n                                        }>\r\n                                        <div>\r\n                                            {map[header] ? map[header] : header}\r\n                                        </div>\r\n                                        {\r\n                                            sorting\r\n                                            && (\r\n                                                <div className=\"sorting\">\r\n                                                    <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                    <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </th>\r\n                            );\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    ((typeof addEditArray.edit !== 'undefined')\r\n                        || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                    && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                }\r\n                {\r\n                    ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                    && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                }\r\n                {\r\n                    (\r\n                        parentComponent === 'myDocuments'\r\n                        || parentComponent === 'documents'\r\n                        || parentComponent === 'sentDocumentRequest'\r\n                        || parentComponent === 'receiveDocumentRequest'\r\n                        || parentComponent === 'downloadHistory'\r\n                        || parentComponent === 'clientSetup'\r\n                        || parentComponent === 'partnerSetup'\r\n                    )\r\n                    && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n    }\r\n\r\n    const tableBodyHandler = () => {\r\n        return <tbody>\r\n            {\r\n                data && data.map((d: any, index: number) => (\r\n                    <tr\r\n                        key={`data_${index}`} style={{\r\n                            lineHeight: '30px',\r\n                            textAlign: 'center',\r\n                            position: 'relative',\r\n                            zIndex: 9,\r\n                            backgroundColor: dueDateHandler(d)\r\n                        }}\r\n\r\n                    >\r\n                        {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                        {(parentComponent === 'myRequests'\r\n                            || parentComponent === 'pendingForApproval'\r\n                            || parentComponent === 'pendingMyApproval'\r\n                        ) && <th>{index + 1}</th>}\r\n                        {\r\n                            (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                            && <th className=\"span1\">\r\n                                <div\r\n                                    className=\"table_header_container\"\r\n                                    style={\r\n                                        {\r\n                                            'minWidth': '20px',\r\n                                            'height': '30px',\r\n                                            'alignItems': 'center'\r\n                                        }\r\n                                    }>\r\n                                    <Form.Control\r\n                                        type='Checkbox'\r\n                                        id={JSON.stringify(d)}\r\n                                        checked={isCheck.includes(parentComponent === 'documents' ? d.id : d.folderName)}\r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onChange={handleClick}\r\n                                    ></Form.Control>\r\n                                </div>\r\n                            </th>\r\n                        }\r\n                        {\r\n                            // eslint-disable-next-line array-callback-return\r\n                            headers.map((header: any, index2) => {\r\n                                if (header !== 'recordStatusVal'\r\n                                    && header !== 'batchSchedulerGroupId'\r\n                                    && header !== 'logDescription'\r\n                                    && header !== 'slaStatus'\r\n                                    && header !== 'queueId'\r\n                                    && header !== 'alertDefinition'\r\n                                    && header !== 'RFILink'\r\n                                    && header !== 'auditLink'\r\n                                ) {\r\n                                    if (actionArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={\r\n                                                    {\r\n                                                        background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                        color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                    }\r\n                                                }\r\n                                                key={`data_2${index2}`}\r\n                                                className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            >\r\n                                                {\r\n                                                    servicingRequestIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    priorityIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <AiFillFolder size={20} />\r\n                                                        <span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\"\r\n                                                        >\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                    <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                        {d[header]}\r\n                                                    </span>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    if (header === 'isValidationRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isExcluded') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Y' : 'N'}</td>;\r\n                                    }\r\n                                    if (header === 'isAdditionalTimeRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isMasterserviced') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isEqassociate') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'keyContacts') {\r\n                                        return <td key={`data_2${index2}`}>{keyContactsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === 'servicesOffered'\r\n                                        || header === \"accountTypeServiced\"\r\n                                    ) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                        || header === 'productType')) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"capacity\") {\r\n                                        return <td key={`data_2${index2}`}>{capacityHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"commissionRate\") {\r\n                                        return <td key={`data_2${index2}`}>{commissionRateHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"compliance\") {\r\n                                        return <td key={`data_2${index2}`}>{complianceHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                        return <td key={`data_2${index2}`}>{collectionsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"sharedWith\" || header === \"shareBy\" || header === \"sharedBy\") {\r\n                                        return <td key={`data_2${index2}`}>{handleSharedWith(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"preview\") {\r\n                                        return <td key={`data_2${index2}`}><BsFileEarmarkText size={24} /></td>\r\n                                    }\r\n                                    if (header === 'upload') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudUpload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'download') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudDownload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'fileName') {\r\n                                        return handleDocumentName(d, index2)\r\n                                    }\r\n                                    if (!d[header]) {\r\n                                        return <td key={`data_2${index2}`}><b>-</b></td>\r\n                                    }\r\n                                    if (header === \"partnerStatus\") {\r\n                                        return <td key={`data_2${index2}`} style={{ textAlign: 'left' }}>\r\n                                            <span style={{\r\n                                                backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                color: 'white',\r\n                                                padding: '.3rem 1rem',\r\n                                                borderRadius: '.3rem'\r\n                                            }}>{d[header]}</span><br />\r\n                                            {\r\n                                                (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                && <>\r\n                                                    <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                    <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                </>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    if (header === 'executionStatusVal') {\r\n                                        return (<td key={`data_2${index2}`}>\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                {d[header]}\r\n                                                <OverlayTrigger\r\n                                                    placement=\"right\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            {d['logDescription']}\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>)\r\n                                    }\r\n                                    if (header === 'complianceIds') {\r\n                                        return (\r\n                                            <td key={`data_2${index2}`} className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                {complianceSplitter(d[header], d)}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    if (colorArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={{ backgroundColor: `${d[header]}` }}\r\n                                                key={`data_2${index2}`}\r\n                                            >{''}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            key={`data_2${index2}`}\r\n                                        >\r\n                                            {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                            {' '}\r\n                                            {d[header]}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        {\r\n                            ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                            && <td key={`data_${index}`} className=\"span1\" >\r\n                                <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                            </td>\r\n                        }\r\n                        {\r\n                            typeof addEditArray.edit !== 'undefined'\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BiPencil onClick={() => addEditArray.edit(d)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            View\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsEye onClick={() => addEditArray.edit(d)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiOutlineDelete onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Disabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to unlock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Enabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to lock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                (\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    || d.recordStatusVal === \"Disabled\"\r\n                                                )\r\n                                                && (typeof addEditArray.execute !== 'undefined')\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Execute\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Deleted\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            typeof addEditArray.view !== 'undefined'\r\n                            && d['alertDefinition'] !== undefined\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            (\r\n                                parentComponent === 'myDocuments'\r\n                                || parentComponent === 'documents'\r\n                                || parentComponent === 'sentDocumentRequest'\r\n                                || parentComponent === 'receiveDocumentRequest'\r\n                                || parentComponent === 'downloadHistory'\r\n                                || parentComponent === 'clientSetup'\r\n                                || parentComponent === 'partnerSetup'\r\n                            )\r\n                            && <td key={`data_${index}`} className='span1' style={{ minWidth: '140px', textAlign: 'center' }}>\r\n                                {\r\n                                    typeof addEditArray.upload !== 'undefined'\r\n                                    && !d[\"documentName\"]\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Upload\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudUpload onClick={() => addEditArray.upload(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.view !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.download !== 'undefined'\r\n                                    && (\r\n                                        (parentComponent === 'receiveDocumentRequest' && d[\"documentName\"])\r\n                                        || parentComponent === 'myDocuments'\r\n                                        || parentComponent === 'documents'\r\n                                        || parentComponent === 'sentDocumentRequest'\r\n                                        || parentComponent === 'downloadHistory'\r\n                                    )\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload\r\n                                                style={{\r\n                                                    color: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"#bebebe\" : \"black\",\r\n                                                    cursor: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"not-allowed\" : 'pointer'\r\n                                                }}\r\n                                                onClick={() => {\r\n                                                    if (parentComponent === 'sentDocumentRequest' && !d[\"documentName\"]) {\r\n\r\n                                                    } else {\r\n                                                        addEditArray.download(d)\r\n                                                    }\r\n                                                }\r\n                                                } size={20} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.share !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.editClient !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <BiPencil size={20} onClick={() => addEditArray.editClient(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.delete !== 'undefined'\r\n                                    &&\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            {\r\n                tableHeaderHandler()\r\n            }\r\n            {\r\n                tableBodyHandler()\r\n            }\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <td>\r\n                    <NoRecord />\r\n                </td>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        // className={`table_loading ${loadingHeight ? null : 'no_min_height'}`}\r\n        <div  >\r\n            <SkeletonLoading isTable={true} repeats={5} />\r\n        </div >\r\n    );\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            {\r\n                !isLoading &&\r\n                <Table striped hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                    {totalCount > 0 ? tableHandler() : emptyTable()}\r\n                </Table>\r\n            }\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CustomDropdown = ({ trigger, menu }: { trigger: any, menu: any }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className=\"custom_dropdown\">\r\n            {React.cloneElement(trigger, {\r\n                onClick: handleOpen,\r\n            })}\r\n            {open ? (\r\n                <ul className=\"custom_menu\">\r\n                    {menu.map((menuItem: any, index: any) => (\r\n                        <li key={`custom_${index}`} className=\"menu-item\">\r\n                            {React.cloneElement(menuItem, {\r\n                                onClick: () => {\r\n                                    menuItem.props.onClick();\r\n                                },\r\n                            })}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;","const DIV_LAYOUT = (index: number) => {\r\n    return <div style={{ marginBottom: '1rem' }} key={`div_${index}`}>\r\n        <div className=\"skeleton-box\"></div>\r\n        <div className=\"skeleton-box-small\"></div>\r\n    </div>\r\n}\r\n\r\nconst TABLE_ROW_LAYOUT = (index: number) => {\r\n    return <div key={`skeleton_${index}`}>\r\n        <div className=\"skeleton-box\"></div>\r\n        <div className=\"skeleton-box\"></div>\r\n        <div className=\"skeleton-box\"></div>\r\n        <div className=\"skeleton-box\"></div>\r\n        <div className=\"skeleton-box\"></div>\r\n        <div className=\"skeleton-box\"></div>\r\n    </div>\r\n}\r\n\r\nconst SkeletonLoading = ({ repeats = 2, isTable = false }) => {\r\n    const times = () => {\r\n        let output: any = []\r\n        if (isTable) {\r\n            const innerOutput: any = []\r\n            for (let i = 0; i < repeats; i++) {\r\n                innerOutput.push(TABLE_ROW_LAYOUT(i))\r\n            }\r\n            output.push(\r\n                <div key={`sk_${Math.random() * 10}`}>\r\n                    <div className=\"table_header_skeleton\">\r\n                        {TABLE_ROW_LAYOUT(1)}\r\n                    </div>\r\n                    <div className=\"table_body_skeleton\">\r\n                        {innerOutput}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            for (let i = 0; i < repeats; i++) {\r\n                output.push(DIV_LAYOUT(i))\r\n            }\r\n        }\r\n        return output\r\n    }\r\n\r\n    return (\r\n        <>{times()}</>\r\n    )\r\n}\r\n\r\nexport default SkeletonLoading","import { MyDocumentsFolder, MyDocumentsList, DeleteDocument, DeleteFolder, DownloadFolder, DownloadDocument } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    resetDocumentList: () => (dispatch: any) => {\r\n        dispatch(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    },\r\n    deleteDocument: (documentId: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDocument.DELETE_DOCUMENTS_REQUEST })\r\n        const success = (document: any) => ({ type: DeleteDocument.DELETE_DOCUMENTS_SUCCESS, payload: document })\r\n        const failure = (error: any) => ({ type: DeleteDocument.DELETE_DOCUMENTS_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.deleteDocument(documentId)\r\n            .then(\r\n                document => {\r\n                    dispatch(success(document))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(\r\n                dispatch({ type: DeleteDocument.DELETE_DOCUMENTS_RESET })\r\n            )\r\n    },\r\n    deleteFolder: (clientAccountNo: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteFolder.DELETE_FOLDER_REQUEST })\r\n        const success = (document: any) => ({ type: DeleteFolder.DELETE_FOLDER_SUCCESS, payload: document })\r\n        const failure = (error: any) => ({ type: DeleteFolder.DELETE_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.deleteFolder(clientAccountNo)\r\n            .then(\r\n                document => {\r\n                    dispatch(success(document))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(\r\n                dispatch({ type: DeleteFolder.DELETE_FOLDER_RESET })\r\n            )\r\n    },\r\n    downloadFolder: (accountNumbers: string[]) => (dispatch: any) => {\r\n        const request = () => ({ type: DownloadFolder.DOWNLOAD_FOLDER_REQUEST })\r\n        const success = (document: any) => ({ type: DownloadFolder.DOWNLOAD_FOLDER_SUCCESS, payload: document })\r\n        const failure = (error: any) => ({ type: DownloadFolder.DOWNLOAD_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.downloadFolder(accountNumbers)\r\n            .then(\r\n                document => {\r\n                    dispatch(success(document))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    restDownloadFolder: () => (dispatch: any) => {\r\n        dispatch({ type: DownloadFolder.DOWNLOAD_FOLDER_RESET })\r\n    },\r\n    restDownloadDocument: () => (dispatch: any) => {\r\n        dispatch({ type: DownloadDocument.DOWNLOAD_DOCUMENT_RESET })\r\n    },\r\n    downloadDocument: (documentIds: string[]) => (dispatch: any) => {\r\n        const request = () => ({ type: DownloadDocument.DOWNLOAD_DOCUMENT_REQUEST })\r\n        const success = (document: any) => ({ type: DownloadDocument.DOWNLOAD_DOCUMENT_SUCCESS, payload: document })\r\n        const failure = (error: any) => ({ type: DownloadDocument.DOWNLOAD_DOCUMENT_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.downloadDocument(documentIds)\r\n            .then(\r\n                document => {\r\n                    dispatch(success(document))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(\r\n                dispatch({ type: DownloadDocument.DOWNLOAD_DOCUMENT_RESET })\r\n            )\r\n    }\r\n}"],"names":["_ref","_ref$size","size","_jsx","className","children","_jsxs","BsFolder2Open","_ref$total","total","_ref$itemsPerPage","itemsPerPage","_ref$currentPage","currentPage","onPageChange","_useState","useState","_useState2","_slicedToArray","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","_loop","i","push","Pagination","Item","active","onClick","max","min","style","marginTop","Row","Col","md","xs","First","disabled","Prev","Next","Last","CustomDropdown","_ref3","trigger","menu","_React$useState","React","_React$useState2","open","setOpen","map","menuItem","index","props","concat","data","isLoading","onPaginationChange","totalCount","_ref$isPagination","isPagination","_ref$actionArray","actionArray","setCurrentPage","handleNavigate","_ref$colorArray","colorArray","_ref$currencyColumns","currencyColumns","_ref$sorting","sorting","sortElement","sortType","_ref$addEditArray","addEditArray","_ref$tableAction","tableAction","_ref$parentComponent","parentComponent","_ref$hideShareArray","loadingHeight","hideShareArray","handleDocumentManagerSummary","searchCriteria","dispatch","useDispatch","history","useHistory","isCheckAll","setIsCheckAll","_useState3","_useState4","isCheck","setIsCheck","_useState5","_useState6","headers","setHeaders","_useState7","_useState8","pageSize","setPageSize","_useState9","_useState10","setShow","pageSizes","_useState11","_useState12","showHideColumns","setShowHideColumns","length","Object","keys","filter","item","includes","handleClickHideShow","e","_e$target","target","id","checked","columnsTemp","assign","columnUpdated","_toConsumableArray","MiscActionCreator","saveColumn","exportHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","MyDocumentsActionCreator","downloadDocument","downloadFolder","stop","apply","arguments","servicingRequestIndicator","header","d","_Fragment","position","left","requestStatus","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","BsCheck","color","BsX","GiSandsOfTime","ragStatus","FcCancel","priorityIndicator","priorityExecution","FcHighPriority","FcMediumPriority","FcLowPriority","sortBy","type","descElements","document","querySelectorAll","ascElements","Array","from","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","pathname","search","clientId","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","padding","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","_e$target2","JSON","parse","Number","folderName","dueDateHandler","Date","dueDate","tableHeaderHandler","lineHeight","backgroundColor","Form","Control","onChange","li","cursor","indexOf","TiArrowSortedUp","TiArrowSortedDown","edit","view","minWidth","openSolModal","tableBodyHandler","zIndex","stringify","index2","slaStatus","checkType","display","alignItems","AiFillFolder","contacts","contact","name","phone","sharedWith","sW","profilePicture","email","src","marginLeft","loading","alt","_sW$name","charAt","toUpperCase","BsFileEarmarkText","AiOutlineCloudUpload","AiOutlineCloudDownload","viewDocument","AiFillFileExclamation","handleDocumentName","href","justifyContent","AiFillQuestionCircle","Button","variant","recordStatusVal","BiPencil","margin","BsEye","AiOutlineDelete","delete","BsLockFill","update","BsUnlockFill","execute","VscRunAll","undefined","upload","AiOutlineEye","download","share","FiShare2","editClient","documentType","replace","path","URLSearchParams","toString","showSummaryNotHaving","complete","inComplete","h","defaultChecked","width","Group","as","Label","column","sm","value","defaultValue","Table","striped","hover","responsive","NoRecord","SkeletonLoading","isTable","repeats","PaginationComponent","page","TABLE_ROW_LAYOUT","_ref$repeats","_ref$isTable","output","innerOutput","random","times","getMyDocumentFolders","payload","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","then","user","MY_DOCUMENTS_FOLDER_SUCCESS","success","error","MY_DOCUMENTS_FOLDER_FAILURE","failure","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","resetDocumentList","MY_DOCUMENTS_LIST_RESET","deleteDocument","documentId","DeleteDocument","DELETE_DOCUMENTS_REQUEST","DELETE_DOCUMENTS_SUCCESS","DELETE_DOCUMENTS_FAILURE","finally","DELETE_DOCUMENTS_RESET","deleteFolder","clientAccountNo","DeleteFolder","DELETE_FOLDER_REQUEST","DELETE_FOLDER_SUCCESS","DELETE_FOLDER_FAILURE","DELETE_FOLDER_RESET","accountNumbers","DownloadFolder","DOWNLOAD_FOLDER_REQUEST","DOWNLOAD_FOLDER_SUCCESS","DOWNLOAD_FOLDER_FAILURE","restDownloadFolder","DOWNLOAD_FOLDER_RESET","restDownloadDocument","DownloadDocument","DOWNLOAD_DOCUMENT_RESET","documentIds","DOWNLOAD_DOCUMENT_REQUEST","DOWNLOAD_DOCUMENT_SUCCESS","DOWNLOAD_DOCUMENT_FAILURE"],"sourceRoot":""}