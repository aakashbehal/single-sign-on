{"version":3,"file":"static/js/301.522e61ab.chunk.js","mappings":"+KA0FA,IAtFsB,SAAHA,GAAkH,IAA5GC,EAAMD,EAANC,OAAQC,EAAIF,EAAJE,KAAMC,EAAaH,EAAbG,cAAaC,EAAAJ,EAAEK,KAAAA,OAAI,IAAAD,EAAG,WAAUA,EAAAE,EAAAN,EAAEO,WAAAA,OAAU,IAAAD,EAAG,SAAQA,EAAEE,EAAOR,EAAPQ,QAASC,EAAIT,EAAJS,KAC/FC,GAAiBC,EAAAA,EAAAA,QAAY,MASnC,OAPAC,EAAAA,EAAAA,YAAU,WAKV,GAAG,KAGCC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFZ,KAAMA,EACND,OAAQA,EACR,kBAAgB,gCAChBc,UAAQ,EACRC,KAAK,KACLC,WAAW,EAAKC,SAAA,EAEhBC,EAAAA,EAAAA,KAACL,EAAAA,EAAMM,OAAM,CAACC,aAAW,EAAAH,UACrBL,EAAAA,EAAAA,MAACC,EAAAA,EAAMQ,MAAK,CAACC,GAAG,gCAA+BL,SAAA,CAAC,WACnCb,OAIbG,GAAoB,eAATC,IACXU,EAAAA,EAAAA,KAAEL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,UAC9BC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACNL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,wCACqCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQmB,aAAe,iBAM3EnB,GAAoB,sBAATC,IACXU,EAAAA,EAAAA,KAAEL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,UAC9BC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACNL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,2DAEmBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQoB,sBAM1CpB,GAAoB,sBAATC,IACXU,EAAAA,EAAAA,KAAEL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,UAC9BC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACNL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,wEAEmBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQqB,qBAM1CrB,GAAoB,wBAATC,IACRU,EAAAA,EAAAA,KAACL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,UAChCC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACNL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,yDAEaC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQoB,eAAiB,oBAAgBT,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQsB,uBAMjFtB,GAAoB,2BAATC,IACRU,EAAAA,EAAAA,KAACL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,UAChCC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAAAR,UACNL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,yDAEaC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQoB,eAAiB,oBAAgBT,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,EAAQsB,wBAKrFjB,EAAAA,EAAAA,MAACC,EAAAA,EAAMiB,OAAM,CAAAb,SAAA,EACTC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,SAASC,IAAKxB,EAAWyB,QAAShC,EAAce,SAAEX,KAClEY,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAOE,QAASlC,EAAOiB,SAAC,gBAIxD,C,4OChFakB,EACI,SAACC,GAAY,OAAK,SAACC,GAK5BA,EAJuB,CAAE7B,KAAM8B,EAAAA,GAAYC,qBAAsBH,QAAS,KAM1EI,EAAAA,GAAaC,YAAYL,GACpBM,MACG,SAAAC,GACIN,EARI,SAACM,GAAS,MAAM,CAAEnC,KAAM8B,EAAAA,GAAYM,qBAAsBR,QAASO,EAAM,CAQpEE,CAAQF,GACrB,IACA,SAAAG,GACIT,EAVW,CAAE7B,KAAM8B,EAAAA,GAAYS,qBAAsBX,QAAS,IAWlE,IAEHY,SAAQ,WACLX,EAAS,CAAE7B,KAAM8B,EAAAA,GAAYW,oBACjC,GACR,CAAC,EApBQd,EAqBM,SAACC,GAAY,OAAK,SAACC,GAK9BA,EAJuB,CAAE7B,KAAM0C,EAAAA,GAAUC,mBAAoBf,QAAS,KAMtEI,EAAAA,GAAaY,cAAchB,GACtBM,MACG,SAAAC,GACIN,EARI,SAACM,GAAS,MAAM,CAAEnC,KAAM0C,EAAAA,GAAUG,mBAAoBjB,QAASO,EAAM,CAQhEE,CAAQF,GACrB,IACA,SAAAG,GACIT,EAVW,CAAE7B,KAAM0C,EAAAA,GAAUI,mBAAoBlB,QAAS,IAW9D,IAEHY,SAAQ,WACLX,EAAS,CAAE7B,KAAM0C,EAAAA,GAAUK,kBAC/B,GACR,CAAC,EAxCQpB,EA6DY,SAACC,GAAY,OAAK,SAACC,GAKpCA,EAJuB,CAAE7B,KAAMgD,EAAAA,GAAWC,oBAAqBrB,QAAS,KAMxEI,EAAAA,GAAakB,oBAAoBtB,GAC5BM,MACG,SAAAC,GACIN,EARI,SAACM,GAAS,MAAM,CAAEnC,KAAMgD,EAAAA,GAAWG,oBAAqBvB,QAASO,EAAM,CAQlEE,CAAQF,GACrB,IACA,SAAAG,GACIT,EAVW,CAAE7B,KAAMgD,EAAAA,GAAWI,oBAAqBxB,QAAS,IAWhE,IAEHY,SAAQ,WACLX,EAAS,CAAE7B,KAAMgD,EAAAA,GAAWK,mBAChC,GACR,CAAC,E,mBCgNL,EA3Rc,SAAH9D,GAA+D,IAAzDE,EAAIF,EAAJE,KAAMD,EAAMD,EAANC,OAAQ8D,EAAe/D,EAAf+D,gBAAiBC,EAAahE,EAAbgE,cAC5CC,GAA8BC,EAAAA,EAAAA,UAAchE,GAAKiE,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CzD,EAAO2D,EAAA,GAAEE,EAAUF,EAAA,GACpB7B,GAAWgC,EAAAA,EAAAA,MACXpC,GAAMvB,EAAAA,EAAAA,UACZ4D,GAAkCL,EAAAA,EAAAA,UAAS,CACvCM,aAAa,IACfC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAFKG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAG9BG,GAAgCV,EAAAA,EAAAA,WAAkB,GAAMW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAjDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoCd,EAAAA,EAAAA,UAAc,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAA9CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0ClB,EAAAA,EAAAA,UAAc,MAAKmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAtDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAwCtB,EAAAA,EAAAA,UAAc,IAAGuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAlDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkCC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC3DC,MAAOD,EAAMC,MAAMnD,KACnBoD,QAASF,EAAMC,MAAMC,QACrBjD,MAAO+C,EAAMC,MAAMhD,MACtB,IAJOgD,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QAAcJ,EAAL7C,OAMxBnC,EAAAA,EAAAA,YAAU,WACNqF,GAAezF,EACnB,GAAG,CAACA,EAASuF,IAEb,IAAAG,IAaIL,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BK,mBAAoBL,EAAMM,MAAMD,mBAChCE,mBAAoBP,EAAMM,MAAMC,mBAChCC,iBAAkBR,EAAMM,MAAME,iBAC9BC,iBAAkBT,EAAMM,MAAMG,iBAC9BC,iBAAkBV,EAAMM,MAAMI,iBAC9BC,eAAgBX,EAAMM,MAAMK,eAC5BC,oBAAqBZ,EAAMM,MAAMM,oBACjCC,oBAAqBb,EAAMM,MAAMO,oBACjCC,kBAAmBd,EAAMM,MAAMQ,kBAC/BC,kBAAmBf,EAAMM,MAAMS,kBAC/BC,kBAAmBhB,EAAMM,MAAMU,kBAC/BC,gBAAiBjB,EAAMM,MAAMW,gBAChC,IAzBGZ,GAAkBD,GAAlBC,mBACAE,GAAkBH,GAAlBG,mBACAC,GAAgBJ,GAAhBI,iBACAC,GAAgBL,GAAhBK,iBACAC,GAAgBN,GAAhBM,iBACAC,GAAcP,GAAdO,eACAC,GAAmBR,GAAnBQ,oBACAC,GAAmBT,GAAnBS,oBACAC,GAAiBV,GAAjBU,kBACAC,GAAiBX,GAAjBW,kBACAC,GAAiBZ,GAAjBY,kBACAC,GAAeb,GAAfa,iBAmBJnG,EAAAA,EAAAA,YAAU,WACN,GAAIyF,IAAsBG,GAAkB,CAAC,IAADQ,EAClCC,EAAkBC,OAAOC,OAAO,CAAC,EAAG3G,IAC1CwG,EAAAC,EAAWG,YAAWC,KAAIC,MAAAN,GAAAO,EAAAA,EAAAA,GAAIrC,IAC9BhD,EAAIsF,QAAQC,QACZ1C,GAAY,GACZV,EAAW4C,GACXjD,GACJ,CACJ,GAAG,CACCmC,GACAE,GACAC,GACAC,GACAC,GACAC,MAMJ7F,EAAAA,EAAAA,YAAU,WACN,GAAI+F,IAAuBG,GAAmB,CAC1C,IAAMG,EAAkBC,OAAOC,OAAO,CAAC,EAAG3G,GAC1CyG,EAAWG,WAAaH,EAAWG,WAAWM,QAAO,SAACC,GAClD,GAAIA,EAAGC,QAAUtC,EACb,OAAOqC,CAEf,IACA5C,GAAY,GACZV,EAAW4C,GACX1B,EAAiB,MACjBvB,GACJ,CACJ,GAAG,CAAC0C,GACAC,GACAC,GACAC,GACAC,GACAC,MAEJnG,EAAAA,EAAAA,YAAU,WACN0B,EAASuF,EAAAA,EAAkBC,oBAC/B,GAAG,IAEH,IAAM7B,GAAiB,SAACzF,GACpB,IAAIuH,EAAiB,GAEjBC,EADiBd,OAAOC,OAAO,CAAC,EAAG3G,GACN4G,WAAWa,KAAI,SAACC,GAAW,OAAKA,EAAON,KAAK,IAC7E7B,EAAMkC,KAAI,SAACE,GAIP,OAH4C,IAAxCH,EAAYI,QAAQD,EAAKE,WACzBN,EAAUV,KAAKc,IAEZ,CACX,IACAxC,EAAgBoC,EACpB,EAiDA,OACIlH,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFZ,KAAMA,EACND,OAAQA,EACR,kBAAgB,gCAChBc,UAAQ,EACRC,KAAK,KACLC,WAAW,EAAKC,SAAA,EAEhBC,EAAAA,EAAAA,KAACL,EAAAA,EAAMM,OAAM,CAACC,aAAW,EAAAH,UACrBL,EAAAA,EAAAA,MAACC,EAAAA,EAAMQ,MAAK,CAACC,GAAG,gCAA+BL,SAAA,CAAC,WACrCC,EAAAA,EAAAA,KAAA,KAAAD,SAAoC,GAAAoH,OAAZ,eAApBvE,EAAsCvD,EAAQmB,WAAkBnB,EAAQ+H,gBAAmB,UAG9G1H,EAAAA,EAAAA,MAACC,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,SAAA,EAC7BC,EAAAA,EAAAA,KAACqH,EAAAA,EAAI,CAAAtH,UACDC,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAAAvH,UACAC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGnH,UAAU,aAAYP,UACtCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,YAAWP,SAAA,EACtCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAG7H,UAChBC,EAAAA,EAAAA,KAAC6H,EAAAA,GAAS,CACNC,UAAWjD,EACXzE,GAAG,yBACH2H,SAAS,oBACTC,UAAQ,EACRjH,IAAKA,EACLkH,UAAU,EACVC,mBAAmB,wBACnBC,SAAU,SAACC,GACPxE,GAAY,GACZ,IAAIyE,EAAkBD,EAAStB,KAAI,SAACwB,GAShC,MARW,CACP,KAAQA,EAAEC,UACV,MAASD,EAAEpB,UAAYoB,EAAEC,UACzB,gBAAmBD,EAAEE,aACrB,YAAeF,EAAEG,YACjB,QAAWH,EAAEI,QACb,YAAeJ,EAAEK,QAGzB,IACA3E,EAAcqE,EAClB,EACAO,QAASrE,OAGjBvE,EAAAA,EAAAA,KAAA,QAAM6I,MAAO,CAAEC,MAAO,MAAOC,YAAa,QAAShJ,UAACC,EAAAA,EAAAA,KAAA,SAAAD,SAAQwD,EAAuB,YAAI,sCAAwC,QAC/HvD,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,yBAK3DL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAG7H,SAAA,EACRC,EAAAA,EAAAA,KAAA,KAAGM,UAAW2I,EAAAA,EAAOC,kBAAkBnJ,SAAC,wBAEnCoF,IAAoBG,MAClBtF,EAAAA,EAAAA,KAACmJ,EAAAA,EAAc,CACdC,UAAU,QACVC,MAAO,CAAEtK,KAAM,IAAKuK,KAAM,KAC1BC,SACIvJ,EAAAA,EAAAA,KAACwJ,EAAAA,EAAO,CAACpJ,GAAE,gBAAkBL,SAAC,sBAGjCA,UAEDC,EAAAA,EAAAA,KAACyJ,EAAAA,IAAa,CAAC5J,KAAM,GAAIS,UAAW2I,EAAAA,EAAOS,sBAI7CvE,KAAqBG,MACnBN,IAAsBI,MACvBpF,EAAAA,EAAAA,KAAC2J,EAAAA,IAAY,CAAC9J,KAAM,GAAIS,UAAS,WAAA6G,OAAa8B,EAAAA,EAAOS,mBAGxDrK,EAAQ4G,YAAc5G,EAAQ4G,WAAW2D,OAAS,IAAK5J,EAAAA,EAAAA,KAAA,MAAIM,UAAW2I,EAAAA,EAAOY,cAAc9J,SAEnFV,EAAQ4G,WAAWa,KAAI,SAACgD,EAASC,GAC7B,OAAOrK,EAAAA,EAAAA,MAAA,MAAIY,UAAW2I,EAAAA,EAAOe,cAAcjK,SAAA,EACvCL,EAAAA,EAAAA,MAAA,OAAKY,UAAW2I,EAAAA,EAAOgB,eAAelK,SAAA,EAClCL,EAAAA,EAAAA,MAAA,OAAKY,UAAU,oBAAoBuI,MAAO,CAAEqB,YAAa,QAASnK,SAAA,CAE1D+J,EAAGK,iBAAkBnK,EAAAA,EAAAA,KAAA,OAAKoK,IAAKN,EAAGK,eAAgB7J,UAAU,sBAAsB+J,IAAI,MAGrFP,EAAGK,iBACDnK,EAAAA,EAAAA,KAAA,QAAMM,UAAS,eAAA6G,OAAiB8B,EAAAA,EAAOqB,qBAAsBvK,UAC5DC,EAAAA,EAAAA,KAAA,QAAAD,SAAO+J,EAAGS,KAAKC,OAAO,WAIlC9K,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACIL,EAAAA,EAAAA,MAAA,KAAGY,UAAW2I,EAAAA,EAAOwB,aAAa1K,SAAA,CAAE+J,EAAGY,aAAeZ,EAAGnB,QAAQ,MAAImB,EAAGS,SACxEvK,EAAAA,EAAAA,KAAA,KAAGM,UAAW2I,EAAAA,EAAOwB,aAAa1K,SAAE+J,EAAGrD,eAG/CzG,EAAAA,EAAAA,KAAA,OAAAD,UACIL,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CACHP,UAAW2I,EAAAA,EAAO0B,kBAClB7J,QAAQ,OACRE,QAAS,kBA9G/B,SAACS,GACnB,IAAImJ,EAAe,CAAC,EACpBA,EAAe,MAAInJ,EAAKgF,MACxBrC,EAAiB3C,EAAKgF,OAElBtF,EAASF,EAAuC2J,GAIxD,CAqG2DC,CAAcf,EAAG,EAAC/J,SAAA,EAEjCC,EAAAA,EAAAA,KAAC8K,EAAAA,IAAO,CACJjL,KAAM,GACNgJ,MAAO,CAAEkC,OAAQ,UAAWC,OAAQ,aACtC,uBAGJ,MAAA7D,OA9B6C4C,GAgC3D,MAKR1K,EAAQ4G,YAA4C,IAA9B5G,EAAQ4G,WAAW2D,SACzC5J,EAAAA,EAAAA,KAAA,KAAG6I,MAAO,CAAEoC,UAAW,UAAWlL,SAAC,2BAI/CC,EAAAA,EAAAA,KAACL,EAAAA,EAAMiB,OAAM,CAAAb,UACTC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAO+H,MAAO,CAAEqC,MAAO,QAAUC,UAAWxH,EAAU3C,QAjJ1D,WACpB,IAAI4J,EAAe,CAAC,EACpBA,EAAqB,YAAI7G,EAxBZ,SAAC6G,GACd,IAAIQ,GAAc,EACZxJ,EAAa,CACfyB,aAAa,GAEjB,IAAK,IAAIgI,KAAOT,EACPA,EAAQS,IAAyB,KAAjBT,EAAQS,KACzBzJ,EAAMyJ,IAAO,GAEqB,IAAlCT,EAAqB,YAAEhB,SACvBhI,EAAmB,aAAI,GAG/B,IAAK,IAAI0J,KAAK1J,EACNA,EAAM0J,KACNF,GAAc,GAItB,OADA5H,EAAa5B,GACNwJ,CACX,CAKQG,CAASX,KACe,cAApBhI,GACAgI,EAAoB,WAAIvL,EAAQe,GAChCe,EAASF,EAAiC2J,MAE1CA,EAAyB,gBAAIvL,EAAQmB,WACrCW,EAASF,EAA+B2J,KAGpD,EAqI2G7K,SAAC,cAIhH,C,iUCzDA,EA5NoB,WAChB,IAAMoB,GAAWgC,EAAAA,EAAAA,MACXqI,GAAUC,EAAAA,EAAAA,MACRC,GAAaC,EAAAA,EAAAA,MAAbD,SACR5I,GAAsCC,EAAAA,EAAAA,UAAS,gBAAeC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvD8I,EAAW5I,EAAA,GAAE6I,EAAc7I,EAAA,GAClCI,GAAgCL,EAAAA,EAAAA,UAAS,QAAOO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzC0I,EAAQxI,EAAA,GAAEyI,EAAWzI,EAAA,GAC5BG,GAAgCV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAArCuI,EAAQtI,EAAA,GAAEuI,EAAWvI,EAAA,GAC5BG,GAAoCd,EAAAA,EAAAA,UAAS,GAAEe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAxCqI,EAAUpI,EAAA,GAAEqI,EAAarI,EAAA,GAChCG,GAA4ClB,EAAAA,EAAAA,WAAS,GAAMmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAApDmI,EAAclI,EAAA,GAAEmI,EAAiBnI,EAAA,GACxCG,GAAwCtB,EAAAA,EAAAA,UAAc,IAAGuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAlDiI,EAAYhI,EAAA,GAAEiI,EAAejI,EAAA,GACpCkI,GAAkDzJ,EAAAA,EAAAA,WAAS,GAAM0J,GAAAxJ,EAAAA,EAAAA,GAAAuJ,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAAkC7J,EAAAA,EAAAA,UAAS,MAAK8J,IAAA5J,EAAAA,EAAAA,GAAA2J,EAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAkDjK,EAAAA,EAAAA,WAAS,GAAMkK,IAAAhK,EAAAA,EAAAA,GAAA+J,GAAA,GAA1DE,GAAiBD,GAAA,GAAEE,GAAoBF,GAAA,GAC9CG,IAA8BrK,EAAAA,EAAAA,UAAc,MAAKsK,IAAApK,EAAAA,EAAAA,GAAAmK,GAAA,GAA1C/N,GAAOgO,GAAA,GAAEnK,GAAUmK,GAAA,GAC1BC,IAA2EC,EAAAA,EAAAA,KAAmBC,IAAAvK,EAAAA,EAAAA,GAAAqK,GAAA,GAAzFG,GAASD,GAAA,GAAAE,GAAAF,GAAA,GAAIG,GAAUD,GAAVC,WAAYC,GAAUF,GAAVE,WAAYC,GAAaH,GAAbG,cAAeC,GAAYJ,GAAZI,aAEzDrJ,IAaIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BoJ,QAASpJ,EAAMqJ,YAAYD,QAAQtM,KACnCwM,QAAStJ,EAAMqJ,YAAYD,QAAQE,QACnCC,WAAYvJ,EAAMqJ,YAAYD,QAAQG,WACtCtM,MAAO+C,EAAMqJ,YAAYD,QAAQnM,MACjCiD,QAASF,EAAMqJ,YAAYD,QAAQlJ,QACnCsJ,eAAgBxJ,EAAMyJ,KAAKC,gBAAgB5M,KAC3C6M,cAAe3J,EAAMqJ,YAAYD,QAAQO,cACzCC,cAAe5J,EAAMqJ,YAAYD,QAAQQ,cACzCC,YAAa7J,EAAMqJ,YAAYD,QAAQS,YACvCC,gBAAiB9J,EAAMqJ,YAAYU,eAAe7J,QAClD8J,cAAehK,EAAMqJ,YAAYU,eAAe9M,MAChDgN,gBAAiBjK,EAAMqJ,YAAYU,eAAe/M,QAClDkN,cAAelK,EAAMqJ,YAAYU,eAAeG,cACnD,IA3BOd,GAAOtJ,GAAPsJ,QACJE,GAAOxJ,GAAPwJ,QACAC,GAAUzJ,GAAVyJ,WAEArJ,IADKJ,GAAL7C,MACO6C,GAAPI,SACAsJ,GAAc1J,GAAd0J,eAEAI,IADa9J,GAAb6J,cACa7J,GAAb8J,eACAC,GAAW/J,GAAX+J,YACAC,GAAehK,GAAfgK,gBACAE,GAAalK,GAAbkK,cACAC,GAAenK,GAAfmK,gBACAC,GAAapK,GAAboK,eAiBJpP,EAAAA,EAAAA,YAAU,WACNkO,GAAW,CACP3B,SAAUA,EACVE,WAAYA,EACZ0B,WAAY,KACZkB,UAAWhD,EACXiD,UAAWnD,GAEnB,GAAG,KAEHnM,EAAAA,EAAAA,YAAU,WACY,OAAdgO,IACAuB,GAAOhD,EAAUE,EAEzB,GAAG,CAACuB,GAAW7B,EAAaE,KAE5BrM,EAAAA,EAAAA,YAAU,WACN,IAAKoF,IAA8B,IAAnBoJ,GAAQrE,QAAiBuE,IAAkBA,GAAevE,OAAS,EAAI,CACnF,IAAMqE,EAAUE,GAAe5H,QAAO,SAAC0I,GACnC,GAAqB,mBAAjBA,EAAGC,UACH,OAAOD,CAEf,IACA1C,EAAgB0B,EAAQ,GAAGkB,iBAC/B,MACI5C,EAAgB0B,GAExB,GAAG,CAACA,MAEJxO,EAAAA,EAAAA,YAAU,WACF8O,KACA7C,GAAS0D,EAAAA,EAAAA,GAAc,UAAU,UAAY,YAAa,CAAEC,WAAY,UAAWC,aAAa,IAChGnC,IAAqB,GACrB6B,GAAOhD,EAAUE,IAEjBsC,IAAe9C,GAAS0D,EAAAA,EAAAA,GAAc,QAAQ,WAAa,YAAa,CAAEC,WAAY,QAASC,aAAa,GACpH,GAAG,CACCf,GACAC,MAEJ/O,EAAAA,EAAAA,YAAU,YACDgP,IAAmBG,IAAmBC,KACvCA,GAAc/H,KAAI,SAACyI,IACfC,EAAAA,EAAAA,IAAiBD,EACrB,IACApO,EAASsO,EAAAA,EAAyBC,sBAE1C,GAAG,CAACjB,GAAiBE,GAAeC,GAAiBC,KAErD,IAAMc,GAAuB,SAAClO,GAC1B+J,EAAQtF,KAAK,CACT0J,SAAU,2BACVZ,OAAO,cAAD7H,OAAgB1F,EAAKjB,aAEnC,EAEMwO,GAAS,SACXhD,EACAE,GAEAuB,IAASoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQpC,IAAS,IAAEzB,SAAAA,EAAUE,WAAAA,EAAY6C,UAAWnD,EAAakD,UAAWhD,IACrF3K,EAASsO,EAAAA,EAAyBK,qBAAqBrC,KACvDd,GAAqB,EACzB,EAYMoD,GAAgB,eAAAlR,GAAAmR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACzCrP,EAASsO,EAAAA,EAAyBgB,eAAe,CAACL,EAAS5P,cAAa,wBAAA8P,EAAAI,OAAA,GAAAP,EAAA,KAC3E,gBAFqBQ,GAAA,OAAA9R,EAAAsH,MAAA,KAAAyK,UAAA,KAatB,OAAQlR,EAAAA,EAAAA,MAAAmR,EAAAA,SAAA,CAAA9Q,SAAA,EACJL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAG7H,SAAA,EACRL,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAAAvH,SAAA,EACAC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAa,CACVlO,gBAAiB,cACjBqG,OAAQA,EAAAA,EACRyD,kBAAmBA,EACnBC,qBAAsB,SAACoE,GAAS,OAAKpE,EAAqBoE,EAAK,EAC/DC,eAAgBpD,GAChBH,UAAWA,GACXwD,kBAAmBpD,GACnBqD,iBAAkBpD,MAEtB9N,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,EAAGG,GAAI,EAAE7H,UACdC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAO+H,MAAO,CAAEqC,MAAO,QAAUlK,QAAS,kBAAMqL,GAAkB,EAAK,EAACtM,SAAC,0BAGjGC,EAAAA,EAAAA,KAAA,aAEJA,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAAAxH,UACAC,EAAAA,EAAAA,KAACmR,EAAAA,EAAc,CACX1P,KAAMsM,GACNjG,UAAWjD,GACXiC,IAAK,CACD,WAAc,OACd,SAAY,OACZ,aAAgB,gBAChB,UAAa,cACb,YAAe,gBACf,QAAW,YACX,WAAc,eAElBoH,WAAYA,GACZkD,YAAa,CAAC,cACdC,eAAgB,SAAC5P,EAAW6P,GAAW,OAAK3B,GAAqBlO,EAAK,EACtE8P,gBAAiB,GACjB3F,YAAa,SAAC4F,GAAW,OAAK3F,EAAe2F,EAAO,EACpD1F,SAAU,SAACxM,GAAS,OAAKyM,EAAYzM,EAAK,EAC1CmS,YAAavF,EACbwF,eAAgBvF,EAChBvJ,gBAAiB,cACjB+O,eAAgB,CAAC,EACjBC,eAAgBtF,EAChBuF,aACI,CACIC,SAAU,SAACrQ,GAAS,OAAKsO,GAAiBtO,EAAK,EAC/CwD,MAAO,SAACxD,GAAS,OAAKsL,GAAatL,EAAK,EACxCsQ,KAAM,SAACtQ,GAAS,OAAKkO,GAAqBlO,EAAK,EAC/CuQ,OAAQ,SAACvQ,GAAS,OAxDlCyB,GAwDqDzB,QAvDrD0L,IAAqB,EAuDqC,GAGlD8E,mBAAoB,SAChBjG,EAAkBE,GAAkB,OAtE3B,SAACF,EAAkBE,GACxCD,EAAYD,GACZgD,GAAOhD,EAAUE,EACrB,CAoEiBgG,CAAiBlG,EAAUE,EAAW,MAG/CgB,KACGlN,EAAAA,EAAAA,KAACmS,EAAAA,EAAa,CACbpT,KAAMmO,GACNpO,OAAQ,kBAAMqO,IAAqB,EAAM,EACzCnO,cAAe,WA/DvBmC,EAASsO,EAAAA,EAAyB2C,aAAa/S,GAAQmB,YA+DX,EACpCnB,QAASA,GACTC,KAAK,eAIT8M,IACGpM,EAAAA,EAAAA,KAACqS,EAAAA,EAAc,CACdtT,KAAMqN,EACNtN,OAAQ,kBAAMuN,GAAkB,EAAM,EACtCiG,UAAW,IACXrJ,OAAQA,EAAAA,EACRrG,gBAAgB,aAChBoM,OAAQA,KAGZlC,KACG9M,EAAAA,EAAAA,KAACuS,EAAAA,EAAK,CACLxT,KAAM+N,GACNlK,gBAAgB,aAChBC,cAAe,kBAAMmM,GAAOhD,EAAUE,EAAW,EACjDpN,OAAQ,kBAAMiO,GAAa,KAAK,MAIhD,E,mBCpOayF,EACkB,SAACC,GAAmB,OAAK,SAACtR,GAKjDA,EAJuB,CAAE7B,KAAMoT,EAAAA,GAA0BC,uCAMzDC,EAAAA,GAAuBC,0BAA0BJ,GAC5CjR,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAMoT,EAAAA,GAA0BK,qCAAsC7R,QAAS4R,EAAM,CAQlGnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAMoT,EAAAA,GAA0BM,qCAAsC9R,QAASU,EAAO,CAUpGqR,CAAQrR,GACrB,GAEZ,CAAC,EAjBQ4Q,EAoCc,SAACpS,GAAO,OAAK,SAACe,GAKjCA,EAJuB,CAAE7B,KAAM4T,EAAAA,GAA6BC,0CAM5DP,EAAAA,GAAuBQ,6BAA6BhT,GAC/CoB,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAM4T,EAAAA,GAA6BG,wCAAyCnS,QAAS4R,EAAM,CAQxGnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAM4T,EAAAA,GAA6BI,wCAAyCpS,QAASU,EAAO,CAU1GqR,CAAQrR,GACrB,IACFE,SAAQ,kBAAMX,EAAS,CAAE7B,KAAM4T,EAAAA,GAA6BK,uCAAwC,GAC9G,CAAC,E,8BC2LL,EAnOiC,WAC7B,IAAMpS,GAAWgC,EAAAA,EAAAA,MACTuI,GAAaC,EAAAA,EAAAA,MAAbD,SACR5I,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D4J,EAAiB1J,EAAA,GAAE2J,EAAoB3J,EAAA,GAC9CI,GAAsCL,EAAAA,EAAAA,UAAS,eAAcO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAtDwI,EAAWtI,EAAA,GAAEuI,EAAcvI,EAAA,GAClCG,GAAgCV,EAAAA,EAAAA,UAAS,QAAOW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAzCqI,EAAQpI,EAAA,GAAEqI,EAAWrI,EAAA,GAC5BG,GAAgCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAArCmI,EAAQlI,EAAA,GAAEmI,EAAWnI,EAAA,GAC5BG,GAAoClB,EAAAA,EAAAA,UAAS,GAAEmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAxCiI,EAAUhI,EAAA,GAAEiI,EAAajI,EAAA,GAChCG,GAAkDtB,EAAAA,EAAAA,WAAS,GAAMuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA1D6I,EAAiB5I,EAAA,GAAE6I,EAAoB7I,EAAA,GAC9CkI,GAA4CzJ,EAAAA,EAAAA,WAAS,GAAM0J,GAAAxJ,EAAAA,EAAAA,GAAAuJ,EAAA,GAApDJ,EAAcK,EAAA,GAAEJ,EAAiBI,EAAA,GACxCG,IAA8B7J,EAAAA,EAAAA,UAAc,MAAK8J,IAAA5J,EAAAA,EAAAA,GAAA2J,GAAA,GAA1CvN,GAAOwN,GAAA,GAAE3J,GAAU2J,GAAA,GAC1BG,IAAwCjK,EAAAA,EAAAA,WAAS,GAAMkK,IAAAhK,EAAAA,EAAAA,GAAA+J,GAAA,GAAhDwG,GAAYvG,GAAA,GAAEwG,GAAexG,GAAA,GACpCG,IAA4CrK,EAAAA,EAAAA,UAAS,MAAKsK,IAAApK,EAAAA,EAAAA,GAAAmK,GAAA,GAAnDsG,GAAcrG,GAAA,GAAEsG,GAAiBtG,GAAA,GACxCuG,IAAwC7Q,EAAAA,EAAAA,UAAc,IAAG8Q,IAAA5Q,EAAAA,EAAAA,GAAA2Q,GAAA,GAAlDtH,GAAYuH,GAAA,GAAEtH,GAAesH,GAAA,GACpCvG,IAA2EC,EAAAA,EAAAA,KAAmBC,IAAAvK,EAAAA,EAAAA,GAAAqK,GAAA,GAAzFG,GAASD,GAAA,GAAAE,GAAAF,GAAA,GAAIG,GAAUD,GAAVC,WAAYC,GAAUF,GAAVE,WAAYC,GAAaH,GAAbG,cAAeC,GAAYJ,GAAZI,aAEzDrJ,IAaIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BmP,wBAAyBnP,EAAMiO,uBAAuBnR,KACtDyM,WAAYvJ,EAAMiO,uBAAuB1E,WACzCD,QAAStJ,EAAMiO,uBAAuB3E,QACtCpJ,QAASF,EAAMiO,uBAAuB/N,QACtCjD,MAAO+C,EAAMiO,uBAAuBhR,MACpC6M,gBAAiB9J,EAAMiO,uBAAuBnE,gBAC9CsF,uBAAwBpP,EAAMiO,uBAAuBmB,uBACrDC,qBAAsBrP,EAAMiO,uBAAuBoB,qBACnD1F,cAAe3J,EAAMiO,uBAAuBtE,cAC5C2F,qBAAsBtP,EAAMiO,uBAAuBqB,qBACnDC,mBAAoBvP,EAAMiO,uBAAuBsB,mBACjD/F,eAAgBxJ,EAAMyJ,KAAKC,gBAAgB5M,KAC9C,IAzBGqS,GAAuBrP,GAAvBqP,wBACA5F,GAAUzJ,GAAVyJ,WACAD,GAAOxJ,GAAPwJ,QACApJ,GAAOJ,GAAPI,QAMAoP,IALKxP,GAAL7C,MACe6C,GAAfgK,gBACsBhK,GAAtBsP,uBACoBtP,GAApBuP,qBACavP,GAAb6J,cACoB7J,GAApBwP,sBACAC,GAAkBzP,GAAlByP,mBACA/F,GAAc1J,GAAd0J,gBAgBJ1O,EAAAA,EAAAA,YAAU,WACNkO,GAAW,CACP3B,SAAUA,EACVE,WAAYA,EACZ0B,WAAY,KACZkB,UAAWhD,EACXiD,UAAWnD,GAEnB,GAAG,KAEHnM,EAAAA,EAAAA,YAAU,WACY,OAAdgO,IACAuB,GAAOhD,EAAUE,EAEzB,GAAG,CAACuB,GAAW7B,EAAaE,KAE5BrM,EAAAA,EAAAA,YAAU,WACN,IAAKoF,IAA8B,IAAnBoJ,GAAQrE,QAAiBuE,IAAkBA,GAAevE,OAAS,EAAI,CACnF,IAAMqE,EAAUE,GAAe5H,QAAO,SAAC0I,GACnC,GAAqB,mBAAjBA,EAAGC,UACH,OAAOD,CAEf,IACA1C,GAAgB0B,EAAQ,GAAGkG,YAC/B,MACI5H,GAAgB0B,GAExB,GAAG,CAACA,MAGJxO,EAAAA,EAAAA,YAAU,WAOFwU,KACAvI,GAAS0D,EAAAA,EAAAA,GAAc,UAAU,UAAY,sBAAuB,CAAEC,WAAY,UAAWC,aAAa,IAC1GnC,GAAqB,GACrB6B,GAAOhD,EAAUE,IAEjBgI,IAAsBxI,GAAS0D,EAAAA,EAAAA,GAAc,QAAQ,WAAa,sBAAuB,CAAEC,WAAY,QAASC,aAAa,GACrI,GAAG,CAGC2E,GACAC,KAEJ,IAAMlF,GAAS,SACXhD,EACAE,GAEAuB,IAASoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQpC,IAAS,IAAEzB,SAAAA,EAAUE,WAAAA,EAAY6C,UAAWnD,EAAakD,UAAWhD,IACrF3K,EAASqR,EAA8D/E,KACvEd,GAAqB,EACzB,EAsBMyH,GAAe,eAAAvV,GAAAmR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0D,OAAlG9E,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,mBAAqB,IAAK,CAAEC,WAAY,OAAQC,aAAa,IAAOgB,EAAAE,KAAA,GAC5F6D,EAAAA,EAAAA,IAAmBjE,GAAS,OAClCjP,EAASmT,EAAAA,EAA6BC,oBAAoB,CAACnE,EAASoE,cACpE9I,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,sBAAwB,IAAK,CAAEC,WAAY,UAAWC,aAAa,IAAO,wBAAAgB,EAAAI,OAAA,GAAAP,EAAA,KAC3G,gBANoBQ,GAAA,OAAA9R,EAAAsH,MAAA,KAAAyK,UAAA,KAQf6D,GAAiB,WACnBzF,GAAOhD,EAAUE,GACjB/K,EAASuT,EAAAA,EAAqBC,WAClC,EAEA,OAAQjV,EAAAA,EAAAA,MAAAmR,EAAAA,SAAA,CAAA9Q,SAAA,EACJL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAG7H,SAAA,EACRL,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAAAvH,SAAA,EACAC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAa,CACVlO,gBAAiB,yBACjBqG,OAAQA,EAAAA,EACRyD,kBAAmBA,EACnBC,qBAAsB,SAACoE,GAAS,OAAKpE,EAAqBoE,EAAK,EAC/DC,eAAgBpD,GAChBH,UAAWA,GACXwD,kBAAmBpD,GACnBqD,iBAAkBpD,MAEtB9N,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,EAAGG,GAAI,EAAE7H,UACdC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAO+H,MAAO,CAAEqC,MAAO,QAAUlK,QAAS,kBAAMqL,GAAkB,EAAK,EAACtM,SAAC,+BAGjGC,EAAAA,EAAAA,KAAA,aAEJA,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAAAxH,UACAC,EAAAA,EAAAA,KAACmR,EAAAA,EAAc,CACX1P,KAAMqS,GACNhM,UAAWjD,GACXiC,IAAK,CACD,aAAgB,qBAChB,sBAAyB,0BACzB,qBAAwB,yBACxB,oBAAuB,wBACvB,YAAe,iBACf,QAAW,WACX,gBAAmB,mBACnB,SAAY,gBACZ,cAAiB,gBAErBoH,WAAYA,GACZkD,YAAa,GACbC,eAAgB,WAAQ,EACxBE,gBAAiB,GACjB3F,YAAa,SAAC4F,GAAW,OAAK3F,EAAe2F,EAAO,EACpD1F,SAAU,SAACxM,GAAS,OAAKyM,EAAYzM,EAAK,EAC1CmS,YAAavF,EACbwF,eAAgBvF,EAChBvJ,gBAAiB,yBACjB+O,eAAgB,CAAC,EACjBC,eAAgBtF,GAChBuF,aACI,CACIC,SAAU,SAACrQ,GAAS,OAAK2S,GAAgB3S,EAAK,EAC9CmT,OAAQ,SAACnT,GACLyB,GAAWzB,GACX4K,GAAkB,EACtB,EACA2F,OAAQ,SAACvQ,GAAS,OArElCyB,GAqEqDzB,QApErD0L,GAAqB,EAoEqC,EAC1C0H,aAAc,SAACpT,GACXgS,IAAgB,GAChBE,GAAkBlS,EACtB,GAGRwQ,mBAAoB,SAChBjG,EAAkBE,GAAkB,OAxF3B,SAACF,EAAkBE,GACxCD,EAAYD,GACZgD,GAAOhD,EAAUE,EACrB,CAsFiBgG,CAAiBlG,EAAUE,EAAW,MAG/CE,IACGpM,EAAAA,EAAAA,KAACqS,EAAAA,EAAc,CACdtT,KAAMqN,EACNtN,OAAQ,kBAAMuN,GAAkB,EAAM,EACtCiG,UAAW,IACXrJ,OAAQA,EAAAA,EACRrG,gBAAgB,yBAChBoM,OAAQ,kBAAMyF,IAAgB,EAC9BpV,QAASA,KAIb6N,IACGlN,EAAAA,EAAAA,KAACmS,EAAAA,EAAa,CACbpT,KAAMmO,EACNpO,OAAQ,kBAAMqO,GAAqB,EAAM,EACzCnO,cAAe,kBAtGvBmC,EAASqR,EAA0DnT,GAAQe,UAC3Ee,EAASuT,EAAAA,EAAqBC,WAqGY,EAClCtV,QAASA,GACTC,KAAK,2BAITkU,KACAxT,EAAAA,EAAAA,KAAC8U,EAAAA,EAAY,CAAC/V,KAAMyU,GAAc1U,OAAQ,kBAAM2U,IAAgB,EAAM,EAAEsB,aAAcrB,OAGlG,E,uCCjPasB,G,QACe,SAACvC,GAAmB,OAAK,SAACtR,GAK9CA,EAJuB,CAAE7B,KAAM2V,EAAAA,GAAuBC,oCAMtDC,EAAAA,GAA2BC,uBAAuB3C,GAC7CjR,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAM2V,EAAAA,GAAuBI,kCAAmCnU,QAAS4R,EAAM,CAQ5FnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAM2V,EAAAA,GAAuBK,kCAAmCpU,QAASU,EAAO,CAU9FqR,CAAQrR,GACrB,GAEZ,CAAC,GAjBQoT,EAmBY,SAACvC,GAAmB,OAAK,SAACtR,GAK3CA,EAJuB,CAAE7B,KAAMiW,EAAAA,GAAoBC,gCAMnDL,EAAAA,GAA2BM,oBAAoBhD,GAC1CjR,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAMiW,EAAAA,GAAoBG,8BAA+BxU,QAAS4R,EAAM,CAQrFnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAMiW,EAAAA,GAAoBI,8BAA+BzU,QAASU,EAAO,CAUvFqR,CAAQrR,GACrB,IACFE,SAAQ,kBAAMX,EAAS,CAAE7B,KAAMiW,EAAAA,GAAoBK,6BAA8B,GAC3F,CAAC,EAnCQZ,EAoCc,SAAC5U,GAAO,OAAK,SAACe,GAKjCA,EAJuB,CAAE7B,KAAMuW,EAAAA,GAAsBC,kCAMrDX,EAAAA,GAA2BY,sBAAsB3V,GAC5CoB,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAMuW,EAAAA,GAAsBG,gCAAiC9U,QAAS4R,EAAM,CAQzFnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAMuW,EAAAA,GAAsBI,gCAAiC/U,QAASU,EAAO,CAU3FqR,CAAQrR,GACrB,IACFE,SAAQ,kBAAMX,EAAS,CAAE7B,KAAMuW,EAAAA,GAAsBK,+BAAgC,GAC/F,CAAC,E,UCgMCC,EAAqB,SAAHC,GAA+E,IAAzErX,EAAIqX,EAAJrX,KAAMD,EAAMsX,EAANtX,OAAQqC,EAAQiV,EAARjV,SAClCJ,GAAMvB,EAAAA,EAAAA,UACN6W,GAAiB7W,EAAAA,EAAAA,UACvB8W,GAA0CvT,EAAAA,EAAAA,UAAc,IAAGwT,GAAAtT,EAAAA,EAAAA,GAAAqT,EAAA,GAC3DE,GADoBD,EAAA,GAAkBA,EAAA,IACGxT,EAAAA,EAAAA,UAAc,KAAG0T,GAAAxT,EAAAA,EAAAA,GAAAuT,EAAA,GAAnDE,EAAaD,EAAA,GAAEE,EAAeF,EAAA,GACrCG,GAAkC7T,EAAAA,EAAAA,UAAS,CACvC8T,cAAc,EACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,aAAa,IACfC,GAAAhU,EAAAA,EAAAA,GAAA2T,EAAA,GALKrT,EAAS0T,EAAA,GAAEzT,EAAYyT,EAAA,GAO9BlS,GAKIL,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BC,MAAOD,EAAMC,MAAMnD,KACnBoD,QAASF,EAAMC,MAAMC,QACrBjD,MAAO+C,EAAMC,MAAMhD,MACnBsV,qBAAsBvS,EAAMyJ,KAAK8I,qBAAqBzV,KACzD,IATGmD,EAAKG,EAALH,MACAC,EAAOE,EAAPF,QAEAqS,GADKnS,EAALnD,MACoBmD,EAApBmS,sBAiCEC,EAAgB,SAACC,GACnBA,EAAEC,iBACF,IAAAC,EAIIjB,EAAehQ,QAHfyQ,EAAqBQ,EAArBR,sBACAC,EAAmBO,EAAnBP,oBACAQ,EAAaD,EAAbC,cAEJC,QAAQC,IAAIF,EAAcG,OAC1B,IAAMC,EAAa,CACf,aAAgBjB,EAChB,sBAAyBI,EAAsBY,MAC/C,oBAAuBX,EAAoBW,MAC3C,YAAeH,EAAcG,QArCpB,SAAC9M,GACd,IAAIQ,GAAc,EACZxJ,EAAa,CACfiV,cAAc,EACdC,uBAAuB,EACvBC,qBAAqB,EACrBC,aAAa,GAEjB,IAAK,IAAI3L,KAAOT,EACPA,EAAQS,IAAyB,KAAjBT,EAAQS,KACzBzJ,EAAMyJ,IAAO,GAEsB,IAAnCT,EAAsB,aAAEhB,SACxBhI,EAAoB,cAAI,GAGhC,IAAK,IAAI0J,KAAK1J,EACNA,EAAM0J,KACNF,GAAc,GAItB,OADA5H,EAAa5B,GACNwJ,CACX,EAgBQG,CAASoM,IACTxW,EAAS6T,EAAqD2C,GAEtE,EAEA,OACIjY,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFZ,KAAMA,EACND,OAAQA,EACR,kBAAgB,gCAChBc,UAAQ,EACRC,KAAK,KACLC,WAAW,EAAKC,SAAA,EAEhBC,EAAAA,EAAAA,KAACL,EAAAA,EAAMM,OAAM,CAACC,aAAW,EAAAH,UACrBC,EAAAA,EAAAA,KAACL,EAAAA,EAAMQ,MAAK,CAACC,GAAG,gCAA+BL,SAAC,4BAIpDC,EAAAA,EAAAA,KAAEL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAWP,UAC9BC,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAACD,UAAW2I,EAAAA,EAAO2O,gBAAgB7X,UACzCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAI,CAACtG,IAAKsV,EAAgBwB,SAAU,SAACT,GAAC,OAAKD,EAAcC,EAAE,EAACrX,SAAA,EACzDC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAAAvH,UACAC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAInH,UAAU,aAAYP,UACvCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,OAAMP,SAAA,EACjCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAG7H,UAChBC,EAAAA,EAAAA,KAAC6H,EAAAA,GAAS,CACNC,UAAWjD,EACXzE,GAAG,yBACH2H,SAAS,oBACTC,UAAQ,EACRjH,IAAKA,EACLkH,UAAU,EACVC,mBAAmB,wBACnBC,SAAU,SAACC,GACP,IAAIC,EAAkBD,EAAStB,KAAI,SAACwB,GAChC,OAAIA,EAAEE,aACKF,EAAEwP,kBAENxP,EAAEpB,QACb,IACAyP,EAAgBtO,EACpB,EACAO,QAAShE,OAGjB5E,EAAAA,EAAAA,KAAA,QAAM6I,MAAO,CAAEC,MAAO,MAAOC,YAAa,QAAShJ,UAACC,EAAAA,EAAAA,KAAA,SAAAD,SAAQwD,EAAwB,aAAI,sCAAwC,QAChIvD,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,4BAcvDC,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAAAvH,UACAC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAInH,UAAU,aAAYP,UACvCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,OAAMP,SAAA,EACjCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAG7H,UAChBC,EAAAA,EAAAA,KAACqH,EAAAA,EAAK0Q,QAAO,CAACzY,KAAK,OAAOiL,KAAK,6BAEnCvK,EAAAA,EAAAA,KAAA,QAAM6I,MAAO,CAAEC,MAAO,MAAOC,YAAa,QAAShJ,UAACC,EAAAA,EAAAA,KAAA,SAAAD,SAAQwD,EAAiC,sBAAI,uCAAyC,QAC1IvD,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,oCAIvDC,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAAAvH,UACAC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAInH,UAAU,aAAYP,UACvCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,QAAOP,SAAA,EAClCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAG7H,UAChBL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAK0Q,QAAO,CACTpQ,GAAG,SACH4C,KAAK,sBACLjK,UAAU,sBAAqBP,SAAA,EAE/BC,EAAAA,EAAAA,KAAA,UAAQ0X,MAAM,KAETR,GAAwBA,EAAqBtN,OAAS,GACvDsN,EAAqBpQ,KAAI,SAACkR,EAAUjO,GAChC,OAAO/J,EAAAA,EAAAA,KAAA,UAA4B0X,MAAOM,EAAIjY,SAAEiY,GAAG,MAAA7Q,OAAzB4C,GAC9B,UAIZ/J,EAAAA,EAAAA,KAAA,QAAM6I,MAAO,CAAEC,MAAO,MAAOC,YAAa,QAAShJ,UAACC,EAAAA,EAAAA,KAAA,SAAAD,SAAQwD,EAA+B,oBAAI,oCAAsC,QACrIvD,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,kCAIvDC,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAAAvH,UACAC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAG1H,UAChBL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,OAAMP,SAAA,EACjCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAItH,UAAU,aAAYP,UACvCC,EAAAA,EAAAA,KAACiY,EAAAA,EAAa,OAElBjY,EAAAA,EAAAA,KAAA,QAAM6I,MAAO,CAAEC,MAAO,OAAQ/I,UAACC,EAAAA,EAAAA,KAAA,SAAAD,SAAQwD,EAAuB,YAAI,4BAA8B,QAChGvD,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,0BAIvDL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACjH,UAAW2I,EAAAA,EAAOiP,cAAcnY,SAAA,EACjCC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAOxB,KAAK,SAASuJ,MAAO,CAAEqC,MAAO,QAASnL,SAAC,YAAiB,gBAO5G,EAEA,EArZ6B,WACzB,IAAMoB,GAAWgC,EAAAA,EAAAA,MACXgV,GAAO3Y,EAAAA,EAAAA,UACLkM,GAAaC,EAAAA,EAAAA,MAAbD,SAER5I,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1D4J,EAAiB1J,EAAA,GAAE2J,EAAoB3J,EAAA,GAC9CI,GAAsCL,EAAAA,EAAAA,UAAS,MAAKO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA7CwI,EAAWtI,EAAA,GAAEuI,EAAcvI,EAAA,GAClCG,GAAgCV,EAAAA,EAAAA,UAAS,QAAOW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAzCqI,EAAQpI,EAAA,GAAEqI,EAAWrI,EAAA,GAC5BG,GAAgCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAArCmI,EAAQlI,EAAA,GAAEmI,EAAWnI,EAAA,GAC5BG,GAAoClB,EAAAA,EAAAA,UAAS,GAAEmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAxCiI,EAAUhI,EAAA,GAAEiI,EAAajI,EAAA,GAChCG,GAA8CtB,EAAAA,EAAAA,WAAS,GAAMuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAAtD+T,EAAe9T,EAAA,GAAE+T,EAAkB/T,EAAA,GAC1CkI,GAA4DzJ,EAAAA,EAAAA,WAAS,GAAM0J,GAAAxJ,EAAAA,EAAAA,GAAAuJ,EAAA,GAApE8L,GAAsB7L,EAAA,GAAE8L,GAAyB9L,EAAA,GACxDG,IAAkD7J,EAAAA,EAAAA,WAAS,GAAM8J,IAAA5J,EAAAA,EAAAA,GAAA2J,GAAA,GAA1DM,GAAiBL,GAAA,GAAEM,GAAoBN,GAAA,GAC9CG,IAA8BjK,EAAAA,EAAAA,UAAc,MAAKkK,IAAAhK,EAAAA,EAAAA,GAAA+J,GAAA,GAA1C3N,GAAO4N,GAAA,GAAE/J,GAAU+J,GAAA,GAC1BG,IAAwCrK,EAAAA,EAAAA,WAAS,GAAMsK,IAAApK,EAAAA,EAAAA,GAAAmK,GAAA,GAAhDoG,GAAYnG,GAAA,GAAEoG,GAAepG,GAAA,GACpCuG,IAA4C7Q,EAAAA,EAAAA,UAAS,MAAK8Q,IAAA5Q,EAAAA,EAAAA,GAAA2Q,GAAA,GAAnDF,GAAcG,GAAA,GAAEF,GAAiBE,GAAA,GACxC2E,IAAwCzV,EAAAA,EAAAA,UAAc,IAAG0V,IAAAxV,EAAAA,EAAAA,GAAAuV,GAAA,GAAlDlM,GAAYmM,GAAA,GAAElM,GAAekM,GAAA,GACpCnL,IAA2EC,EAAAA,EAAAA,KAAmBC,IAAAvK,EAAAA,EAAAA,GAAAqK,GAAA,GAAzFG,GAASD,GAAA,GAAAE,GAAAF,GAAA,GAAIG,GAAUD,GAAVC,WAAYC,GAAUF,GAAVE,WAAYC,GAAaH,GAAbG,cAAeC,GAAYJ,GAAZI,aAEzDrJ,IAaIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7B+T,qBAAsB/T,EAAM8Q,oBAAoBhU,KAChDyM,WAAYvJ,EAAM8Q,oBAAoBvH,WACtCD,QAAStJ,EAAM8Q,oBAAoBxH,QACnCpJ,QAASF,EAAM8Q,oBAAoB5Q,QACnCjD,MAAO+C,EAAM8Q,oBAAoB7T,MACjC+W,YAAahU,EAAM8Q,oBAAoBkD,YACvCC,mBAAoBjU,EAAM8Q,oBAAoBmD,mBAC9CC,iBAAkBlU,EAAM8Q,oBAAoBoD,iBAC5CvK,cAAe3J,EAAM8Q,oBAAoBnH,cACzC2F,qBAAsBtP,EAAM8Q,oBAAoBxB,qBAChDC,mBAAoBvP,EAAM8Q,oBAAoBvB,mBAC9C/F,eAAgBxJ,EAAMyJ,KAAKC,gBAAgB5M,KAC9C,IAzBGiX,GAAoBjU,GAApBiU,qBACAxK,GAAUzJ,GAAVyJ,WACAD,GAAOxJ,GAAPwJ,QACApJ,GAAOJ,GAAPI,QAGA+T,IAFKnU,GAAL7C,MACW6C,GAAXkU,YACkBlU,GAAlBmU,oBACAC,GAAgBpU,GAAhBoU,iBAEA5E,IADaxP,GAAb6J,cACoB7J,GAApBwP,sBACAC,GAAkBzP,GAAlByP,mBACA/F,GAAc1J,GAAd0J,gBAgBJ1O,EAAAA,EAAAA,YAAU,WACNkO,GAAW,CACP3B,SAAUA,EACVE,WAAYA,EACZ0B,WAAY,KACZkB,UAAWhD,EACXiD,UAAWnD,GAEnB,GAAG,KAEHnM,EAAAA,EAAAA,YAAU,WACY,OAAdgO,IACAuB,GAAOhD,EAAUE,EAEzB,GAAG,CAACuB,GAAW7B,EAAaE,KAE5BrM,EAAAA,EAAAA,YAAU,WACN,IAAKoF,IAA8B,IAAnBoJ,GAAQrE,QAAiBuE,IAAkBA,GAAevE,OAAS,EAAI,CACnF,IAAMqE,EAAUE,GAAe5H,QAAO,SAAC0I,GACnC,GAAqB,mBAAjBA,EAAGC,UACH,OAAOD,CAEf,IACA1C,GAAgB0B,EAAQ,GAAGkG,YAC/B,MACI5H,GAAgB0B,GAExB,GAAG,CAACA,MAEJxO,EAAAA,EAAAA,YAAU,WACFmZ,KACAlN,GAAS0D,EAAAA,EAAAA,GAAc,UAAU,OAAS,oBAAqB,CAAEC,WAAY,UAAWC,aAAa,IACrGiJ,IAA0B,GAC1BvJ,GAAOhD,EAAUE,GACjB4M,YAAW,WACP3X,EAASuT,EAAAA,EAAqBC,WAClC,GAAG,MAEHkE,IAAoBnN,GAAS0D,EAAAA,EAAAA,GAAc,QAAQ,UAAY,oBAAqB,CAAEC,WAAY,QAASC,aAAa,IACxH2E,KACAvI,GAAS0D,EAAAA,EAAAA,GAAc,UAAU,UAAY,sBAAuB,CAAEC,WAAY,UAAWC,aAAa,IAC1GnC,IAAqB,GACrB6B,GAAOhD,EAAUE,GACjB/K,EAASuT,EAAAA,EAAqBC,aAE9BT,IAAsBxI,GAAS0D,EAAAA,EAAAA,GAAc,QAAQ,WAAa,sBAAuB,CAAEC,WAAY,QAASC,aAAa,GACrI,GAAG,CAACsJ,GACAC,GACA5E,GACAC,KAEJ,IAAMlF,GAAS,SACXhD,EACAE,GAEAuB,IAASoC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQpC,IAAS,IAAEzB,SAAAA,EAAUE,WAAAA,EAAY6C,UAAWnD,EAAakD,UAAWhD,IACrF3K,EAAS6T,EAAwDvH,KACjEd,GAAqB,EACzB,EAqBMyH,GAAe,eAAAvV,GAAAmR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0D,OAAlG9E,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,mBAAqB,IAAK,CAAEC,WAAY,OAAQC,aAAa,IAAOgB,EAAAE,KAAA,GAC5F6D,EAAAA,EAAAA,IAAmBjE,GAAS,OAClCjP,EAASmT,EAAAA,EAA6BC,oBAAoB,CAACnE,EAASoE,cACpE9I,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,sBAAwB,IAAK,CAAEC,WAAY,UAAWC,aAAa,IAAO,wBAAAgB,EAAAI,OAAA,GAAAP,EAAA,KAC3G,gBANoBQ,GAAA,OAAA9R,EAAAsH,MAAA,KAAAyK,UAAA,KASrB,OAAQlR,EAAAA,EAAAA,MAAAmR,EAAAA,SAAA,CAAA9Q,SAAA,EACJC,EAAAA,EAAAA,KAAA,KAAG+Y,KAAK,GAAGhY,IAAKoX,EAAMa,OAAO,YAC7BtZ,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAG7H,SAAA,EACRL,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAAAvH,SAAA,EACAC,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAa,CACVlO,gBAAiB,sBACjBqG,OAAQA,EAAAA,EACRyD,kBAAmBA,EACnBC,qBAAsB,SAACoE,GAAS,OAAKpE,EAAqBoE,EAAK,EAC/DC,eAAgBpD,GAChBH,UAAWA,GACXwD,kBAAmBpD,GACnBqD,iBAAkBpD,MAEtB9N,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,EAAGG,GAAI,EAAE7H,UACdC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAO+H,MAAO,CAAEqC,MAAO,QAAUlK,QAAS,kBAAMqX,GAAmB,EAAK,EAACtY,SAAC,2BAE9FC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,EAAGG,GAAI,EAAE7H,UACdC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAO+H,MAAO,CAAEqC,MAAO,QAAUlK,QAAS,kBAAMuX,IAA0B,EAAK,EAACxY,SAAC,+BAGzGC,EAAAA,EAAAA,KAAA,aAEJA,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAAAxH,UACAC,EAAAA,EAAAA,KAACmR,EAAAA,EAAc,CACX1P,KAAMiX,GACN5Q,UAAWjD,GACXiC,IAAK,CACD,aAAgB,qBAChB,sBAAyB,0BACzB,qBAAwB,yBACxB,oBAAuB,wBACvB,YAAe,iBACf,QAAW,WACX,gBAAmB,mBACnB,SAAY,YACZ,cAAiB,kBAErBoH,WAAYA,GACZkD,YAAa,GACbC,eAAgB,WAAQ,EACxBE,gBAAiB,GACjB3F,YAAa,SAAC4F,GAAW,OAAK3F,EAAe2F,EAAO,EACpD1F,SAAU,SAACxM,GAAS,OAAKyM,EAAYzM,EAAK,EAC1CmS,YAAavF,EACbwF,eAAgBvF,EAChBvJ,gBAAiB,sBACjB+O,eAAgB,CAAC,EACjBC,eAAgBtF,GAChBuF,aACI,CACIC,SAAU,SAACrQ,GAAS,OAAK2S,GAAgB3S,EAAK,EAC9CuQ,OAAQ,SAACvQ,GAAS,OAjElCyB,GAiEqDzB,QAhErD0L,IAAqB,EAgEqC,EAC1C0H,aAAc,SAACpT,GACXgS,IAAgB,GAChBE,GAAkBlS,EACtB,GAGRwQ,mBAAoB,SAChBjG,EAAkBE,GAAkB,OAnF3B,SAACF,EAAkBE,GACxCD,EAAYD,GACZgD,GAAOhD,EAAUE,EACrB,CAiFiBgG,CAAiBlG,EAAUE,EAAW,MAI/CoM,KACGtY,EAAAA,EAAAA,KAACmW,EAAkB,CAACpX,KAAMuZ,GAAwBxZ,OAAQ,kBAAMyZ,IAA0B,EAAM,EAAEpX,SAAUA,IAG/GiX,IACGpY,EAAAA,EAAAA,KAACqS,EAAAA,EAAc,CAACtT,KAAMqZ,EAAiBtZ,OAAQ,kBAAMuZ,GAAmB,EAAM,EAAE/F,UAAW,IAAKrJ,OAAQA,EAAAA,EAAQrG,gBAAgB,sBAAsBoM,OAAQA,KAGjK9B,KACGlN,EAAAA,EAAAA,KAACmS,EAAAA,EAAa,CACbpT,KAAMmO,GACNpO,OAAQ,kBAAMqO,IAAqB,EAAM,EACzCnO,cAAe,WA9FvBmC,EAAS6T,EAAuD3V,GAAQe,IA8F9B,EAClCf,QAASA,GACTC,KAAK,wBAITkU,KACAxT,EAAAA,EAAAA,KAAC8U,EAAAA,EAAY,CAAC/V,KAAMyU,GAAc1U,OAAQ,kBAAM2U,IAAgB,EAAM,EAAEsB,aAAcrB,OAIlG,ECzGA,EA7HwB,WACpB,IAAMvS,GAAWgC,EAAAA,EAAAA,MACTuI,GAAaC,EAAAA,EAAAA,MAAbD,SACFyM,GAAO3Y,EAAAA,EAAAA,UACPgM,GAAUC,EAAAA,EAAAA,MAChB3I,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACjEM,GADwBJ,EAAA,GAAsBA,EAAA,IACRD,EAAAA,EAAAA,UAAS,0BAAwBO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAnDyI,GAAFvI,EAAA,GAAgBA,EAAA,IAClCG,GAAgCV,EAAAA,EAAAA,UAAS,OAAMW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA9BsI,GAAFrI,EAAA,GAAaA,EAAA,IAC5BG,GAAkCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAvCoV,EAASnV,EAAA,GAAEoV,EAAYpV,EAAA,GAC9BG,GAAsClB,EAAAA,EAAAA,UAAS,GAAEmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA1CwN,EAAWvN,EAAA,GAAEwN,EAAcxN,EAAA,GAClCG,GAA4CtB,EAAAA,EAAAA,WAAS,GAAMuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAE3DI,GAFqBH,EAAA,GAAmBA,EAAA,IAapCI,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BlD,KAAMkD,EAAMwU,gBAAgB1X,KAC5ByM,WAAYvJ,EAAMwU,gBAAgBjL,WAClCtM,MAAO+C,EAAMwU,gBAAgBvX,MAC7BiD,QAASF,EAAMwU,gBAAgBtU,QAC/BuU,aAAczU,EAAMwU,gBAAgBC,aACpCC,oBAAqB1U,EAAMwU,gBAAgBE,oBAC3CC,kBAAmB3U,EAAMwU,gBAAgBG,kBACzCC,sBAAuB5U,EAAMwU,gBAAgBI,sBAC7CC,6BAA8B7U,EAAMwU,gBAAgBK,6BACpDC,2BAA4B9U,EAAMwU,gBAAgBM,2BACrD,KArBGhY,EAAIgD,EAAJhD,KACAyM,EAAUzJ,EAAVyJ,WAEArJ,GADKJ,EAAL7C,MACO6C,EAAPI,SAKA2U,GAJY/U,EAAZ2U,aACmB3U,EAAnB4U,oBACiB5U,EAAjB6U,kBACqB7U,EAArB8U,sBAC4B9U,EAA5B+U,8BACAC,EAA0BhV,EAA1BgV,4BAcJha,EAAAA,EAAAA,YAAU,WACNuP,EAAOiK,EAAWxH,EACtB,GAAG,KAEHhS,EAAAA,EAAAA,YAAU,WACF+Z,IACA9N,GAAS0D,EAAAA,EAAAA,GAAc,UAAU,OAAS,oBAAqB,CAAEC,WAAY,UAAWC,aAAa,IACrGN,EAAOiK,EAAWxH,GAK1B,GAAG,CAAC+H,EAA8BC,IAElC,IAOMzK,EAAS,WAA2C,IAA1ChD,EAAQ4E,UAAAhH,OAAA,QAAA8P,IAAA9I,UAAA,GAAAA,UAAA,GAAGqI,EAAW/M,EAAU0E,UAAAhH,OAAA,QAAA8P,IAAA9I,UAAA,GAAAA,UAAA,GAAG,EAC/CzP,EAASmT,EAAAA,EAA6BqF,mBAAmB,CACrD3N,SAAAA,EACAE,WAAAA,IAER,EAYMkI,EAAe,eAAAvV,GAAAmR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAE0D,OAAlG9E,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,mBAAqB,IAAK,CAAEC,WAAY,OAAQC,aAAa,IAAOgB,EAAAE,KAAA,GAC5F6D,EAAAA,EAAAA,IAAmBjE,GAAS,OAClC1E,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,sBAAwB,IAAK,CAAEC,WAAY,UAAWC,aAAa,IAAO,wBAAAgB,EAAAI,OAAA,GAAAP,EAAA,KAC3G,gBALoBQ,GAAA,OAAA9R,EAAAsH,MAAA,KAAAyK,UAAA,KAOrB,OAAQlR,EAAAA,EAAAA,MAAAmR,EAAAA,SAAA,CAAA9Q,SAAA,EACJC,EAAAA,EAAAA,KAAA,KAAG+Y,KAAK,GAAGhY,IAAKoX,EAAMa,OAAO,YAC7BhZ,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAAAxH,UACAC,EAAAA,EAAAA,KAACmR,EAAAA,EAAc,CACX1P,KAAMA,EACNqG,UAAWjD,EACXiC,IAAK,CACDM,aAAc,gBACdwS,aAAc,OACdC,aAAc,gBACdC,eAAgB,UAEpB5L,WAAYA,EACZkD,YAAa,CAAC,cACdC,eAAgB,SAAC5P,EAAW6P,GAAW,OA7CtB,SAAC7P,EAAW6P,GACrC9F,EAAQtF,KAAK,CACT0J,SAAU,2BACVZ,OAAO,cAAD7H,OAAgB1F,EAAKjB,aAEnC,CAwCwDmP,CAAqBlO,EAAa,EAC9E8P,gBAAiB,GACjB3F,YAAa,SAAC4F,GAAW,OAAK3F,EAAe2F,EAAO,EACpD1F,SAAU,SAACxM,GAAS,OAAKyM,EAAYzM,EAAK,EAC1CmS,YAAaA,EACbC,eAAgBA,EAChB9O,gBAAiB,kBACjB+O,eAAgB,CAAC,EACjBC,eAAgB,CACZ,eACA,eACA,eACA,kBAEJC,aACI,CACIkI,MAAO,SAACtY,GAAS,OAAK+V,QAAQC,IAAI,eAAe,EACjD3F,SAAU,SAACrQ,GAAS,OAAK2S,EAAgB3S,EAAK,EAC9CuQ,OAAQ,SAACvQ,GACLN,EAASmT,EAAAA,EAA6BiF,sBAAsB9X,EAAKrB,IACrE,GAGR6R,mBAAoB,SAChBjG,EAAkBE,GAAkB,OAlD3B,SAACF,EAAkBE,GACxCgN,EAAalN,GACbgD,EAAOhD,EAAUE,EACrB,CAgDiBgG,CAAiBlG,EAAUE,EAAW,QAG3D,E,4DCjIM8N,GAAU,CACZ,CACIC,WAAY,QACZC,OAAQ,iBAEZ,CACID,WAAY,OACZC,OAAQ,gBAEZ,CACID,WAAY,OACZC,OAAQ,iBA0IhB,GArIuB,SAAHrb,GAA4E,IAAtE4O,EAAS5O,EAAT4O,UAAW0M,EAAYtb,EAAZsb,aAC3BhZ,GAAWgC,EAAAA,EAAAA,MACXiX,GAAoB5a,EAAAA,EAAAA,UAC1BsD,GAA8BC,EAAAA,EAAAA,UAAmD,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7EuX,EAAOrX,EAAA,GAAEsX,EAAUtX,EAAA,GAE1ByB,GAUIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BC,MAAOD,EAAMC,MAAMnD,KAGnB8Y,aAAc5V,EAAM6V,MAAMC,YAAYhZ,KAGtCyV,qBAAsBvS,EAAMyJ,KAAK8I,qBAAqBzV,KAGzD,IAnBGmD,EAAKH,EAALG,MAGA2V,EAAY9V,EAAZ8V,aAGArD,EAAoBzS,EAApByS,sBAeJzX,EAAAA,EAAAA,YAAU,WACN0B,EAASuZ,EAAAA,EAAkBC,2BAC3BxZ,EAASuF,EAAAA,EAAkBC,qBAC3BxF,EAASyZ,EAAAA,EAAmBC,mBAC5BP,EAAWN,GAEf,GAAG,IAEH,IAAMc,EAAkB,SAACxb,EAAW8X,GAChC,IAAM2D,EAAehV,OAAOC,OAAO,CAAC,EAAGyH,GACvCsN,EAAazb,GAA2B,KAAnB8X,EAAE4B,OAAOtB,MAAe,KAAON,EAAE4B,OAAOtB,MAC7DyC,EAAaY,EACjB,EAEA,OACI/a,EAAAA,EAAAA,KAACqH,EAAAA,EAAI,CAACtG,IAAKqZ,EAAkBra,UACzBL,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAAAvH,SAAA,EACAL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,GAAInH,UAAU,aAAYP,SAAA,EACtCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,OAAMP,SAAA,EACjCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAItH,UAAU,aAAYP,UACvCC,EAAAA,EAAAA,KAACqH,EAAAA,EAAK0Q,QAAO,CACTpQ,GAAG,SACH4C,KAAK,kBACLjK,UAAU,sBACV6H,SAAU,SAACiP,GACP0D,EAAgB,WAAY1D,EAChC,EAAErX,SAEGsa,GAAWA,EAAQzQ,OAAS,GAC7ByQ,EAAQvT,KAAI,SAACkU,EAAajR,GACtB,OAAO/J,EAAAA,EAAAA,KAAA,UAA4B0X,MAAOsD,EAAOf,WAAWla,SAAEib,EAAOd,QAAM,MAAA/S,OAAjD4C,GAC9B,SAIZ/J,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,eAE/CL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,QAAOP,SAAA,EAClCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAItH,UAAU,aAAYP,UACvCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAK0Q,QAAO,CACTpQ,GAAG,SACH4C,KAAK,kBACLjK,UAAU,sBACV6H,SAAU,SAACiP,GACP0D,EAAgB,YAAa1D,EACjC,EAAErX,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQ0X,MAAM,GAAE3X,SAAC,mBAEZmX,GAAwBA,EAAqBtN,OAAS,GACvDsN,EAAqBpQ,KAAI,SAACkR,EAAUjO,GAChC,OAAO/J,EAAAA,EAAAA,KAAA,UAA4B0X,MAAOM,EAAIjY,SAAEiY,GAAG,MAAA7Q,OAAzB4C,GAC9B,UAIZ/J,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,qBAGnDL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,GAAInH,UAAU,aAAYP,SAAA,EACtCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,QAAOP,SAAA,EAClCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAItH,UAAU,aAAYP,UACvCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAK0Q,QAAO,CACTpQ,GAAG,SACH4C,KAAK,kBACLjK,UAAU,sBACV6H,SAAU,SAACiP,GACP0D,EAAgB,UAAW1D,EAC/B,EAAErX,SAAA,EACFC,EAAAA,EAAAA,KAAA,UAAQ0X,MAAM,GAAE3X,SAAC,iBAEZwa,GAAgBA,EAAa3Q,OAAS,GACvC2Q,EAAazT,KAAI,SAACmU,EAAclR,GAC5B,OAAO/J,EAAAA,EAAAA,KAAA,UAA4B0X,MAAOuD,EAAQC,UAAUnb,SAAEkb,EAAQE,UAAQ,MAAAhU,OAApD4C,GAC9B,UAIZ/J,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,iBAE/CL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKK,MAAK,CAACC,GAAIJ,EAAAA,EAAKjH,UAAU,QAAOP,SAAA,EAClCC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACE,GAAI,GAAIG,GAAI,GAAItH,UAAU,aAAYP,UACvCL,EAAAA,EAAAA,MAAC2H,EAAAA,EAAK0Q,QAAO,CACTpQ,GAAG,SACH4C,KAAK,kBACLjK,UAAU,sBACV6H,SAAU,SAACiP,GACP0D,EAAgB,SAAU1D,EAC9B,EAAErX,SAAA,EACFC,EAAAA,EAAAA,KAAA,UAAQ0X,MAAM,GAAE3X,SAAC,cAEZ6E,GAASA,EAAMgF,OAAS,GACzBhF,EAAMkC,KAAI,SAACE,EAAW+C,GAClB,OAAOrK,EAAAA,EAAAA,MAAA,UAA4BgY,MAAO1Q,EAAKyB,YAAY1I,SAAA,CAAEiH,EAAKuB,UAAU,IAAEvB,EAAKoU,WAAQ,MAAAjU,OAAjE4C,GAC9B,UAIZ/J,EAAAA,EAAAA,KAACqH,EAAAA,EAAK2B,MAAK,CAAC1I,UAAU,qBAAoBP,SAAC,oBAMnE,E,WCzJasb,GACG,SAACL,GAAW,OAAK,SAAC7Z,GAK1BA,EAJuB,CAAE7B,KAAMgc,EAAAA,GAAWC,oBAAqBra,QAAS,KAMxEsa,EAAAA,GAAeC,YAAYT,GACtBxZ,MACG,SAAAoD,GACIzD,EARI,SAACyD,GAAU,MAAM,CAAEtF,KAAMgc,EAAAA,GAAWI,oBAAqBxa,QAAS0D,EAAO,CAQpEjD,CAAQiD,GACrB,IACA,SAAAhD,GACIT,EAVW,CAAE7B,KAAMgc,EAAAA,GAAWK,oBAAqBza,QAAS,IAWhE,GAEZ,CAAC,E,UCLL0a,EAAAA,GAAQC,SAASC,EAAAA,GAAYtS,EAAAA,EAASuS,EAAAA,GAAQC,EAAAA,GAE9C,IAAMpT,GAAe,CACjBqT,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,GACRC,OAAQ,CACJC,QAAS,IAEbC,QAAS,CACLC,WAAY,CACRzT,MAAO,QACPuT,QAAS,EACTG,KAAM,CACFC,OAAQ,OACR5c,KAAM,OACN6c,OAAO,oDAGfC,OAAQ,CACJC,SAAU,YAMTC,GAAiB,CAC1BC,OAAQ,CAAC,YAAa,OAAQ,WAC9BC,SAAU,CACN,CACIC,MAAO,QACPvb,KAAM,GACNwb,gBAAiB,CACb,UACA,wBACA,WAEJC,YAAa,CACT,UACA,wBACA,WAEJC,YAAa,KAKZC,GAAY,CACrBN,OAAQ,CAAC,YAAa,OAAQ,WAC9BC,SAAU,CACN,CACIC,MAAO,QACPvb,KAAM,GACNwb,gBAAiB,CACb,UACA,wBACA,WAEJC,YAAa,CACT,UACA,wBACA,WAEJC,YAAa,KAwPzB,GAnP4B,SAAHte,GAAiD,IAA3Cwe,EAAQxe,EAARwe,SACrBlc,GADmDtC,EAApBqY,sBACpB/T,EAAAA,EAAAA,OACjBL,GAAgCC,EAAAA,EAAAA,UAAc,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5Cwa,EAAQta,EAAA,GAAEua,EAAWva,EAAA,GAC5BI,GAAkCL,EAAAA,EAAAA,UAAS,CACvCya,SAAU,KACVvC,QAAS,KACTwC,UAAW,KACXC,OAAQ,OACVpa,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GALKqK,EAASnK,EAAA,GAAE6W,EAAY7W,EAAA,GAM9BG,GAA0CV,EAAAA,EAAAA,UAAc,CACpD+Z,OAAQ,CAAC,YAAa,OAAQ,WAC9BC,SAAU,CACN,CACIC,MAAO,QACPvb,KAAM,GACNwb,gBAAiB,CACb,UACA,wBACA,WAEJC,YAAa,CACT,UACA,wBACA,WAEJC,YAAa,MAGvBzZ,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAnBKka,EAAaja,EAAA,GAAEka,EAAgBla,EAAA,GAoBtCG,GAAgCd,EAAAA,EAAAA,UAAc,CAC1C+Z,OAAQ,CAAC,YAAa,OAAQ,WAC9BC,SAAU,CACN,CACIC,MAAO,QACPvb,KAAM,GACNwb,gBAAiB,CACb,UACA,wBACA,WAEJC,YAAa,CACT,UACA,wBACA,WAEJC,YAAa,MAGvBrZ,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAnBKga,EAAQ/Z,EAAA,GAAEga,EAAWha,EAAA,GAqB5BW,GAQIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7BoZ,iBAAkBpZ,EAAMqZ,QAAQD,iBAChCE,YAAatZ,EAAMqZ,QAAQC,YAC3BC,UAAWvZ,EAAMqZ,QAAQE,UACzBC,YAAaxZ,EAAMqZ,QAAQG,YAC3BC,eAAgBzZ,EAAMqZ,QAAQI,eAC9BC,aAAc1Z,EAAMqZ,QAAQK,aAC5B1J,SAAUhQ,EAAMqZ,QAAQrJ,SAC3B,IAfGoJ,EAAgBtZ,EAAhBsZ,iBACAE,EAAWxZ,EAAXwZ,YACAC,EAASzZ,EAATyZ,UACAC,EAAW1Z,EAAX0Z,YACAC,EAAc3Z,EAAd2Z,eACAC,EAAY5Z,EAAZ4Z,aACA1J,EAAQlQ,EAARkQ,UAWJlV,EAAAA,EAAAA,YAAU,WACN,GAAyC,OAArC6e,KAAKC,UAAUR,GAA4B,QACpCA,EAAiBS,MACxB,IACIC,EAAS1Y,OAAO0Y,OAAOV,GACrBW,EAAyB3Y,OAAOC,OAAO,CAAC,EAAG6W,IACjD6B,EAAkB5B,OAHL,CAAC,YAAa,OAAQ,WAInC4B,EAAkB3B,SAAS,GAAGtb,KAAOgd,EACrCb,EAAiBc,EACrB,CACA,GAAoC,OAAhCJ,KAAKC,UAAUN,GAAuB,QAC/BA,EAAYO,MACnB,IACIC,EAAS1Y,OAAO0Y,OAAOR,GACrBU,EAAoB5Y,OAAOC,OAAO,CAAC,EAAGoX,IAC5CuB,EAAa7B,OAHA,CAAC,YAAa,OAAQ,WAInC6B,EAAa5B,SAAS,GAAGtb,KAAOgd,EAChCX,EAAYa,EAChB,CACJ,GAAG,CAACZ,EAAkBE,KAEtBxe,EAAAA,EAAAA,YAAU,WACN8d,EAAYqB,EAAAA,GAAYC,cAC5B,GAAG,KAEHpf,EAAAA,EAAAA,YAAU,WACN0B,EAASuT,EAAAA,EAAqBoK,eAAerR,IACzCA,EAAU+P,UACVrc,EAASka,GAAgC5N,EAAU+P,UAG3D,GAAG,CAAC/P,KAEJhO,EAAAA,EAAAA,YAAU,WACFkV,IACAmJ,EAAY,CACRhB,OAAQ,CAAC,YAAa,OAAQ,WAC9BC,SAAU,CACN,CACIC,MAAO,QACPvb,KAAM,GACNwb,gBAAiB,CACb,UACA,wBACA,WAEJC,YAAa,CACT,UACA,wBACA,WAEJC,YAAa,MAIzBS,EAAiB,CACbd,OAAQ,CAAC,YAAa,OAAQ,WAC9BC,SAAU,CACN,CACIC,MAAO,QACPvb,KAAM,GACNwb,gBAAiB,CACb,UACA,wBACA,WAEJC,YAAa,CACT,UACA,wBACA,WAEJC,YAAa,MAIzBhc,EAASuT,EAAAA,EAAqBoK,eAAe,CAAC,IAEtD,GAAG,CAACnK,IAEJ,IAAMoK,GAAgBC,EAAAA,EAAAA,UAAQ,WAC1B,OAAOhf,EAAAA,EAAAA,KAACif,EAAAA,GAAQ,CAACxd,KAAMkc,EAAe/U,QAASA,GAASsW,QAAM,GAClE,GAAG,CAACvB,IAEEwB,GAAWH,EAAAA,EAAAA,UAAQ,WACrB,OAAOhf,EAAAA,EAAAA,KAACif,EAAAA,GAAQ,CAACxd,KAAMoc,EAAUjV,QAASA,GAASsW,QAAM,GAC7D,GAAG,CAACrB,IAGEuB,EAAe,SAAC3d,GAClB,OAAKA,EAAK4d,WAAa5d,EAAK6d,KAAO7d,EAAK8d,UAAa,CAKzD,EAEA,OACI7f,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAW2I,EAAAA,EAAOuW,uBAC3B3W,MAAO,CACHsU,YAAaE,EAAW,IAAM,MAC9BoC,WAAYpC,EAAW,UAAY,SACrCtd,SAAA,EACFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC0f,GAAc,CAACjS,UAAWA,EAAW0M,aAAcA,KACpDna,EAAAA,EAAAA,KAAA,UACAN,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAACuB,MAAO,CAAE8W,UAAW,QAASC,UAAW,SAAU7f,SAAA,EACnDL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,EAAGtH,UAAW2I,EAAAA,EAAO4W,gBAAgB9f,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,SAAkB,WAAbud,EAAwB,gBAAkB,uBAEzCe,GAAgBD,IAAqBF,GAAaC,IACpDne,EAAAA,EAAAA,KAAC2J,GAAAA,IAAY,CAAC9J,KAAM,GAAIS,UAAS,WAAA6G,OAAa8B,EAAAA,EAAOS,oBAIrD1J,EAAAA,EAAAA,KAAA,OAAK6I,MAAO,CACRiX,QAAS,OACTC,WAAyB,WAAbzC,GAA0B8B,EAAarB,GAA4B,GAAR,MACvEiC,OAAQ,MACRC,eAAgB,UAClBlgB,SAEmB,WAAbud,GACItd,EAAAA,EAAAA,KAAA6Q,EAAAA,SAAA,CAAA9Q,UAESqe,IACAgB,EAAarB,IAAoB/d,EAAAA,EAAAA,KAACkgB,GAAAA,EAAQ,IAAMnB,MAIzD/e,EAAAA,EAAAA,KAAA6Q,EAAAA,SAAA,CAAA9Q,UAESoe,IACAiB,EAAanB,IAAeje,EAAAA,EAAAA,KAACkgB,GAAAA,EAAQ,IAAMf,WAOxEzf,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,EAAGtH,UAAW2I,EAAAA,EAAO4W,gBAAgB9f,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,SAAkB,WAAbud,EAAwB,oBAAsB,mBAE7Ce,GAAgBD,IAAqBF,GAAaC,IACpDne,EAAAA,EAAAA,KAAC2J,GAAAA,IAAY,CAAC9J,KAAM,GAAIS,UAAS,WAAA6G,OAAa8B,EAAAA,EAAOS,oBAEzD1J,EAAAA,EAAAA,KAAA,OAAK6I,MAAO,CACRiX,QAAS,OACTC,WAAyB,WAAbzC,GAA0B8B,EAAanB,GAAuB,GAAR,MAClE+B,OAAQ,MACRC,eAAgB,UAClBlgB,SAEmB,WAAbud,GACItd,EAAAA,EAAAA,KAAA6Q,EAAAA,SAAA,CAAA9Q,UAESoe,IACAiB,EAAanB,IAAeje,EAAAA,EAAAA,KAACkgB,GAAAA,EAAQ,IAAMf,MAIpDnf,EAAAA,EAAAA,KAAA6Q,EAAAA,SAAA,CAAA9Q,UAESqe,IACAgB,EAAarB,IAAoB/d,EAAAA,EAAAA,KAACkgB,GAAAA,EAAQ,IAAMnB,eASzF,E,uDCzNA,GA9FyB,SAAHlgB,GAA2B,IAArBwe,EAAQxe,EAARwe,SAClBlc,GAAWgC,EAAAA,EAAAA,MACXqI,GAAUC,EAAAA,EAAAA,MAEhB3I,GAAkCC,EAAAA,EAAAA,UAAS,CACvCya,SAAU,KACVvC,QAAS,KACTwC,UAAW,KACXC,OAAQ,OACV1a,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GALK2K,EAASzK,EAAA,GAAEmX,EAAYnX,EAAA,GAO9ByB,GAIIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7Bwb,iBAAkBxb,EAAMqZ,QAAQmC,iBAChCC,gBAAiBzb,EAAMqZ,QAAQoC,gBAC/BC,cAAe1b,EAAMqZ,QAAQqC,cAChC,IAPGF,EAAgB1b,EAAhB0b,iBACAC,EAAe3b,EAAf2b,gBACAC,EAAa5b,EAAb4b,eAOJ5gB,EAAAA,EAAAA,YAAU,WACN,OAAO,WACH0B,EAASuT,EAAAA,EAAqB4L,uBAClC,CACJ,GAAG,KAEH7gB,EAAAA,EAAAA,YAAU,WACN0B,EAASuT,EAAAA,EAAqB6L,oBAAoB9S,GACtD,GAAG,CAACA,IAWJ,OACI/N,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAW2I,EAAAA,EAAOuW,uBAC3B3W,MAAO,CACHsU,YAAaE,EAAW,IAAM,MAC9BoC,WAAYpC,EAAW,UAAY,SACrCtd,SAAA,EACFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC0f,GAAc,CAACjS,UAAWA,EAAW0M,aAAcA,KACpDna,EAAAA,EAAAA,KAAA,SACCqgB,IACGrgB,EAAAA,EAAAA,KAACmJ,GAAAA,EAAc,CACXC,UAAU,QACVC,MAAO,CAAEtK,KAAM,IAAKuK,KAAM,KAC1BC,SACIvJ,EAAAA,EAAAA,KAACwJ,GAAAA,EAAO,CAACpJ,GAAE,gBAAkBL,SAAC,sBAGjCA,UAEDC,EAAAA,EAAAA,KAACyJ,GAAAA,IAAa,CAAC5J,KAAM,GAAIS,UAAW2I,EAAAA,EAAOS,qBAGnDhK,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAS,cAAA6G,OAAgB8B,EAAAA,EAAOuX,0BAA2BzgB,SAAA,EAE/DsgB,GAAiBD,IAClBpgB,EAAAA,EAAAA,KAACygB,GAAAA,EAAe,CAACC,QAAS,KAIzBL,IAAkBD,GAA+C,IAA5BD,EAAiBvW,SACvD5J,EAAAA,EAAAA,KAACkgB,GAAAA,EAAQ,KAIRE,GAAmBD,GAAoBA,EAAiBvW,OAAS,GAC/DuW,EAAiBrZ,KAAI,SAACmI,EAASlF,GAE9B,OACIrK,EAAAA,EAAAA,MAAA,OAAyBY,UAAS,GAAA6G,OAAK8B,EAAAA,EAAO0X,oBAAqB5gB,SAAA,EAC/DC,EAAAA,EAAAA,KAAA,KAAGM,UAAW2I,EAAAA,EAAO2X,cAAc7gB,UAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAIkP,EAAG4R,WAC3C7gB,EAAAA,EAAAA,KAAC8gB,GAAAA,EAAW,CAACxgB,UAAW2I,EAAAA,EAAO8X,YAAaC,IAAK/R,EAAGgS,WAAYjE,MAAK,GAAA7V,OAAK8H,EAAGgS,WAAU,SACvFvhB,EAAAA,EAAAA,MAAA,KAAGY,UAAW2I,EAAAA,EAAOiY,aAAanhB,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMM,UAAW2I,EAAAA,EAAOkY,UAAWngB,QAAS,kBAnDlF,SAACS,GACtB,IAAI2f,GAAavR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQpC,GAAchM,GACjC4f,EAAS,IAAIC,gBAAgBF,GAAeG,WAClD/V,EAAQtF,KAAK,CACT0J,SAAU,gCACVZ,OAAQqS,GAEhB,CA4CiHG,CAAiBvS,EAAG,EAAClP,SAAEkP,EAAGwS,WAAgB,YAAQzhB,EAAAA,EAAAA,KAAA,KAAAD,SAAIkP,EAAGuP,QAAU,kBAAcxe,EAAAA,EAAAA,KAAA,KAAAD,SAAIkP,EAAGxO,mBAC7KT,EAAAA,EAAAA,KAAA,WAAM,MAAAmH,OAJM4C,GAQxB,SAKpB,ECjGa2X,GACS,kBAAM,SAACvgB,GAKrBA,EAJuB,CAAE7B,KAAMqiB,EAAAA,GAAiBC,yBAA0B1gB,QAAS,KAMnF2gB,EAAAA,GAAoBF,mBACfngB,MACG,SAAAC,GACIN,EARI,SAACM,GAAS,MAAM,CAAEnC,KAAMqiB,EAAAA,GAAiBG,yBAA0B5gB,QAASO,EAAM,CAQ7EE,CAAQF,GACrB,IACA,SAAAG,GACIT,EAVW,CAAE7B,KAAMqiB,EAAAA,GAAiBI,yBAA0B7gB,QAAS,IAW3E,GAEZ,CAAC,EAjBQwgB,GAkBa,kBAAM,SAACvgB,GAKzBA,EAJuB,CAAE7B,KAAM0iB,EAAAA,GAAqBC,8BAA+B/gB,QAAS,KAM5F2gB,EAAAA,GAAoBG,uBACfxgB,MACG,SAAAC,GACIN,EARI,SAACM,GAAS,MAAM,CAAEnC,KAAM0iB,EAAAA,GAAqBE,8BAA+BhhB,QAASO,EAAM,CAQtFE,CAAQF,GACrB,IACA,SAAAG,GACIT,EAVW,CAAE7B,KAAM0iB,EAAAA,GAAqBG,8BAA+BjhB,QAAS,IAWpF,GAEZ,CAAC,EAlCQwgB,GAmCQ,SAACU,GAAqB,OAAK,SAACjhB,GAKzCA,EAJuB,CAAE7B,KAAM+iB,EAAAA,GAAoBC,4BAA6BphB,QAAS,KAMzF2gB,EAAAA,GAAoBU,gBAAgBH,GAC/B5gB,MACG,SAAAC,GACIN,EARI,SAACM,GAAS,MAAM,CAAEnC,KAAM+iB,EAAAA,GAAoBG,4BAA6BthB,QAASO,EAAM,CAQnFE,CAAQF,GACrB,IACA,SAAAG,GACIT,EAVW,CAAE7B,KAAM+iB,EAAAA,GAAoBI,4BAA6BvhB,QAAS,IAWjF,IAEHY,SAAQ,WACLX,EAAS,CAAE7B,KAAM+iB,EAAAA,GAAoBK,2BACzC,GACR,CAAC,EC3DQC,GACC,kBAAM,SAACxhB,GAKbA,EAJuB,CAAE7B,KAAMsjB,EAAAA,GAASC,kBAAmB3hB,QAAS,KAMpE4hB,EAAAA,GAAeC,WACVvhB,MACG,SAAAoD,GACIzD,EARI,SAACyD,GAAU,MAAM,CAAEtF,KAAMsjB,EAAAA,GAASI,kBAAmB9hB,QAAS0D,EAAO,CAQhEjD,CAAQiD,GACrB,IACA,SAAAhD,GACIT,EAVW,CAAE7B,KAAMsjB,EAAAA,GAASK,kBAAmB/hB,QAAS,IAW5D,GAEZ,CAAC,ECqFL,GAhGqB,SAAHrC,GAAsD,IAAhDE,EAAIF,EAAJE,KAAMD,EAAMD,EAANC,OACpBqC,GAAWgC,EAAAA,EAAAA,MAEjBsB,GAUIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7Bue,cAAeve,EAAMwe,aAAaD,cAAczhB,KAChDG,MAAO+C,EAAMwe,aAAaD,cAActhB,MACxCiD,QAASF,EAAMwe,aAAaD,cAAcre,QAC1Cue,iBAAkBze,EAAMwe,aAAaC,iBAAiB3hB,KACtD4hB,UAAW1e,EAAMwe,aAAaC,iBAAiBxhB,MAC/C0hB,YAAa3e,EAAMwe,aAAaC,iBAAiBve,QACjD0e,uBAAwB5e,EAAMwe,aAAaK,gBAAgB7hB,QAC3D8hB,SAAU9e,EAAMwe,aAAaK,gBAAgB5hB,MAC7C8hB,WAAY/e,EAAMwe,aAAaK,gBAAgB3e,QAClD,IAnBGqe,EAAaze,EAAbye,cAGAE,GAFK3e,EAAL7C,MACO6C,EAAPI,QACgBJ,EAAhB2e,kBAGAG,GAFS9e,EAAT4e,UACW5e,EAAX6e,YACsB7e,EAAtB8e,wBACAE,EAAQhf,EAARgf,SACAC,EAAUjf,EAAVif,YAaJjkB,EAAAA,EAAAA,YAAU,WACF8jB,IACAI,IACAxiB,EAASwhB,MAEjB,GAAG,CAACY,KAEJ9jB,EAAAA,EAAAA,YAAU,WACNkkB,GACJ,GAAG,IAEH,IAAMA,EAAsC,WACxCxiB,EAASugB,MACTvgB,EAASugB,KACb,EAOA,OACI1hB,EAAAA,EAAAA,KAACL,EAAAA,EAAK,CACFZ,KAAMA,EACND,OAAQA,EACR,kBAAgB,gCAChBc,UAAQ,EACRC,KAAK,KACLS,UAAU,qBACVR,WAAW,EAAKC,UAEhBC,EAAAA,EAAAA,KAACL,EAAAA,EAAMU,KAAI,CAACC,UAAU,YAAYuI,MAAO,CAAEqC,MAAO,QAASnL,UACvDC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYP,UACvBC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWP,UACtBC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,sBAAqBP,SAE5BmjB,GAAiBA,EAActZ,OAAS,GAAKsZ,EAAcpc,KAAI,SAACqc,EAAmBpZ,GAC/E,OACIrK,EAAAA,EAAAA,MAAA,OAAKY,UAAU,eAAcP,SAAA,CACU,OAAlCojB,EAAaf,mBAA6BpiB,EAAAA,EAAAA,KAAA,OAAKoK,IAAI,mDAAmDC,IAAI,GAAG/J,UAAU,gBACrF,OAAlC6iB,EAAaf,mBAA6BpiB,EAAAA,EAAAA,KAAA,OAAKoK,IAAI,6CAA6CC,IAAI,GAAG/J,UAAU,gBAC/E,OAAlC6iB,EAAaf,mBAA6BpiB,EAAAA,EAAAA,KAAA,OAAKoK,IAAI,kDAAkDC,IAAI,GAAG/J,UAAU,iBACvHN,EAAAA,EAAAA,KAAA,MAAIM,UAAU,iBAAgBP,SAAc,OAAZojB,QAAY,IAAZA,OAAY,EAAZA,EAAcS,YAAYC,QAAQ,OAAQ,OAC1E7jB,EAAAA,EAAAA,KAAA,MAAIM,UAAU,mBAAkBP,UAC5BC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,wBAAuBP,SAAEojB,EAAaW,uBAGnDL,GAAYC,IACb1jB,EAAAA,EAAAA,KAAA,KAAGM,UAAU,iBAAgBP,UAACC,EAAAA,EAAAA,KAAC2J,GAAAA,IAAY,CAAC9J,KAAM,GAAIS,UAAS,WAAA6G,OAAa8B,EAAAA,EAAOS,sBAGlFga,GAAcN,EAAiBhB,mBAAqBe,EAAaf,mBAC/DpiB,EAAAA,EAAAA,KAAA,KAAGM,UAAU,6BAA4BP,SAAC,gBAG5C2jB,GAAcN,EAAiBhB,mBAAqBe,EAAaf,mBAC/DpiB,EAAAA,EAAAA,KAAA,KAAGM,UAAU,iBAAiBU,QAAS,kBAxC1D+iB,EAwCmFZ,EAAaf,sBAvCxHjhB,EAASugB,GAA0CqC,IAD5B,IAACA,CAwCiH,EAAChkB,SAAC,gBAAa,OAAAoH,OAlB9E4C,GAsBlD,aAShC,ECvCA,GAvDc,SAAHlL,GAA2B,IAArBwe,EAAQxe,EAARwe,SACPlc,GAAWgC,EAAAA,EAAAA,MACjBL,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDkhB,EAAgBhhB,EAAA,GAAEihB,EAAmBjhB,EAAA,GAE5CyB,GAOIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7Buf,KAAMvf,EAAMwf,MAAMD,KAClBjD,WAAYtc,EAAMwf,MAAMlD,WACxBzC,MAAO7Z,EAAMwf,MAAM3F,MACnB4F,cAAezf,EAAMwf,MAAMC,cAC3Bvf,QAASF,EAAMwf,MAAMtf,QACrBjD,MAAO+C,EAAMwf,MAAMviB,MACtB,IAbGsiB,EAAIzf,EAAJyf,KACAjD,EAAUxc,EAAVwc,WACAzC,EAAK/Z,EAAL+Z,MACA4F,EAAa3f,EAAb2f,cACAvf,EAAOJ,EAAPI,QACAjD,EAAK6C,EAAL7C,MAcJ,OAJAnC,EAAAA,EAAAA,YAAU,WACN0B,EAASwhB,KACb,GAAG,KAGCjjB,EAAAA,EAAAA,MAAAmR,EAAAA,SAAA,CAAA9Q,SAAA,EACIL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACjH,UAAW2I,EAAAA,EAAOuW,uBACnB3W,MAAO,CACHsU,YAAaE,EAAW,IAAM,MAC9BoC,WAAYpC,EAAW,UAAY,SACrCtd,SAAA,EACFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,UAEK4B,GAASiD,IACV7E,EAAAA,EAAAA,KAACygB,GAAAA,EAAe,CAACC,QAAS,KAGzB9e,IAAUiD,IACX7E,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAU,aAAYP,UAC/BL,EAAAA,EAAAA,MAAA,OAAKY,UAAW2I,EAAAA,EAAO0X,mBAAmB5gB,SAAA,EACtCC,EAAAA,EAAAA,KAAC8gB,GAAAA,EAAW,CAACuD,SAAS,EAAO/jB,UAAS,GAAA6G,OAAK8B,EAAAA,EAAO8X,YAAW,KAAA5Z,OAAImd,OAAOrD,GAAc,GAAK,SAAW,GAAE,KAAKD,IAAKC,EAAYjE,MAAK,GAAA7V,OAAK8Z,EAAU,QAClJjhB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAD,UAAGL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAKmkB,EAAMK,cAAc,gBAAc/F,QAC1Cxe,EAAAA,EAAAA,KAAA,KAAAD,UAAGL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,SAAOqkB,EAAc,YAAUA,EAAgB,EAAI,IAAM,SAC/DpkB,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAOE,QAAS,kBAAMijB,GAAoB,EAAK,EAAClkB,SAAC,+BAKjFC,EAAAA,EAAAA,KAACwkB,GAAY,CAAC1lB,OAAQmlB,EAAqBllB,KAAMilB,MAG7D,E,sBCgCA,GA7EgB,SAAHnlB,GAA2B,IAArBwe,EAAQxe,EAARwe,SACP3R,GAAaC,EAAAA,EAAAA,MAAbD,SACFvK,GAAWgC,EAAAA,EAAAA,MACjBsB,GAIIC,EAAAA,EAAAA,KAAY,SAACC,GAAU,MAAM,CAC7B8f,UAAW9f,EAAM+f,QAAQjjB,KACzBG,MAAO+C,EAAM+f,QAAQ9iB,MACrBiD,QAASF,EAAM+f,QAAQ7f,QAC1B,IAPG4f,EAAShgB,EAATggB,UACA7iB,EAAK6C,EAAL7C,MACAiD,EAAOJ,EAAPI,SAOJpF,EAAAA,EAAAA,YAAU,WACN0B,EAASka,GAAgC,SAC7C,GAAG,IAeH,OACIrb,EAAAA,EAAAA,KAAA6Q,EAAAA,SAAA,CAAA9Q,UACIL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACjH,UAAW2I,EAAAA,EAAOuW,uBACnB3W,MAAO,CACHsU,YAAaE,EAAW,IAAM,MAC9BoC,WAAYpC,EAAW,UAAY,SACrCtd,SAAA,EACFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,UAEK4B,GAASiD,IACV7E,EAAAA,EAAAA,KAACygB,GAAAA,EAAe,CAACC,QAAS,KAGzB9e,IAAUiD,IACXnF,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAU,aAAYP,SAAA,EAC/BL,EAAAA,EAAAA,MAAA,OAAKY,UAAW2I,EAAAA,EAAO0X,mBAAoB9X,MAAO,CAC9C4W,WAAY,UACZpD,QAAS,OACTsI,aAAc,MACd5Z,OAAQ,EACR6Z,aAAc,QAChB7kB,SAAA,CAEM0kB,GAAaA,EAAUI,eAAiBJ,EAAUI,cAAc/d,KAAI,SAAC4d,EAAkB3a,GACnF,OAAOrK,EAAAA,EAAAA,MAAA,KAA4BmJ,MAAO,CACtCic,aAAc,kBACd7E,eAAgB,gBAChBH,QAAS,OACTzD,QAAS,QACTtR,OAAQ,GACVhL,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAAD,SAAO2kB,EAAQK,cAAmB,OAAG/kB,EAAAA,EAAAA,KAAA,QAAAD,UAAML,EAAAA,EAAAA,MAAA,KAAAK,SAAA,CAAG,KAAIukB,OAAOI,EAAQM,WAAYC,QAAQ,UAAc,WAAA9d,OAN5E4C,GAO9B,KAEJrK,EAAAA,EAAAA,MAAA,MAAImJ,MAAO,CACPoC,UAAW,QACXia,UAAW,QACbnlB,SAAA,CAAC,IAAGukB,OAAOG,EAAUU,qBAAsBF,QAAQ,UAEzDjlB,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,OAAOE,QAAS,kBApDzB,WACvB0K,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,mBAAqB,IAAK,CAAEC,WAAY,OAAQC,aAAa,IAC3F,IAAI8V,EAAkB,GAAAje,OAAMke,kFAA8B,KAAAle,OAAIke,uBAAsC,wCACpGC,EAAAA,GAAYC,IAAIH,EAAY,CAAEI,aAAc,cAAenE,OAAQ,CAAErG,OAAQ,WACxExZ,MAAK,SAACikB,GACH,IAAIC,EAAO,IAAIC,KAAK,CAACF,EAAShkB,MAAO,CAAEnC,KAAM,oBAC7CsmB,KAAOF,EAAM,cACjB,IAAG5jB,SAAQ,WACP4J,GAAS0D,EAAAA,EAAAA,GAAc,OAAO,sBAAwB,IAAK,CAAEC,WAAY,UAAWC,aAAa,GACrG,GAER,CAyC0DuW,EAAoB,EAAC9lB,SAAC,oCAMpF,ECMA,GAjFkB,SAAHlB,GAAyC,IAAnCinB,EAAQjnB,EAARinB,SACXta,GAAUC,EAAAA,EAAAA,MACVtK,GAAWgC,EAAAA,EAAAA,MACjBL,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCua,EAAQra,EAAA,GAAE+iB,EAAW/iB,EAAA,GAC5BI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGO,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3C4iB,EAAW1iB,EAAA,GAAE2iB,EAAc3iB,EAAA,IAElC7D,EAAAA,EAAAA,YAAU,WACN0B,EAASuZ,EAAAA,EAAkBwL,wBAC/B,GAAG,KAEHzmB,EAAAA,EAAAA,YAAU,WACN,IAAM0mB,EAAML,EAASlW,SAASwW,MAAM,KACpCH,EAAeE,EAAIA,EAAIvc,OAAS,GACpC,GAAG,CAACkc,IAiCJ,OACIpmB,EAAAA,EAAAA,MAAAmR,EAAAA,SAAA,CAAA9Q,SAAA,EA9BOL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAU,iBAAgBP,SAAA,EAC1CL,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAAAvH,SAAA,EACAC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACK,GAAI,GAAG7H,UAACC,EAAAA,EAAAA,KAAA,MAAI6I,MAAO,CAAEwd,WAAY,QAAStmB,SAAC,wBAChDL,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,EAAGiB,MAAO,CAAEoC,UAAW,QAASqb,aAAc,OAAQtb,OAAQ,WAAahK,QAAS,kBAAM+kB,GAAY,SAAC1I,GAAQ,OAAMA,CAAQ,GAAC,EAACtd,SAAA,EAClIsd,IAAYrd,EAAAA,EAAAA,KAACumB,EAAAA,IAAqB,CAAC1mB,KAAM,KAC1Cwd,IAAYrd,EAAAA,EAAAA,KAACwmB,EAAAA,IAAmB,CAAC3mB,KAAM,YAGhDG,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACK,GAAI,GAAItH,UAAW+c,EAAWpU,EAAAA,EAAOwd,iBAAmB,GAAI5d,MAAO,CAAE6d,UAAW,UAAW3mB,UAC5FL,EAAAA,EAAAA,MAAC4H,EAAAA,EAAG,CAACuB,MAAO,CAAE8d,SAAU,QAAS5mB,SAAA,EAC7BC,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACK,GAAI,EAAE7H,UACPC,EAAAA,EAAAA,KAAC4mB,GAAgB,CAACvJ,SAAUA,OAEhCrd,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACK,GAAI,EAAE7H,UACPC,EAAAA,EAAAA,KAAC6mB,GAAmB,CAACxJ,SAAUA,OAEnC3d,EAAAA,EAAAA,MAAC6H,EAAAA,EAAG,CAACK,GAAI,EAAE7H,SAAA,EACPC,EAAAA,EAAAA,KAAC8mB,GAAK,CAACzJ,SAAUA,KACjBrd,EAAAA,EAAAA,KAAC+mB,GAAO,CAAC1J,SAAUA,gBAgB/Brd,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACjH,UAAU,aAAYP,UACvBL,EAAAA,EAAAA,MAACsnB,EAAAA,EAAI,CACDC,UAAWjB,EACX5lB,GAAG,mBACH8mB,MAAI,EACJ5mB,UAAU,OACV6mB,SAjBK,SAAC/P,GAClB5L,EAAQtF,KAAK,CACT0J,SAAS,cAADzI,OAAgBiQ,IAEhC,EAauCrX,SAAA,EAEvBC,EAAAA,EAAAA,KAAConB,EAAAA,EAAG,CAACC,SAAS,eAAexG,MAAM,eAAc9gB,UAC3B,iBAAhBimB,GAAkD,sBAAhBA,KAAwChmB,EAAAA,EAAAA,KAACsnB,EAAW,OAE5FtnB,EAAAA,EAAAA,KAAConB,EAAAA,EAAG,CAACC,SAAS,yBAAyBxG,MAAM,yBAAwB9gB,UAC/C,2BAAhBimB,GAA4D,gCAAhBA,KAAkDhmB,EAAAA,EAAAA,KAACunB,EAAoB,OAEzHvnB,EAAAA,EAAAA,KAAConB,EAAAA,EAAG,CAACC,SAAS,6BAA6BxG,MAAM,4BAA2B9gB,UACtD,+BAAhBimB,GAAgE,oCAAhBA,KAAsDhmB,EAAAA,EAAAA,KAACwnB,EAAwB,OAErIxnB,EAAAA,EAAAA,KAAConB,EAAAA,EAAG,CAACC,SAAS,mBAAmBxG,MAAM,mBAAkB9gB,UACnC,qBAAhBimB,GAAsD,0BAAhBA,KAA4ChmB,EAAAA,EAAAA,KAACynB,EAAe,aAS5H,C,8ECzFanT,EAA+B,CACxCqF,mBAAoB,SAAClH,GAAmB,OAAK,SAACtR,GAK1CA,EAJuB,CAAE7B,KAAMooB,EAAAA,GAAmBC,+BAMlDxO,EAAAA,GAAgBQ,mBAAmBlH,GAC9BjR,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAMooB,EAAAA,GAAmBE,6BAA8B1mB,QAAS4R,EAAM,CAQnFnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAMooB,EAAAA,GAAmBG,6BAA8B3mB,QAASU,EAAO,CAUrFqR,CAAQrR,GACrB,GAEZ,CAAC,EAED2S,oBAAqB,SAAC9B,GAAmB,OAAK,SAACtR,GAK3CA,EAJuB,CAAE7B,KAAMwoB,EAAAA,GAAoBC,gCAMnD5O,EAAAA,GAAgB5E,oBAAoB9B,GAC/BjR,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAMwoB,EAAAA,GAAoBE,8BAA+B9mB,QAAS4R,EAAM,CAQrFnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAMwoB,EAAAA,GAAoBG,8BAA+B/mB,QAASU,EAAO,CAUvFqR,CAAQrR,GACrB,IACFE,SAAQ,kBAAMX,EAAS,CAAE7B,KAAMwoB,EAAAA,GAAoBI,6BAA8B,GAC3F,CAAC,EACD3O,sBAAuB,SAACnZ,GAAO,OAAK,SAACe,GAKjCA,EAJuB,CAAE7B,KAAM6oB,EAAAA,GAAsBC,kCAMrDjP,EAAAA,GAAgBI,sBAAsBnZ,GACjCoB,MACG,SAAAsR,GACI3R,EARI,SAAC2R,GAAS,MAAM,CAAExT,KAAM6oB,EAAAA,GAAsBE,gCAAiCnnB,QAAS4R,EAAM,CAQzFnR,CAAQmR,GACrB,IACA,SAAAlR,GACIT,EAVI,SAACS,GAAU,MAAM,CAAEtC,KAAM6oB,EAAAA,GAAsBG,gCAAiCpnB,QAASU,EAAO,CAU3FqR,CAAQrR,GACrB,IACFE,SAAQ,kBAAMX,EAAS,CAAE7B,KAAM6oB,EAAAA,GAAsBI,+BAAgC,GAC/F,CAAC,E","sources":["components/modal/DeleteConfirm.tsx","store/actions/share.actions.tsx","components/modal/Share.tsx","containers/DocumentManager/MyDocuments.tsx","store/actions/receivedDocumentRequest.actions.tsx","containers/DocumentManager/ReceivedDocumentRequests.tsx","store/actions/sentDocumentRequest.actions.tsx","containers/DocumentManager/SentDocumentRequests.tsx","containers/DocumentManager/DownloadHistory.tsx","components/Common/SummaryFilters.tsx","store/actions/invoice.actions.tsx","containers/DocumentManager/DocumentRequirement.tsx","containers/DocumentManager/DocumentCoverage.tsx","store/actions/subscription.actions.tsx","store/actions/usage.actions.tsx","containers/DocumentManager/Subscription.tsx","containers/DocumentManager/Usage.tsx","containers/DocumentManager/Invoice.tsx","containers/DocumentManager/Documents.tsx","store/actions/downloadHistory.actions.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }: IDeleteConfirm) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'myDocument' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete the <b>{details.folderName}</b> folder\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'receiveDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import {\r\n    ShareFolder,\r\n    ShareFile,\r\n    RevokeFolder,\r\n    RevokeFile\r\n} from \"../types.d\";\r\nimport { shareService } from \"../../services\"\r\n\r\nexport const ShareActionCreator = {\r\n    shareFolder: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: ShareFolder.SHARE_FOLDER_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: ShareFolder.SHARE_FOLDER_SUCCESS, payload: data })\r\n        const failure = () => ({ type: ShareFolder.SHARE_FOLDER_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.shareFolder(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n            .finally(() => {\r\n                dispatch({ type: ShareFolder.SHARE_FOLDER_RESET })\r\n            })\r\n    },\r\n    shareDocument: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: ShareFile.SHARE_FILE_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: ShareFile.SHARE_FILE_SUCCESS, payload: data })\r\n        const failure = () => ({ type: ShareFile.SHARE_FILE_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.shareDocument(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n            .finally(() => {\r\n                dispatch({ type: ShareFile.SHARE_FILE_RESET })\r\n            })\r\n    },\r\n    revokeShareFolder: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: RevokeFolder.REVOKE_FOLDER_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RevokeFolder.REVOKE_FOLDER_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RevokeFolder.REVOKE_FOLDER_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.revokeShareFolder(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n            .finally(() => {\r\n                dispatch({ type: RevokeFolder.REVOKE_FOLDER_RESET })\r\n            })\r\n    },\r\n    revokeShareDocument: (payload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: RevokeFile.REVOKE_FILE_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RevokeFile.REVOKE_FILE_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RevokeFile.REVOKE_FILE_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        shareService.revokeShareDocument(payload)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n            .finally(() => {\r\n                dispatch({ type: RevokeFile.REVOKE_FILE_RESET })\r\n            })\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Modal, Row, Col, Button, Form, OverlayTrigger, Tooltip } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { CgTrash } from 'react-icons/cg';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\n\r\nimport Styles from \"./Modal.module.sass\";\r\nimport { UserActionCreator } from '../../store/actions/user.actions';\r\nimport { ShareActionCreator } from '../../store/actions/share.actions';\r\nimport { AiFillWarning } from 'react-icons/ai';\r\n\r\nconst Share = ({ show, onHide, parentComponent, searchHandler }: any) => {\r\n    const [details, setDetails] = useState<any>(show)\r\n    const dispatch = useDispatch()\r\n    const ref = useRef<any>();\r\n    const [formError, setFormError] = useState({\r\n        shareDetail: false,\r\n    })\r\n    const [isEnable, setIsEnable] = useState<boolean>(false)\r\n    const [toSentList, setToSentList] = useState<any>([])\r\n    const [emailToRemove, setEmailToRemove] = useState<any>(null)\r\n    const [usersUpdates, setUsersUpdated] = useState<any>([])\r\n    const { users, loading, error } = useSelector((state: any) => ({\r\n        users: state.users.data,\r\n        loading: state.users.loading,\r\n        error: state.users.error,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        filterUserList(details)\r\n    }, [details, users])\r\n\r\n    const {\r\n        shareFolderLoading,\r\n        shareFolderSuccess,\r\n        shareFolderError,\r\n        shareFileLoading,\r\n        shareFileSuccess,\r\n        shareFileError,\r\n        revokeFolderLoading,\r\n        revokeFolderSuccess,\r\n        revokeFolderError,\r\n        revokeFileLoading,\r\n        revokeFileSuccess,\r\n        revokeFileError\r\n    } = useSelector((state: any) => ({\r\n        shareFolderLoading: state.share.shareFolderLoading,\r\n        shareFolderSuccess: state.share.shareFolderSuccess,\r\n        shareFolderError: state.share.shareFolderError,\r\n        shareFileLoading: state.share.shareFileLoading,\r\n        shareFileSuccess: state.share.shareFileSuccess,\r\n        shareFileError: state.share.shareFileError,\r\n        revokeFolderLoading: state.share.revokeFolderLoading,\r\n        revokeFolderSuccess: state.share.revokeFolderSuccess,\r\n        revokeFolderError: state.share.revokeFolderError,\r\n        revokeFileLoading: state.share.revokeFileLoading,\r\n        revokeFileSuccess: state.share.revokeFileSuccess,\r\n        revokeFileError: state.share.revokeFileError\r\n    }))\r\n\r\n    /**\r\n     * Share Folder \r\n     */\r\n    useEffect(() => {\r\n        if (shareFolderSuccess || shareFileSuccess) {\r\n            const detailTemp: any = Object.assign({}, details)\r\n            detailTemp.sharedWith.push(...toSentList)\r\n            ref.current.clear()\r\n            setIsEnable(false)\r\n            setDetails(detailTemp)\r\n            searchHandler()\r\n        }\r\n    }, [\r\n        shareFolderLoading,\r\n        shareFolderSuccess,\r\n        shareFolderError,\r\n        shareFileLoading,\r\n        shareFileSuccess,\r\n        shareFileError\r\n    ])\r\n\r\n    /**\r\n    * Revoke \r\n    */\r\n    useEffect(() => {\r\n        if (revokeFolderSuccess || revokeFileSuccess) {\r\n            const detailTemp: any = Object.assign({}, details)\r\n            detailTemp.sharedWith = detailTemp.sharedWith.filter((dT: any) => {\r\n                if (dT.email !== emailToRemove) {\r\n                    return dT\r\n                }\r\n            })\r\n            setIsEnable(false)\r\n            setDetails(detailTemp)\r\n            setEmailToRemove(null)\r\n            searchHandler()\r\n        }\r\n    }, [revokeFolderLoading,\r\n        revokeFolderSuccess,\r\n        revokeFolderError,\r\n        revokeFileLoading,\r\n        revokeFileSuccess,\r\n        revokeFileError])\r\n\r\n    useEffect(() => {\r\n        dispatch(UserActionCreator.getConnectedUsers())\r\n    }, [])\r\n\r\n    const filterUserList = (details: any) => {\r\n        let tempUsers: any = []\r\n        let sharedWithTemp = Object.assign({}, details)\r\n        let sharedArray = sharedWithTemp.sharedWith.map((shared: any) => shared.email)\r\n        users.map((user: any) => {\r\n            if (sharedArray.indexOf(user.loginKey) === -1) {\r\n                tempUsers.push(user)\r\n            }\r\n            return true\r\n        })\r\n        setUsersUpdated(tempUsers)\r\n    }\r\n\r\n    const validate = (formObj: any) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            shareDetail: false,\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n            if (formObj[\"shareDetail\"].length === 0) {\r\n                error[\"shareDetail\"] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const onSubmitHandler = () => {\r\n        let formObj: any = {}\r\n        formObj[\"shareDetail\"] = toSentList\r\n        if (validate(formObj)) {\r\n            if (parentComponent === 'documents') {\r\n                formObj[\"documentId\"] = details.id\r\n                dispatch(ShareActionCreator.shareDocument(formObj))\r\n            } else {\r\n                formObj[\"clientAccountNo\"] = details.folderName\r\n                dispatch(ShareActionCreator.shareFolder(formObj))\r\n            }\r\n        }\r\n    }\r\n\r\n    const revokeHandler = (data: any) => {\r\n        let formObj: any = {}\r\n        formObj[\"email\"] = data.email\r\n        setEmailToRemove(data.email)\r\n        if (parentComponent === 'documents') {\r\n            dispatch(ShareActionCreator.revokeShareDocument(formObj))\r\n        } else {\r\n            dispatch(ShareActionCreator.revokeShareDocument(formObj))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Share \"<b>{parentComponent === 'myDocument' ? `${details.folderName}` : `${details.documentName}`}</b>\"\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Form>\r\n                    <Row>\r\n                        <Col lg={12} md={6} className=\"no_padding\">\r\n                            <Form.Group as={Col} className=\"mb-1 mt-4\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Typeahead\r\n                                        isLoading={loading}\r\n                                        id=\"public-methods-example\"\r\n                                        labelKey=\"modifiedFirstName\"\r\n                                        multiple\r\n                                        ref={ref}\r\n                                        allowNew={true}\r\n                                        newSelectionPrefix='Not a Platform User: '\r\n                                        onChange={(selected) => {\r\n                                            setIsEnable(true)\r\n                                            let selectedUpdated = selected.map((s: any) => {\r\n                                                let temp = {\r\n                                                    \"name\": s.firstName,\r\n                                                    \"email\": s.loginKey || s.firstName,\r\n                                                    \"isRegisterUser\": !s.customOption,\r\n                                                    \"principleId\": s.principleId,\r\n                                                    \"orgType\": s.orgType,\r\n                                                    \"userOrgCode\": s.orgCode,\r\n                                                }\r\n                                                return temp\r\n                                            })\r\n                                            setToSentList(selectedUpdated)\r\n                                        }}\r\n                                        options={usersUpdates}\r\n                                    />\r\n                                </Col>\r\n                                <span style={{ color: 'red', paddingLeft: '1rem' }}><small>{formError[\"shareDetail\"] ? 'At least one recipient is required ' : ''}</small></span>\r\n                                <Form.Label className=\"label_custom white\">Add People</Form.Label>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <Col sm={12}>\r\n                    <p className={Styles.people_share_with}>People with Access</p>\r\n                    {\r\n                        (shareFolderError || shareFileError)\r\n                        && <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={\r\n                                <Tooltip id={`tooltip-error`}>\r\n                                    Error in fetching\r\n                                </Tooltip>\r\n                            }\r\n                        >\r\n                            <AiFillWarning size={20} className={Styles.details_warning} />\r\n                        </OverlayTrigger>\r\n                    }\r\n                    {\r\n                        (!shareFolderError || !shareFileError)\r\n                        && (shareFolderLoading || shareFileLoading)\r\n                        && <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                    }\r\n                    {\r\n                        details.sharedWith && details.sharedWith.length > 0 && <ul className={Styles.share_with_ul}>\r\n                            {\r\n                                details.sharedWith.map((sW: any, index: any) => {\r\n                                    return <li className={Styles.share_with_li} key={`li_${index}`}>\r\n                                        <div className={Styles.share_with_div}>\r\n                                            <div className='share_With_parent' style={{ marginRight: '1rem' }}>\r\n                                                {\r\n                                                    sW.profilePicture && <img src={sW.profilePicture} className='profile_pic_account' alt=\"\" />\r\n                                                }\r\n                                                {\r\n                                                    !sW.profilePicture\r\n                                                    && <span className={`shared_with ${Styles.share_with_span_pic}`}>\r\n                                                        <span>{sW.name.charAt(0)}</span>\r\n                                                    </span>\r\n                                                }\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className={Styles.share_with_p}>{sW.userOrgCode || sW.orgCode} - {sW.name}</p>\r\n                                                <p className={Styles.share_with_p}>{sW.email}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <Button\r\n                                                className={Styles.share_with_button}\r\n                                                variant=\"dark\"\r\n                                                onClick={() => revokeHandler(sW)}\r\n                                            >\r\n                                                <CgTrash\r\n                                                    size={20}\r\n                                                    style={{ margin: '0 .5rem', cursor: 'pointer' }}\r\n                                                />\r\n                                                Revoke Access\r\n                                            </Button>\r\n                                        </div>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    }\r\n                    {\r\n                        details.sharedWith && details.sharedWith.length === 0 &&\r\n                        <p style={{ textAlign: 'center' }}>No record Found</p>\r\n                    }\r\n                </Col>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"dark\" style={{ width: '100%' }} disabled={!isEnable} onClick={onSubmitHandler}>Share</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default Share\r\n","import { useState, useEffect } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { createZipForFolderDownload, downloadFromLink } from \"../../helpers/util\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\nimport Share from \"../../components/modal/Share\";\r\nimport AdvanceSearchHook from \"../../components/CustomHooks/AdvanceSearchHook\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\n\r\nconst MyDocuments = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const { addToast } = useToasts();\r\n    const [sortElement, setSortElement] = useState('modifiedDate')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([]);\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [showShare, setShowShare] = useState(null);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n    let [searchObj, { setInitObj, textSearch, advanceSearch, resetHandler }] = AdvanceSearchHook()\r\n\r\n    const { folders,\r\n        columns,\r\n        totalCount,\r\n        error,\r\n        loading,\r\n        defaultColumns,\r\n        deleteRequest,\r\n        deleteSuccess,\r\n        deleteError,\r\n        downloadRequest,\r\n        downloadError,\r\n        downloadSuccess,\r\n        downloadLinks\r\n    } = useSelector((state: any) => ({\r\n        folders: state.myDocuments.folders.data,\r\n        columns: state.myDocuments.folders.columns,\r\n        totalCount: state.myDocuments.folders.totalCount,\r\n        error: state.myDocuments.folders.error,\r\n        loading: state.myDocuments.folders.loading,\r\n        defaultColumns: state.misc.allTableColumns.data,\r\n        deleteRequest: state.myDocuments.folders.deleteRequest,\r\n        deleteSuccess: state.myDocuments.folders.deleteSuccess,\r\n        deleteError: state.myDocuments.folders.deleteError,\r\n        downloadRequest: state.myDocuments.folderDownload.loading,\r\n        downloadError: state.myDocuments.folderDownload.error,\r\n        downloadSuccess: state.myDocuments.folderDownload.success,\r\n        downloadLinks: state.myDocuments.folderDownload.downloadLinks\r\n    }))\r\n\r\n    useEffect(() => {\r\n        setInitObj({\r\n            pageSize: pageSize,\r\n            pageNumber: pageNumber,\r\n            textSearch: null,\r\n            sortOrder: sortType,\r\n            sortParam: sortElement\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (searchObj !== null) {\r\n            search(pageSize, pageNumber)\r\n        }\r\n    }, [searchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC: any) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].attributeNodeKey)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        if (deleteSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Document'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageSize, pageNumber)\r\n        }\r\n        if (deleteError) { addToast(createMessage('error', `deleting`, 'document'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [\r\n        deleteSuccess,\r\n        deleteError])\r\n\r\n    useEffect(() => {\r\n        if (!downloadRequest && downloadSuccess && downloadLinks) {\r\n            downloadLinks.map((dL: string) => {\r\n                downloadFromLink(dL)\r\n            })\r\n            dispatch(MyDocumentsActionCreator.restDownloadFolder())\r\n        }\r\n    }, [downloadRequest, downloadError, downloadSuccess, downloadLinks])\r\n\r\n    const showDocumentListPage = (data: any) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (\r\n        pageSize: any,\r\n        pageNumber: any\r\n    ) => {\r\n        searchObj = { ...searchObj, pageSize, pageNumber, sortParam: sortElement, sortOrder: sortType }\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentFolders(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageSize(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadDocument = async (document: any) => {\r\n        dispatch(MyDocumentsActionCreator.downloadFolder([document.folderName]))\r\n    }\r\n\r\n    const handleDetails = (document: any) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        dispatch(MyDocumentsActionCreator.deleteFolder(details.folderName))\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'myDocuments'}\r\n                    Styles={Styles}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag: any) => setShowAdvanceSearch(flag)}\r\n                    textSearchHook={textSearch}\r\n                    searchObj={searchObj}\r\n                    advanceSearchHook={advanceSearch}\r\n                    resetHandlerHook={resetHandler}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={folders}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"folderName\": \"Name\",\r\n                    \"fileSize\": \"Size\",\r\n                    \"modifiedDate\": \"Modified Date\",\r\n                    \"shareDate\": \"Shared Date\",\r\n                    \"receiveDate\": \"Received Date\",\r\n                    \"shareBy\": \"Shared By\",\r\n                    \"sharedWith\": \"Shared With\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data: any, column: any) => showDocumentListPage(data)}\r\n                currencyColumns={[]}\r\n                sortElement={(header: any) => setSortElement(header)}\r\n                sortType={(type: any) => setSortType(type)}\r\n                currentPage={pageNumber}\r\n                setCurrentPage={setPageNumber}\r\n                parentComponent={'myDocuments'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data: any) => downloadDocument(data),\r\n                        share: (data: any) => setShowShare(data),\r\n                        view: (data: any) => showDocumentListPage(data),\r\n                        delete: (data: any) => handleDetails(data)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteHandler()}\r\n                details={details}\r\n                type='myDocument'\r\n            />\r\n        }\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload\r\n                show={uploadDocModal}\r\n                onHide={() => setUploadDocModal(false)}\r\n                accountId={123}\r\n                Styles={Styles}\r\n                parentComponent=\"myDocument\"\r\n                search={search} />\r\n        }\r\n        {\r\n            showShare\r\n            && <Share\r\n                show={showShare}\r\n                parentComponent=\"myDocument\"\r\n                searchHandler={() => search(pageSize, pageNumber)}\r\n                onHide={() => setShowShare(null)}\r\n            />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default MyDocuments\r\n\r\n","import {\r\n    GetReceiveDocumentRequest,\r\n    DownloadDocumentRequest,\r\n    DeleteReceiveDocumentRequest\r\n} from \"../types.d\";\r\nimport { receiveDocumentRequest } from \"../../services\"\r\n\r\nexport const ReceiveDocumentRequestActionCreator = {\r\n    getReceiveDocumentRequest: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.getReceiveDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    DownloadDocumentRequest: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.downloadDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.deleteReceiveDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { ReceiveDocumentRequestActionCreator } from \"../../store/actions/receivedDocumentRequest.actions\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport { downloadSignedFile } from \"../../helpers/util\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\nimport AdvanceSearchHook from \"../../components/CustomHooks/AdvanceSearchHook\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\n\r\n\r\nconst ReceivedDocumentRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('requestDate')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [details, setDetails] = useState<any>(null);\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([])\r\n    let [searchObj, { setInitObj, textSearch, advanceSearch, resetHandler }] = AdvanceSearchHook()\r\n\r\n    const {\r\n        receiveDocumentRequests,\r\n        totalCount,\r\n        columns,\r\n        loading,\r\n        error,\r\n        downloadRequest,\r\n        downloadRequestSuccess,\r\n        downloadRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError,\r\n        defaultColumns\r\n    } = useSelector((state: any) => ({\r\n        receiveDocumentRequests: state.receiveDocumentRequest.data,\r\n        totalCount: state.receiveDocumentRequest.totalCount,\r\n        columns: state.receiveDocumentRequest.columns,\r\n        loading: state.receiveDocumentRequest.loading,\r\n        error: state.receiveDocumentRequest.error,\r\n        downloadRequest: state.receiveDocumentRequest.downloadRequest,\r\n        downloadRequestSuccess: state.receiveDocumentRequest.downloadRequestSuccess,\r\n        downloadRequestError: state.receiveDocumentRequest.downloadRequestError,\r\n        deleteRequest: state.receiveDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.receiveDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.receiveDocumentRequest.deleteRequestError,\r\n        defaultColumns: state.misc.allTableColumns.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        setInitObj({\r\n            pageSize: pageSize,\r\n            pageNumber: pageNumber,\r\n            textSearch: null,\r\n            sortOrder: sortType,\r\n            sortParam: sortElement\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (searchObj !== null) {\r\n            search(pageSize, pageNumber)\r\n        }\r\n    }, [searchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC: any) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].columnNames)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n\r\n    useEffect(() => {\r\n        // if (sendRequestSuccess) {\r\n        //     addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n        //     setShowRequestNewDocument(false);\r\n        //     search(pageCount, currentPage)\r\n        // }\r\n        // if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageSize, pageNumber)\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [\r\n        // sendRequestSuccess,\r\n        // sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (\r\n        pageSize: any,\r\n        pageNumber: any\r\n    ) => {\r\n        searchObj = { ...searchObj, pageSize, pageNumber, sortParam: sortElement, sortOrder: sortType }\r\n        dispatch(ReceiveDocumentRequestActionCreator.getReceiveDocumentRequest(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageSize(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(ReceiveDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n        dispatch(SummaryActionCreator.reRender())\r\n    }\r\n\r\n    const handleDetails = (document: any) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const downloadHandler = async (document: any) => {\r\n        //download file\r\n        addToast(createMessage('info', `DOWNLOAD_STARTED`, ''), { appearance: 'info', autoDismiss: true })\r\n        await downloadSignedFile(document)\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.documentId]))\r\n        addToast(createMessage('info', `DOWNLOAD_SUCCESSFUL`, ''), { appearance: 'success', autoDismiss: true })\r\n    }\r\n\r\n    const fulFillHandler = () => {\r\n        search(pageSize, pageNumber)\r\n        dispatch(SummaryActionCreator.reRender())\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'receiveDocumentRequest'}\r\n                    Styles={Styles}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag: any) => setShowAdvanceSearch(flag)}\r\n                    textSearchHook={textSearch}\r\n                    searchObj={searchObj}\r\n                    advanceSearchHook={advanceSearch}\r\n                    resetHandlerHook={resetHandler}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Fulfill Bulk Request</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={receiveDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillmentDate\": \"Fulfillment Date\",\r\n                    \"fileName\": \"Document Name\",\r\n                    \"requestedFrom\": \"Requested By\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header: any) => setSortElement(header)}\r\n                sortType={(type: any) => setSortType(type)}\r\n                currentPage={pageNumber}\r\n                setCurrentPage={setPageNumber}\r\n                parentComponent={'receiveDocumentRequest'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data: any) => downloadHandler(data),\r\n                        upload: (data: any) => {\r\n                            setDetails(data)\r\n                            setUploadDocModal(true)\r\n                        },\r\n                        delete: (data: any) => handleDetails(data),\r\n                        viewDocument: (data: any) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload\r\n                show={uploadDocModal}\r\n                onHide={() => setUploadDocModal(false)}\r\n                accountId={123}\r\n                Styles={Styles}\r\n                parentComponent=\"receiveDocumentRequest\"\r\n                search={() => fulFillHandler()}\r\n                details={details}\r\n            />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='receiveDocumentRequest'\r\n            />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default ReceivedDocumentRequests\r\n\r\n","import { GetSentDocumentRequest, SentDocumentRequest, DeleteDocumentRequest } from \"../types.d\";\r\nimport { sentDocumentRequestService } from \"../../services\"\r\n\r\nexport const SentDocumentRequestActionCreator = {\r\n    getSentDocumentRequest: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.getSentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    sentDocumentRequest: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.sentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.deleteDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport { Col, Form, Row, Button, Tab, Tabs, Modal, Container } from \"react-bootstrap\";\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { SentDocumentRequestActionCreator } from \"../../store/actions/sentDocumentRequest.actions\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport { downloadSignedFile } from \"../../helpers/util\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport DocumentTypes from \"../../components/Common/DocumentType\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\nimport AdvanceSearchHook from \"../../components/CustomHooks/AdvanceSearchHook\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\n\r\n\r\nconst SentDocumentRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const aRef = useRef<any>()\r\n    const { addToast } = useToasts();\r\n\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('id')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageSize, setPageSize] = useState(10)\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [showBulkRequest, setShowBulkRequest] = useState(false)\r\n    const [showRequestNewDocument, setShowRequestNewDocument] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([])\r\n    let [searchObj, { setInitObj, textSearch, advanceSearch, resetHandler }] = AdvanceSearchHook()\r\n\r\n    const {\r\n        sentDocumentRequests,\r\n        totalCount,\r\n        columns,\r\n        loading,\r\n        error,\r\n        sendRequest,\r\n        sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError,\r\n        defaultColumns\r\n    } = useSelector((state: any) => ({\r\n        sentDocumentRequests: state.sentDocumentRequest.data,\r\n        totalCount: state.sentDocumentRequest.totalCount,\r\n        columns: state.sentDocumentRequest.columns,\r\n        loading: state.sentDocumentRequest.loading,\r\n        error: state.sentDocumentRequest.error,\r\n        sendRequest: state.sentDocumentRequest.sendRequest,\r\n        sendRequestSuccess: state.sentDocumentRequest.sendRequestSuccess,\r\n        sendRequestError: state.sentDocumentRequest.sendRequestError,\r\n        deleteRequest: state.sentDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.sentDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.sentDocumentRequest.deleteRequestError,\r\n        defaultColumns: state.misc.allTableColumns.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        setInitObj({\r\n            pageSize: pageSize,\r\n            pageNumber: pageNumber,\r\n            textSearch: null,\r\n            sortOrder: sortType,\r\n            sortParam: sortElement\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (searchObj !== null) {\r\n            search(pageSize, pageNumber)\r\n        }\r\n    }, [searchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC: any) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].columnNames)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        if (sendRequestSuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            setShowRequestNewDocument(false);\r\n            search(pageSize, pageNumber)\r\n            setTimeout(() => {\r\n                dispatch(SummaryActionCreator.reRender())\r\n            }, 1000)\r\n        }\r\n        if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageSize, pageNumber)\r\n            dispatch(SummaryActionCreator.reRender())\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (\r\n        pageSize: any,\r\n        pageNumber: any\r\n    ) => {\r\n        searchObj = { ...searchObj, pageSize, pageNumber, sortParam: sortElement, sortOrder: sortType }\r\n        dispatch(SentDocumentRequestActionCreator.getSentDocumentRequest(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageSize(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(SentDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n    }\r\n\r\n    const handleDetails = (document: any) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const downloadHandler = async (document: any) => {\r\n        //download file\r\n        addToast(createMessage('info', `DOWNLOAD_STARTED`, ''), { appearance: 'info', autoDismiss: true })\r\n        await downloadSignedFile(document)\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.documentId]))\r\n        addToast(createMessage('info', `DOWNLOAD_SUCCESSFUL`, ''), { appearance: 'success', autoDismiss: true })\r\n    }\r\n\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'sentDocumentRequest'}\r\n                    Styles={Styles}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag: any) => setShowAdvanceSearch(flag)}\r\n                    textSearchHook={textSearch}\r\n                    searchObj={searchObj}\r\n                    advanceSearchHook={advanceSearch}\r\n                    resetHandlerHook={resetHandler}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowBulkRequest(true)}>Import Bulk Request</Button>\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowRequestNewDocument(true)}>Request New Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={sentDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillmentDate\": \"Fulfillment Date\",\r\n                    \"fileName\": \"File Name\",\r\n                    \"requestedFrom\": \"Requested From\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header: any) => setSortElement(header)}\r\n                sortType={(type: any) => setSortType(type)}\r\n                currentPage={pageNumber}\r\n                setCurrentPage={setPageNumber}\r\n                parentComponent={'sentDocumentRequest'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data: any) => downloadHandler(data),\r\n                        delete: (data: any) => handleDetails(data),\r\n                        viewDocument: (data: any) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n\r\n        {\r\n            showRequestNewDocument\r\n            && <RequestNewDocument show={showRequestNewDocument} onHide={() => setShowRequestNewDocument(false)} dispatch={dispatch} />\r\n        }\r\n        {\r\n            showBulkRequest\r\n            && <DocumentUpload show={showBulkRequest} onHide={() => setShowBulkRequest(false)} accountId={123} Styles={Styles} parentComponent=\"sentDocumentRequest\" search={search} />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='sentDocumentRequest'\r\n            />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n\r\n    </>)\r\n}\r\n\r\nconst RequestNewDocument = ({ show, onHide, dispatch }: { show: any, onHide: any, dispatch: any }) => {\r\n    const ref = useRef<any>();\r\n    const sendRequestRef = useRef<any>()\r\n    const [defaultSelect, setDefaultSelect] = useState<any>([])\r\n    const [usersSelected, setUserSelected] = useState<any>([])\r\n    const [formError, setFormError] = useState({\r\n        sendRequests: false,\r\n        originalAccountNumber: false,\r\n        clientAccountNumber: false,\r\n        docTypeCode: false\r\n    })\r\n\r\n    const {\r\n        users,\r\n        loading,\r\n        error,\r\n        clientAccountNumbers\r\n    } = useSelector((state: any) => ({\r\n        users: state.users.data,\r\n        loading: state.users.loading,\r\n        error: state.users.error,\r\n        clientAccountNumbers: state.misc.clientAccountNumbers.data,\r\n    }))\r\n\r\n    const validate = (formObj: any) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            sendRequests: false,\r\n            originalAccountNumber: false,\r\n            clientAccountNumber: false,\r\n            docTypeCode: false\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n            if (formObj[\"sendRequests\"].length === 0) {\r\n                error[\"sendRequests\"] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    const handleRequest = (e: any) => {\r\n        e.preventDefault()\r\n        const {\r\n            originalAccountNumber,\r\n            clientAccountNumber,\r\n            document_type\r\n        } = sendRequestRef.current\r\n        console.log(document_type.value)\r\n        const requestObj = {\r\n            \"sendRequests\": usersSelected,\r\n            \"originalAccountNumber\": originalAccountNumber.value,\r\n            \"clientAccountNumber\": clientAccountNumber.value,\r\n            \"docTypeCode\": document_type.value\r\n        }\r\n        if (validate(requestObj)) {\r\n            dispatch(SentDocumentRequestActionCreator.sentDocumentRequest(requestObj))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"xl\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Request New Document\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document}>\r\n                    <Form ref={sendRequestRef} onSubmit={(e) => handleRequest(e)}>\r\n                        <br />\r\n                        <Row>\r\n                            <Col lg={12} md={12} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-4\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Typeahead\r\n                                            isLoading={loading}\r\n                                            id=\"public-methods-example\"\r\n                                            labelKey=\"modifiedFirstName\"\r\n                                            multiple\r\n                                            ref={ref}\r\n                                            allowNew={true}\r\n                                            newSelectionPrefix='Not a Platform User: '\r\n                                            onChange={(selected) => {\r\n                                                let selectedUpdated = selected.map((s: any) => {\r\n                                                    if (s.customOption) {\r\n                                                        return s.modifiedFirstName\r\n                                                    }\r\n                                                    return s.loginKey\r\n                                                })\r\n                                                setUserSelected(selectedUpdated)\r\n                                            }}\r\n                                            options={users}\r\n                                        />\r\n                                    </Col>\r\n                                    <span style={{ color: 'red', paddingLeft: '1rem' }}><small>{formError[\"sendRequests\"] ? 'At least one recipient is required ' : ''}</small></span>\r\n                                    <Form.Label className=\"label_custom white\">Send Request To</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Portfolio Id</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row> */}\r\n                        <Row>\r\n                            <Col lg={12} md={12} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-4\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"originalAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <span style={{ color: 'red', paddingLeft: '1rem' }}><small>{formError[\"originalAccountNumber\"] ? 'Original Account Number is required ' : ''}</small></span>\r\n                                    <Form.Label className=\"label_custom white\">Original Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={12} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-4 \">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            name=\"clientAccountNumber\"\r\n                                            className=\"select_custom white\"\r\n                                        >\r\n                                            <option value=\"\"></option>\r\n                                            {\r\n                                                (clientAccountNumbers && clientAccountNumbers.length > 0) &&\r\n                                                clientAccountNumbers.map((cAn: any, index: number) => {\r\n                                                    return <option key={`cr_${index}`} value={cAn}>{cAn}</option>\r\n                                                })\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <span style={{ color: 'red', paddingLeft: '1rem' }}><small>{formError[\"clientAccountNumber\"] ? 'Client Account Number is required' : ''}</small></span>\r\n                                    <Form.Label className=\"label_custom white\">Client Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={12} >\r\n                                <Form.Group as={Col} className=\"mb-4\">\r\n                                    <Col md={12} sm={12} className=\"no_padding\">\r\n                                        <DocumentTypes />\r\n                                    </Col>\r\n                                    <span style={{ color: 'red' }}><small>{formError[\"docTypeCode\"] ? 'Document Type is required' : ''}</small></span>\r\n                                    <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Col className={Styles.button_center}>\r\n                            <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Request</Button>{\" \"}\r\n                        </Col>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default SentDocumentRequests\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport { downloadSignedFile, getSignedURL } from \"../../helpers/util\";\r\n\r\nconst DownloadHistory = () => {\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const aRef = useRef<any>()\r\n    const history = useHistory();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n\r\n    const {\r\n        data,\r\n        totalCount,\r\n        error,\r\n        loading,\r\n        saveDownload,\r\n        saveDownloadSuccess,\r\n        saveDownloadError,\r\n        deleteDownloadHistory,\r\n        deleteDownloadHistorySuccess,\r\n        deleteDownloadHistoryError\r\n    } = useSelector((state: any) => ({\r\n        data: state.downloadHistory.data,\r\n        totalCount: state.downloadHistory.totalCount,\r\n        error: state.downloadHistory.error,\r\n        loading: state.downloadHistory.loading,\r\n        saveDownload: state.downloadHistory.saveDownload,\r\n        saveDownloadSuccess: state.downloadHistory.saveDownloadSuccess,\r\n        saveDownloadError: state.downloadHistory.saveDownloadError,\r\n        deleteDownloadHistory: state.downloadHistory.deleteDownloadHistory,\r\n        deleteDownloadHistorySuccess: state.downloadHistory.deleteDownloadHistorySuccess,\r\n        deleteDownloadHistoryError: state.downloadHistory.deleteDownloadHistoryError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (deleteDownloadHistorySuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteDownloadHistoryError) {\r\n\r\n        }\r\n    }, [deleteDownloadHistorySuccess, deleteDownloadHistoryError])\r\n\r\n    const showDocumentListPage = (data: any, column: any) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(DownloadHistoryActionCreator.getDownloadHistory({\r\n            pageSize,\r\n            pageNumber\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadHandler = async (document: any) => {\r\n        //download file\r\n        addToast(createMessage('info', `DOWNLOAD_STARTED`, ''), { appearance: 'info', autoDismiss: true })\r\n        await downloadSignedFile(document)\r\n        addToast(createMessage('info', `DOWNLOAD_SUCCESSFUL`, ''), { appearance: 'success', autoDismiss: true })\r\n    }\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col>\r\n            <TableComponent\r\n                data={data}\r\n                isLoading={loading}\r\n                map={{\r\n                    documentName: \"Document Name\",\r\n                    documentsize: \"Size\",\r\n                    downloadDate: \"Download Date\",\r\n                    downloadStatus: \"Status\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data: any, column: any) => showDocumentListPage(data, column)}\r\n                currencyColumns={[]}\r\n                sortElement={(header: any) => setSortElement(header)}\r\n                sortType={(type: any) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'downloadHistory'}\r\n                searchCriteria={{}}\r\n                hideShareArray={[\r\n                    \"documentName\",\r\n                    \"documentsize\",\r\n                    \"downloadDate\",\r\n                    \"downloadStatus\"\r\n                ]}\r\n                addEditArray={\r\n                    {\r\n                        pause: (data: any) => console.log(`pause Action`),\r\n                        download: (data: any) => downloadHandler(data),\r\n                        delete: (data: any) => {\r\n                            dispatch(DownloadHistoryActionCreator.deleteDownloadHistory(data.id))\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n    </>)\r\n}\r\n\r\nexport default DownloadHistory;","import { useEffect, useRef, useState } from \"react\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { UserActionCreator } from \"../../store/actions/user.actions\";\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { MiscActionCreator } from \"../../store/actions/common/misc.actions\";\r\n\r\nconst TENURES = [\r\n    {\r\n        statusCode: 'month',\r\n        status: 'Current Month'\r\n    },\r\n    {\r\n        statusCode: 'year',\r\n        status: 'Current Year'\r\n    },\r\n    {\r\n        statusCode: 'week',\r\n        status: 'Current week'\r\n    }\r\n]\r\n\r\n\r\nconst SummaryFilters = ({ searchObj, setSearchObj }: { searchObj: any, setSearchObj: any }) => {\r\n    const dispatch = useDispatch();\r\n    const formSearchAccount = useRef<any>();\r\n    const [tenures, setTenures] = useState<{ statusCode: string, status: string }[]>([])\r\n\r\n    const {\r\n        users,\r\n        // userLoading,\r\n        // userError,\r\n        productTypes,\r\n        // loadingProductTypes,\r\n        // errorProductTypes,\r\n        clientAccountNumbers,\r\n        // loading,\r\n        // error\r\n    } = useSelector((state: any) => ({\r\n        users: state.users.data,\r\n        // userLoading: state.users.loading,\r\n        // userError: state.users.error,\r\n        productTypes: state.types.productType.data,\r\n        // loadingProductTypes: state.types.productType.loading,\r\n        // errorProductTypes: state.types.productType.error,\r\n        clientAccountNumbers: state.misc.clientAccountNumbers.data,\r\n        // loading: state.misc.clientAccountNumbers.loading,\r\n        // error: state.misc.clientAccountNumbers.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(MiscActionCreator.getClientAccountNumbers())\r\n        dispatch(UserActionCreator.getConnectedUsers())\r\n        dispatch(TypesActionCreator.getProductTypes())\r\n        setTenures(TENURES)\r\n\r\n    }, [])\r\n\r\n    const coverageHandler = (type: any, e: any) => {\r\n        const tempCoverage = Object.assign({}, searchObj)\r\n        tempCoverage[type] = e.target.value === \"\" ? null : e.target.value\r\n        setSearchObj(tempCoverage)\r\n    }\r\n\r\n    return (\r\n        <Form ref={formSearchAccount}>\r\n            <Row>\r\n                <Col lg={6} md={12} className=\"no_padding\">\r\n                    <Form.Group as={Col} className=\"mb-4\">\r\n                        <Col md={12} sm={12} className=\"no_padding\">\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"service_offered\"\r\n                                className=\"select_custom white\"\r\n                                onChange={(e) => {\r\n                                    coverageHandler(\"duration\", e)\r\n                                }}>\r\n                                {\r\n                                    (tenures && tenures.length > 0) &&\r\n                                    tenures.map((tenure: any, index: number) => {\r\n                                        return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                    })\r\n                                }\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} className=\"mb-4 \">\r\n                        <Col md={12} sm={12} className=\"no_padding\">\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"service_offered\"\r\n                                className=\"select_custom white\"\r\n                                onChange={(e) => {\r\n                                    coverageHandler(\"portfolio\", e)\r\n                                }}\r\n                            >\r\n                                <option value=\"\">All Portfolios</option>\r\n                                {\r\n                                    (clientAccountNumbers && clientAccountNumbers.length > 0) &&\r\n                                    clientAccountNumbers.map((cAn: any, index: number) => {\r\n                                        return <option key={`cr_${index}`} value={cAn}>{cAn}</option>\r\n                                    })\r\n                                }\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                    </Form.Group>\r\n                </Col >\r\n                <Col lg={6} md={12} className=\"no_padding\">\r\n                    <Form.Group as={Col} className=\"mb-4 \">\r\n                        <Col md={12} sm={12} className=\"no_padding\">\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"service_offered\"\r\n                                className=\"select_custom white\"\r\n                                onChange={(e) => {\r\n                                    coverageHandler(\"product\", e)\r\n                                }}>\r\n                                <option value=\"\">All Products</option>\r\n                                {\r\n                                    (productTypes && productTypes.length > 0) &&\r\n                                    productTypes.map((product: any, index: number) => {\r\n                                        return <option key={`cr_${index}`} value={product.shortName}>{product.fullName}</option>\r\n                                    })\r\n                                }\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} className=\"mb-4 \">\r\n                        <Col md={12} sm={12} className=\"no_padding\">\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"service_offered\"\r\n                                className=\"select_custom white\"\r\n                                onChange={(e) => {\r\n                                    coverageHandler(\"userId\", e)\r\n                                }}>\r\n                                <option value=\"\">All Users</option>\r\n                                {\r\n                                    (users && users.length > 0) &&\r\n                                    users.map((user: any, index: number) => {\r\n                                        return <option key={`cr_${index}`} value={user.principleId}>{user.firstName} {user.lastName}</option>\r\n                                    })\r\n                                }\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row >\r\n        </Form >\r\n    )\r\n}\r\n\r\nexport default SummaryFilters","import { GetInvoice } from \"../types.d\";\r\nimport { invoiceService } from \"../../services\"\r\n\r\nexport const InvoiceActionCreator = {\r\n    getInvoice: (tenure: any) => (dispatch: any) => {\r\n        const request = () => ({ type: GetInvoice.GET_INVOICE_REQUEST, payload: [] })\r\n        const success = (users: any) => ({ type: GetInvoice.GET_INVOICE_SUCCESS, payload: users })\r\n        const failure = () => ({ type: GetInvoice.GET_INVOICE_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        invoiceService.GetInvoices(tenure)\r\n            .then(\r\n                users => {\r\n                    dispatch(success(users))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    }\r\n}","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport SummaryFilters from \"../../components/Common/SummaryFilters\";\r\nimport { userService } from \"../../services\";\r\nimport { CgSpinnerAlt } from \"react-icons/cg\";\r\nimport { InvoiceActionCreator } from \"../../store/actions/invoice.actions\";\r\nimport NoRecord from \"../../components/Common/NoResult\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\r\n\r\nconst options: any = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    cutout: 70,\r\n    layout: {\r\n        padding: 20\r\n    },\r\n    plugins: {\r\n        datalabels: {\r\n            color: 'white',\r\n            padding: 6,\r\n            font: {\r\n                weight: 'bold',\r\n                size: '12px',\r\n                family: `'VisbyCF-Regular', Arial, Helvetica, sans-serif`\r\n            }\r\n        },\r\n        legend: {\r\n            position: 'bottom' as const,\r\n        },\r\n    },\r\n}\r\n\r\n\r\nexport const DATA_REQUESTED = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#FF7765'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#FF7765',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\nexport const DATA_SENT = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#FF7765'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#FF7765',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\nconst DocumentRequirement = ({ collapse, clientAccountNumbers }: any) => {\r\n    const dispatch = useDispatch();\r\n    const [userType, setUserType] = useState<any>(null)\r\n    const [searchObj, setSearchObj] = useState({\r\n        duration: null,\r\n        product: null,\r\n        portfolio: null,\r\n        userId: null\r\n    })\r\n    const [dataRequested, setDataRequested] = useState<any>({\r\n        labels: ['Fulfilled', 'Open', 'Overdue'],\r\n        datasets: [\r\n            {\r\n                label: 'Total',\r\n                data: [],\r\n                backgroundColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f'\r\n                ],\r\n                borderColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    })\r\n    const [dataSent, setDataSent] = useState<any>({\r\n        labels: ['Fulfilled', 'Open', 'Overdue'],\r\n        datasets: [\r\n            {\r\n                label: 'Total',\r\n                data: [],\r\n                backgroundColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f'\r\n                ],\r\n                borderColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    })\r\n\r\n    const {\r\n        requestedSummary,\r\n        sentSummary,\r\n        errorSent,\r\n        loadingSent,\r\n        loadingRequest,\r\n        errorRequest,\r\n        reRender,\r\n    } = useSelector((state: any) => ({\r\n        requestedSummary: state.summary.requestedSummary,\r\n        sentSummary: state.summary.sentSummary,\r\n        errorSent: state.summary.errorSent,\r\n        loadingSent: state.summary.loadingSent,\r\n        loadingRequest: state.summary.loadingRequest,\r\n        errorRequest: state.summary.errorRequest,\r\n        reRender: state.summary.reRender\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (JSON.stringify(requestedSummary) !== \"{}\") {\r\n            delete requestedSummary.total\r\n            let labels = ['Fulfilled', 'Open', 'Overdue']\r\n            let values = Object.values(requestedSummary)\r\n            const dataRequestedTemp: any = Object.assign({}, DATA_REQUESTED)\r\n            dataRequestedTemp.labels = labels\r\n            dataRequestedTemp.datasets[0].data = values\r\n            setDataRequested(dataRequestedTemp)\r\n        }\r\n        if (JSON.stringify(sentSummary) !== \"{}\") {\r\n            delete sentSummary.total\r\n            let labels = ['Fulfilled', 'Open', 'Overdue']\r\n            let values = Object.values(sentSummary)\r\n            const dataSentTemp: any = Object.assign({}, DATA_SENT)\r\n            dataSentTemp.labels = labels\r\n            dataSentTemp.datasets[0].data = values\r\n            setDataSent(dataSentTemp)\r\n        }\r\n    }, [requestedSummary, sentSummary])\r\n\r\n    useEffect(() => {\r\n        setUserType(userService.getUserType())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(SummaryActionCreator.getSentSummary(searchObj))\r\n        if (searchObj.duration) {\r\n            dispatch(InvoiceActionCreator.getInvoice(searchObj.duration))\r\n        }\r\n\r\n    }, [searchObj])\r\n\r\n    useEffect(() => {\r\n        if (reRender) {\r\n            setDataSent({\r\n                labels: ['Fulfilled', 'Open', 'Overdue'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Total',\r\n                        data: [],\r\n                        backgroundColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f'\r\n                        ],\r\n                        borderColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            })\r\n            setDataRequested({\r\n                labels: ['Fulfilled', 'Open', 'Overdue'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Total',\r\n                        data: [],\r\n                        backgroundColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f'\r\n                        ],\r\n                        borderColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            })\r\n            dispatch(SummaryActionCreator.getSentSummary({}))\r\n        }\r\n    }, [reRender])\r\n\r\n    const memoRequested = useMemo(() => {\r\n        return <Doughnut data={dataRequested} options={options} redraw />\r\n    }, [dataRequested])\r\n\r\n    const memoSent = useMemo(() => {\r\n        return <Doughnut data={dataSent} options={options} redraw />\r\n    }, [dataSent])\r\n\r\n\r\n    const isChartEmpty = (data: any) => {\r\n        if ((data.fullfilled + data.open + data.overDue) === 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col sm={12} className={Styles.inner_document_summary}\r\n            style={{\r\n                borderWidth: collapse ? '0' : '1px',\r\n                background: collapse ? '#e9ecef' : 'white'\r\n            }}>\r\n            <h5>Document Requirement</h5>\r\n            <br />\r\n            <SummaryFilters searchObj={searchObj} setSearchObj={setSearchObj} />\r\n            <hr />\r\n            <Row style={{ maxHeight: '395px', minHeight: '395px' }}>\r\n                <Col sm={6} className={Styles.chart_container}>\r\n                    <h5>{userType !== 'Client' ? \"Sent Requests\" : \"Received Requests\"}</h5>\r\n                    {\r\n                        (!errorRequest && loadingRequest) && (!errorSent && loadingSent) &&\r\n                        <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                    }\r\n                    {\r\n\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            alignItems: userType === 'Client' && !isChartEmpty(requestedSummary) ? 'end' : '',\r\n                            height: \"90%\",\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            {\r\n                                userType === 'Client' ?\r\n                                    <>\r\n                                        {\r\n                                            !loadingRequest &&\r\n                                            (isChartEmpty(requestedSummary) ? <NoRecord /> : memoRequested)\r\n                                        }\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        {\r\n                                            !loadingSent &&\r\n                                            (isChartEmpty(sentSummary) ? <NoRecord /> : memoSent)\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </Col>\r\n                <Col sm={6} className={Styles.chart_container}>\r\n                    <h5>{userType !== 'Client' ? \"Received Requests\" : \"Sent Requests\"}</h5>\r\n                    {\r\n                        (!errorRequest && loadingRequest) && (!errorSent && loadingSent) &&\r\n                        <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                    }\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        alignItems: userType === 'Client' && !isChartEmpty(sentSummary) ? 'end' : '',\r\n                        height: \"90%\",\r\n                        justifyContent: 'center'\r\n                    }}>\r\n                        {\r\n                            userType === 'Client' ?\r\n                                <>\r\n                                    {\r\n                                        !loadingSent &&\r\n                                        (isChartEmpty(sentSummary) ? <NoRecord /> : memoSent)\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    {\r\n                                        !loadingRequest &&\r\n                                        (isChartEmpty(requestedSummary) ? <NoRecord /> : memoRequested)\r\n                                    }\r\n                                </>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row >\r\n        </Col >\r\n    )\r\n}\r\n\r\nexport default DocumentRequirement","import { useEffect, useState } from \"react\";\r\nimport { Col, ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AiFillWarning } from \"react-icons/ai\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport SummaryFilters from \"../../components/Common/SummaryFilters\";\r\nimport SkeletonLoading from \"../../helpers/skeleton-loading\";\r\nimport NoRecord from \"../../components/Common/NoResult\";\r\n\r\n\r\nconst DocumentCoverage = ({ collapse }: any) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [searchObj, setSearchObj] = useState({\r\n        duration: null,\r\n        product: null,\r\n        portfolio: null,\r\n        userId: null\r\n    })\r\n\r\n    const {\r\n        documentCoverage,\r\n        loadingCoverage,\r\n        errorCoverage\r\n    } = useSelector((state: any) => ({\r\n        documentCoverage: state.summary.documentCoverage,\r\n        loadingCoverage: state.summary.loadingCoverage,\r\n        errorCoverage: state.summary.errorCoverage\r\n    }))\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(SummaryActionCreator.resetDocumentSummary())\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(SummaryActionCreator.getDocumentCoverage(searchObj))\r\n    }, [searchObj])\r\n\r\n    const drillDownHandler = (data: any) => {\r\n        let searchObjTemp = { ...searchObj, ...data }\r\n        const params = new URLSearchParams(searchObjTemp).toString();\r\n        history.push({\r\n            pathname: '/documents/accounts_documents',\r\n            search: params,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Col sm={12} className={Styles.inner_document_summary}\r\n            style={{\r\n                borderWidth: collapse ? '0' : '1px',\r\n                background: collapse ? '#e9ecef' : 'white'\r\n            }}>\r\n            <h5>Document Coverage</h5>\r\n            <br />\r\n            <SummaryFilters searchObj={searchObj} setSearchObj={setSearchObj} />\r\n            <hr />\r\n            {errorCoverage &&\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={\r\n                        <Tooltip id={`tooltip-error`}>\r\n                            Error in fetching\r\n                        </Tooltip>\r\n                    }\r\n                >\r\n                    <AiFillWarning size={20} className={Styles.details_warning} />\r\n                </OverlayTrigger>\r\n            }\r\n            <Col sm={12} className={`no_padding ${Styles.progress_container_outer}`}>\r\n                {\r\n                    !errorCoverage && loadingCoverage &&\r\n                    <SkeletonLoading repeats={3} />\r\n                    // <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                {\r\n                    !errorCoverage && !loadingCoverage && documentCoverage.length === 0 &&\r\n                    <NoRecord />\r\n                    // <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                {\r\n                    !loadingCoverage && documentCoverage && documentCoverage.length > 0\r\n                    && documentCoverage.map((dC: any, index: any) => {\r\n                        // if (dC.total) {\r\n                        return (\r\n                            <div key={`dC_${index}`} className={`${Styles.progress_container}`}>\r\n                                <p className={Styles.ProgressTitle}><b>{dC.title}</b></p>\r\n                                <ProgressBar className={Styles.progressbar} now={dC.percentage} label={`${dC.percentage}% `} />\r\n                                <p className={Styles.ProgressDesc}><span className={Styles.clickable} onClick={() => drillDownHandler(dC)}>{dC.complete}</span> out of <b>{dC.total}</b> accounts has <b>{dC.documentType}</b></p>\r\n                                <hr />\r\n                            </div>\r\n                        )\r\n                        // }\r\n                    })\r\n                }\r\n            </Col>\r\n        </Col >\r\n    )\r\n}\r\n\r\nexport default DocumentCoverage","import {\r\n    GetSubscriptions,\r\n    SelectSubscriptions,\r\n    GetUserSubscriptions\r\n} from \"../types.d\";\r\n\r\nimport { subscriptionService } from \"../../services\"\r\n\r\nexport const SubscriptionActionCreator = {\r\n    GetSubscriptions: () => (dispatch: any) => {\r\n        const request = () => ({ type: GetSubscriptions.GET_SUBSCRIPTION_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: GetSubscriptions.GET_SUBSCRIPTION_SUCCESS, payload: data })\r\n        const failure = () => ({ type: GetSubscriptions.GET_SUBSCRIPTION_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        subscriptionService.GetSubscriptions()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    GetUserSubscriptions: () => (dispatch: any) => {\r\n        const request = () => ({ type: GetUserSubscriptions.GET_USER_SUBSCRIPTION_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: GetUserSubscriptions.GET_USER_SUBSCRIPTION_SUCCESS, payload: data })\r\n        const failure = () => ({ type: GetUserSubscriptions.GET_USER_SUBSCRIPTION_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        subscriptionService.GetUserSubscriptions()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    AddSubscription: (subscriptionCode: any) => (dispatch: any) => {\r\n        const request = () => ({ type: SelectSubscriptions.SELECT_SUBSCRIPTION_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: SelectSubscriptions.SELECT_SUBSCRIPTION_SUCCESS, payload: data })\r\n        const failure = () => ({ type: SelectSubscriptions.SELECT_SUBSCRIPTION_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        subscriptionService.AddSubscription(subscriptionCode)\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n            .finally(() => {\r\n                dispatch({ type: SelectSubscriptions.SELECT_SUBSCRIPTION_RESET })\r\n            })\r\n    }\r\n}","import { GetUsage } from \"../types.d\";\r\nimport { commonServices } from \"../../services\"\r\n\r\nexport const UsageActionCreator = {\r\n    getUsage: () => (dispatch: any) => {\r\n        const request = () => ({ type: GetUsage.GET_USAGE_REQUEST, payload: [] })\r\n        const success = (users: any) => ({ type: GetUsage.GET_USAGE_SUCCESS, payload: users })\r\n        const failure = () => ({ type: GetUsage.GET_USAGE_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getUsage()\r\n            .then(\r\n                users => {\r\n                    dispatch(success(users))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Modal } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CgSpinnerAlt } from 'react-icons/cg'\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { SubscriptionActionCreator } from '../../store/actions/subscription.actions'\r\nimport { UsageActionCreator } from '../../store/actions/usage.actions';\r\n\r\nconst Subscription = ({ show, onHide }: { show: any, onHide: any }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const {\r\n        subscriptions,\r\n        error,\r\n        loading,\r\n        userSubscription,\r\n        userError,\r\n        userLoading,\r\n        addSubscriptionSuccess,\r\n        addError,\r\n        addLoading\r\n    } = useSelector((state: any) => ({\r\n        subscriptions: state.subscription.subscriptions.data,\r\n        error: state.subscription.subscriptions.error,\r\n        loading: state.subscription.subscriptions.loading,\r\n        userSubscription: state.subscription.userSubscription.data,\r\n        userError: state.subscription.userSubscription.error,\r\n        userLoading: state.subscription.userSubscription.loading,\r\n        addSubscriptionSuccess: state.subscription.addSubscription.success,\r\n        addError: state.subscription.addSubscription.error,\r\n        addLoading: state.subscription.addSubscription.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (addSubscriptionSuccess) {\r\n            getSubscriptionsAndUserSubscription()\r\n            dispatch(UsageActionCreator.getUsage())\r\n        }\r\n    }, [addSubscriptionSuccess])\r\n\r\n    useEffect(() => {\r\n        getSubscriptionsAndUserSubscription()\r\n    }, [])\r\n\r\n    const getSubscriptionsAndUserSubscription = () => {\r\n        dispatch(SubscriptionActionCreator.GetUserSubscriptions())\r\n        dispatch(SubscriptionActionCreator.GetSubscriptions())\r\n    }\r\n\r\n    const selectSubscription = (code: string) => {\r\n        dispatch(SubscriptionActionCreator.AddSubscription(code))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            className='subscription_modal'\r\n            animation={true}\r\n        >\r\n            <Modal.Body className=\"show-grid\" style={{ width: '50vw' }}>\r\n                <div className=\"background\" >\r\n                    <div className=\"container\">\r\n                        <div className=\"panel pricing-table\">\r\n                            {\r\n                                subscriptions && subscriptions.length > 0 && subscriptions.map((subscription: any, index: number) => {\r\n                                    return (\r\n                                        <div className=\"pricing-plan\" key={`sub_${index}`}>\r\n                                            {subscription.subscriptionCode === 'BT' && <img src=\"https://s22.postimg.cc/8mv5gn7w1/paper-plane.png\" alt=\"\" className=\"pricing-img\" />}\r\n                                            {subscription.subscriptionCode === 'ST' && <img src=\"https://s28.postimg.cc/ju5bnc3x9/plane.png\" alt=\"\" className=\"pricing-img\" />}\r\n                                            {subscription.subscriptionCode === 'PT' && <img src=\"https://s21.postimg.cc/tpm0cge4n/space-ship.png\" alt=\"\" className=\"pricing-img\" />}\r\n                                            <h2 className=\"pricing-header\">{subscription?.description.replace('Tier', '')}</h2>\r\n                                            <ul className=\"pricing-features\">\r\n                                                <li className=\"pricing-features-item\">{subscription.subscriptionValue}</li>\r\n                                            </ul>\r\n                                            {\r\n                                                !addError && addLoading &&\r\n                                                <a className=\"pricing-button\"><CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} /></a>\r\n                                            }\r\n                                            {\r\n                                                !addLoading && userSubscription.subscriptionCode === subscription.subscriptionCode\r\n                                                && <a className=\"pricing-button is-featured\">Subscribed</a>\r\n                                            }\r\n                                            {\r\n                                                !addLoading && userSubscription.subscriptionCode !== subscription.subscriptionCode\r\n                                                && <a className=\"pricing-button\" onClick={() => selectSubscription(subscription.subscriptionCode)}>Subscribe</a>\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default Subscription","import { Button, Col, ProgressBar } from \"react-bootstrap\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nimport SkeletonLoading from \"../../helpers/skeleton-loading\"\r\nimport Subscription from \"./Subscription\"\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { UsageActionCreator } from \"../../store/actions/usage.actions\";\r\n\r\nconst Usage = ({ collapse }: any) => {\r\n    const dispatch = useDispatch()\r\n    const [showSubscription, setShowSubscription] = useState(false);\r\n\r\n    const {\r\n        used,\r\n        percentage,\r\n        total,\r\n        totalDocument,\r\n        loading,\r\n        error\r\n    } = useSelector((state: any) => ({\r\n        used: state.usage.used,\r\n        percentage: state.usage.percentage,\r\n        total: state.usage.total,\r\n        totalDocument: state.usage.totalDocument,\r\n        loading: state.usage.loading,\r\n        error: state.usage.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(UsageActionCreator.getUsage())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Col className={Styles.inner_document_summary}\r\n                style={{\r\n                    borderWidth: collapse ? '0' : '1px',\r\n                    background: collapse ? '#e9ecef' : 'white'\r\n                }}>\r\n                <h5>Usage</h5>\r\n                <br />\r\n                {\r\n                    !error && loading &&\r\n                    <SkeletonLoading repeats={1} />\r\n                }\r\n                {\r\n                    !error && !loading &&\r\n                    <Col sm={12} className=\"no_padding\">\r\n                        <div className={Styles.progress_container}>\r\n                            <ProgressBar striped={false} className={`${Styles.progressbar} ${Number(percentage) < 30 ? 'is_low' : ''} `} now={percentage} label={`${percentage}%`} />\r\n                            <br />\r\n                            <p><b>{(used).toUpperCase()} used out of {total}</b></p>\r\n                            <p><b>Total {totalDocument} document{totalDocument > 1 ? \"s\" : \"\"}</b></p>\r\n                            <Button variant=\"dark\" onClick={() => setShowSubscription(true)}>Upgrade Your Plan</Button>\r\n                        </div>\r\n                    </Col>\r\n                }\r\n            </Col>\r\n            <Subscription onHide={setShowSubscription} show={showSubscription} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Usage","import { Button, Col } from \"react-bootstrap\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { InvoiceActionCreator } from \"../../store/actions/invoice.actions\";\r\nimport SkeletonLoading from \"../../helpers/skeleton-loading\";\r\nimport { axiosCustom } from \"../../helpers/util\";\r\nimport saveAs from \"file-saver\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\n\r\ninterface invoice {\r\n    amountPay: string\r\n    partnerName: string\r\n}\r\n\r\nconst Invoice = ({ collapse }: any) => {\r\n    const { addToast } = useToasts();\r\n    const dispatch = useDispatch()\r\n    const {\r\n        invoicing,\r\n        error,\r\n        loading\r\n    } = useSelector((state: any) => ({\r\n        invoicing: state.invoice.data,\r\n        error: state.invoice.error,\r\n        loading: state.invoice.loading\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(InvoiceActionCreator.getInvoice('month'))\r\n    }, [])\r\n\r\n    const downloadSampleFile = () => {\r\n        addToast(createMessage('info', `DOWNLOAD_STARTED`, ''), { appearance: 'info', autoDismiss: true })\r\n        let sampleFile: string = `${process.env.REACT_APP_BASE_URL}/${process.env.REACT_APP_DOCUMENT_SERVICE}/user/document/cost/invoice/download`\r\n        axiosCustom.get(sampleFile, { responseType: 'arraybuffer', params: { tenure: 'month' } })\r\n            .then((response) => {\r\n                var blob = new Blob([response.data], { type: 'application/pdf' });\r\n                saveAs(blob, 'invoice.pdf');\r\n            }).finally(() => {\r\n                addToast(createMessage('info', `DOWNLOAD_SUCCESSFUL`, ''), { appearance: 'success', autoDismiss: true })\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col className={Styles.inner_document_summary}\r\n                style={{\r\n                    borderWidth: collapse ? '0' : '1px',\r\n                    background: collapse ? '#e9ecef' : 'white'\r\n                }}>\r\n                <h5>Invoices</h5>\r\n                <br />\r\n                {\r\n                    !error && loading &&\r\n                    <SkeletonLoading repeats={1} />\r\n                }\r\n                {\r\n                    !error && !loading &&\r\n                    <Col sm={12} className=\"no_padding\">\r\n                        <div className={Styles.progress_container} style={{\r\n                            background: '#ebeaea',\r\n                            padding: '1rem',\r\n                            borderRadius: '6px',\r\n                            margin: 0,\r\n                            marginBottom: '1rem'\r\n                        }}>\r\n                            {\r\n                                invoicing && invoicing.listOfPartner && invoicing.listOfPartner.map((invoice: invoice, index: number) => {\r\n                                    return <p key={`invoice_${index}`} style={{\r\n                                        borderBottom: '2px solid white',\r\n                                        justifyContent: 'space-between',\r\n                                        display: 'flex',\r\n                                        padding: '5px 0',\r\n                                        margin: 0\r\n                                    }}><span>{invoice.partnerName}</span> - <span><b>$ {(Number(invoice.amountPay)).toFixed(2)}</b></span></p>\r\n                                })\r\n                            }\r\n                            <h3 style={{\r\n                                textAlign: 'right',\r\n                                marginTop: '1rem'\r\n                            }}>${(Number(invoicing.costCollectByClient)).toFixed(2)}</h3>\r\n                        </div>\r\n                        <Button variant=\"dark\" onClick={() => downloadSampleFile()}>Download Detailed Report</Button>\r\n                    </Col>\r\n                }\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Invoice","import { useEffect, useState } from \"react\";\r\nimport { Col, Form, Row, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { BsArrowsAngleContract, BsArrowsAngleExpand } from \"react-icons/bs\"\r\nimport MyDocuments from \"./MyDocuments\";\r\nimport ReceivedDocumentRequests from \"./ReceivedDocumentRequests\";\r\nimport SentDocumentRequests from \"./SentDocumentRequests\";\r\nimport DownloadHistory from \"./DownloadHistory\";\r\nimport { MiscActionCreator } from \"../../store/actions/common/misc.actions\";\r\nimport DocumentRequirement from \"./DocumentRequirement\";\r\nimport DocumentCoverage from \"./DocumentCoverage\";\r\nimport Usage from \"./Usage\";\r\nimport Invoice from \"./Invoice\";\r\n\r\nconst Documents = ({ location }: { location: any }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [collapse, setCollapse] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(MiscActionCreator.getColumnForAllTables())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const tab = location.pathname.split('/')\r\n        setSelectedTab(tab[tab.length - 1])\r\n    }, [location])\r\n\r\n\r\n    const documentSummary = () => {\r\n        return <Col sm={12} className=\"form_container\">\r\n            <Row>\r\n                <Col sm={11}><h4 style={{ marginLeft: '1rem' }}>Document Summary</h4></Col>\r\n                <Col sm={1} style={{ textAlign: 'right', paddingRight: '2rem', cursor: 'pointer' }} onClick={() => setCollapse((collapse) => !collapse)}>\r\n                    {!collapse && <BsArrowsAngleContract size={20} />}\r\n                    {collapse && <BsArrowsAngleExpand size={20} />}\r\n                </Col>\r\n            </Row>\r\n            <Col sm={12} className={collapse ? Styles.collapse_summary : ''} style={{ overflowX: 'scroll' }}>\r\n                <Row style={{ minWidth: '110%' }}>\r\n                    <Col sm={5} >\r\n                        <DocumentCoverage collapse={collapse} />\r\n                    </Col >\r\n                    <Col sm={5}  >\r\n                        <DocumentRequirement collapse={collapse} />\r\n                    </Col>\r\n                    <Col sm={2} >\r\n                        <Usage collapse={collapse} />\r\n                        <Invoice collapse={collapse} />\r\n                    </Col>\r\n                </Row >\r\n            </Col >\r\n        </Col >\r\n    }\r\n    const handleSelect = (e: any) => {\r\n        history.push({\r\n            pathname: `/documents/${e}`\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                documentSummary()\r\n            }\r\n            <br />\r\n            <Col className=\"no_padding\">\r\n                <Tabs\r\n                    activeKey={selectedTab}\r\n                    id=\"fill-tab-example\"\r\n                    fill\r\n                    className=\"mb-3\"\r\n                    onSelect={handleSelect}\r\n                >\r\n                    <Tab eventKey=\"my_documents\" title=\"My Documents\">\r\n                        {(selectedTab === \"my_documents\" || selectedTab === \"my_documents_side\") && <MyDocuments />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"sent_document_requests\" title=\"Sent Document Requests\">\r\n                        {(selectedTab === \"sent_document_requests\" || selectedTab === \"sent_document_requests_side\") && <SentDocumentRequests />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"received_document_requests\" title=\"Received Document Request\">\r\n                        {(selectedTab === \"received_document_requests\" || selectedTab === \"received_document_requests_side\") && <ReceivedDocumentRequests />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"download_history\" title=\"Download History\">\r\n                        {(selectedTab === \"download_history\" || selectedTab === \"download_history_side\") && <DownloadHistory />}\r\n                    </Tab>\r\n                    {/*<Tab eventKey=\"templates\" title=\"\">\r\n                    </Tab> */}\r\n                </Tabs >\r\n            </Col >\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Documents","import {\r\n    GetDownloadHistory,\r\n    SaveDownloadHistory,\r\n    DeleteDownloadHistory\r\n} from \"../types.d\";\r\nimport { downloadHistory } from \"../../services\"\r\n\r\nexport const DownloadHistoryActionCreator = {\r\n    getDownloadHistory: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.getDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDownloadHistory: (requestPayload: any) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.saveDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n    deleteDownloadHistory: (id: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.deleteDownloadHistory(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n}"],"names":["_ref","onHide","show","confirmDelete","_ref$text","text","_ref$actionText","actionText","details","type","deleteRef","useRef","useEffect","_jsxs","Modal","centered","size","animation","children","_jsx","Header","closeButton","Title","id","Body","className","Container","folderName","documentType","productName","requestedFrom","Footer","Button","variant","ref","onClick","ShareActionCreator","payload","dispatch","ShareFolder","SHARE_FOLDER_REQUEST","shareService","shareFolder","then","data","SHARE_FOLDER_SUCCESS","success","error","SHARE_FOLDER_FAILURE","finally","SHARE_FOLDER_RESET","ShareFile","SHARE_FILE_REQUEST","shareDocument","SHARE_FILE_SUCCESS","SHARE_FILE_FAILURE","SHARE_FILE_RESET","RevokeFile","REVOKE_FILE_REQUEST","revokeShareDocument","REVOKE_FILE_SUCCESS","REVOKE_FILE_FAILURE","REVOKE_FILE_RESET","parentComponent","searchHandler","_useState","useState","_useState2","_slicedToArray","setDetails","useDispatch","_useState3","shareDetail","_useState4","formError","setFormError","_useState5","_useState6","isEnable","setIsEnable","_useState7","_useState8","toSentList","setToSentList","_useState9","_useState10","emailToRemove","setEmailToRemove","_useState11","_useState12","usersUpdates","setUsersUpdated","_useSelector","useSelector","state","users","loading","filterUserList","_useSelector2","shareFolderLoading","share","shareFolderSuccess","shareFolderError","shareFileLoading","shareFileSuccess","shareFileError","revokeFolderLoading","revokeFolderSuccess","revokeFolderError","revokeFileLoading","revokeFileSuccess","revokeFileError","_detailTemp$sharedWit","detailTemp","Object","assign","sharedWith","push","apply","_toConsumableArray","current","clear","filter","dT","email","UserActionCreator","getConnectedUsers","tempUsers","sharedArray","map","shared","user","indexOf","loginKey","concat","documentName","Form","Row","Col","lg","md","Group","as","sm","Typeahead","isLoading","labelKey","multiple","allowNew","newSelectionPrefix","onChange","selected","selectedUpdated","s","firstName","customOption","principleId","orgType","orgCode","options","style","color","paddingLeft","Label","Styles","people_share_with","OverlayTrigger","placement","delay","hide","overlay","Tooltip","AiFillWarning","details_warning","CgSpinnerAlt","length","share_with_ul","sW","index","share_with_li","share_with_div","marginRight","profilePicture","src","alt","share_with_span_pic","name","charAt","share_with_p","userOrgCode","share_with_button","formObj","revokeHandler","CgTrash","margin","cursor","textAlign","width","disabled","formIsValid","key","k","validate","history","useHistory","addToast","useToasts","sortElement","setSortElement","sortType","setSortType","pageSize","setPageSize","pageNumber","setPageNumber","uploadDocModal","setUploadDocModal","columnsSaved","setColumnsSaved","_useState13","_useState14","showAdvanceSearch","setShowAdvanceSearch","_useState15","_useState16","showShare","setShowShare","_useState17","_useState18","showDeleteConfirm","setShowDeleteConfirm","_useState19","_useState20","_AdvanceSearchHook","AdvanceSearchHook","_AdvanceSearchHook2","searchObj","_AdvanceSearchHook2$","setInitObj","textSearch","advanceSearch","resetHandler","folders","myDocuments","columns","totalCount","defaultColumns","misc","allTableColumns","deleteRequest","deleteSuccess","deleteError","downloadRequest","folderDownload","downloadError","downloadSuccess","downloadLinks","sortOrder","sortParam","search","dC","tableName","attributeNodeKey","createMessage","appearance","autoDismiss","dL","downloadFromLink","MyDocumentsActionCreator","restDownloadFolder","showDocumentListPage","pathname","_objectSpread","getMyDocumentFolders","downloadDocument","_asyncToGenerator","_regeneratorRuntime","mark","_callee","document","wrap","_context","prev","next","downloadFolder","stop","_x","arguments","_Fragment","AdvanceSearch","flag","textSearchHook","advanceSearchHook","resetHandlerHook","TableComponent","actionArray","handleNavigate","column","currencyColumns","header","currentPage","setCurrentPage","searchCriteria","hideShareArray","addEditArray","download","view","delete","onPaginationChange","handlePagination","DeleteConfirm","deleteFolder","DocumentUpload","accountId","Share","ReceiveDocumentRequestActionCreator","requestPayload","GetReceiveDocumentRequest","GET_RECEIVE_DOCUMENT_REQUEST_REQUEST","receiveDocumentRequest","getReceiveDocumentRequest","sent","GET_RECEIVE_DOCUMENT_REQUEST_SUCCESS","GET_RECEIVE_DOCUMENT_REQUEST_FAILURE","failure","DeleteReceiveDocumentRequest","DELETE_RECEIVE_DOCUMENT_REQUEST_REQUEST","deleteReceiveDocumentRequest","DELETE_RECEIVE_DOCUMENT_REQUEST_SUCCESS","DELETE_RECEIVE_DOCUMENT_REQUEST_FAILURE","DELETE_RECEIVE_DOCUMENT_REQUEST_RESET","showDocument","setShowDocument","documentToShow","setDocumentToShow","_useState21","_useState22","receiveDocumentRequests","downloadRequestSuccess","downloadRequestError","deleteRequestSuccess","deleteRequestError","columnNames","downloadHandler","downloadSignedFile","DownloadHistoryActionCreator","saveDownloadHistory","documentId","fulFillHandler","SummaryActionCreator","reRender","upload","viewDocument","ViewDocument","documentData","SentDocumentRequestActionCreator","GetSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequestService","getSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_SUCCESS","GET_SENT_DOCUMENT_REQUEST_FAILURE","SentDocumentRequest","SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequest","SENT_DOCUMENT_REQUEST_SUCCESS","SENT_DOCUMENT_REQUEST_FAILURE","SENT_DOCUMENT_REQUEST_RESET","DeleteDocumentRequest","DELETE_DOCUMENT_REQUEST_REQUEST","deleteDocumentRequest","DELETE_DOCUMENT_REQUEST_SUCCESS","DELETE_DOCUMENT_REQUEST_FAILURE","DELETE_DOCUMENT_REQUEST_RESET","RequestNewDocument","_ref2","sendRequestRef","_useState25","_useState26","_useState27","_useState28","usersSelected","setUserSelected","_useState29","sendRequests","originalAccountNumber","clientAccountNumber","docTypeCode","_useState30","clientAccountNumbers","handleRequest","e","preventDefault","_sendRequestRef$curre","document_type","console","log","value","requestObj","center_document","onSubmit","modifiedFirstName","Control","cAn","DocumentTypes","button_center","aRef","showBulkRequest","setShowBulkRequest","showRequestNewDocument","setShowRequestNewDocument","_useState23","_useState24","sentDocumentRequests","sendRequest","sendRequestSuccess","sendRequestError","setTimeout","href","target","pageCount","setPageCount","downloadHistory","saveDownload","saveDownloadSuccess","saveDownloadError","deleteDownloadHistory","deleteDownloadHistorySuccess","deleteDownloadHistoryError","undefined","getDownloadHistory","documentsize","downloadDate","downloadStatus","pause","TENURES","statusCode","status","setSearchObj","formSearchAccount","tenures","setTenures","productTypes","types","productType","MiscActionCreator","getClientAccountNumbers","TypesActionCreator","getProductTypes","coverageHandler","tempCoverage","tenure","product","shortName","fullName","lastName","InvoiceActionCreator","GetInvoice","GET_INVOICE_REQUEST","invoiceService","GetInvoices","GET_INVOICE_SUCCESS","GET_INVOICE_FAILURE","ChartJS","register","ArcElement","Legend","ChartDataLabels","responsive","maintainAspectRatio","cutout","layout","padding","plugins","datalabels","font","weight","family","legend","position","DATA_REQUESTED","labels","datasets","label","backgroundColor","borderColor","borderWidth","DATA_SENT","collapse","userType","setUserType","duration","portfolio","userId","dataRequested","setDataRequested","dataSent","setDataSent","requestedSummary","summary","sentSummary","errorSent","loadingSent","loadingRequest","errorRequest","JSON","stringify","total","values","dataRequestedTemp","dataSentTemp","userService","getUserType","getSentSummary","memoRequested","useMemo","Doughnut","redraw","memoSent","isChartEmpty","fullfilled","open","overDue","inner_document_summary","background","SummaryFilters","maxHeight","minHeight","chart_container","display","alignItems","height","justifyContent","NoRecord","documentCoverage","loadingCoverage","errorCoverage","resetDocumentSummary","getDocumentCoverage","progress_container_outer","SkeletonLoading","repeats","progress_container","ProgressTitle","title","ProgressBar","progressbar","now","percentage","ProgressDesc","clickable","searchObjTemp","params","URLSearchParams","toString","drillDownHandler","complete","SubscriptionActionCreator","GetSubscriptions","GET_SUBSCRIPTION_REQUEST","subscriptionService","GET_SUBSCRIPTION_SUCCESS","GET_SUBSCRIPTION_FAILURE","GetUserSubscriptions","GET_USER_SUBSCRIPTION_REQUEST","GET_USER_SUBSCRIPTION_SUCCESS","GET_USER_SUBSCRIPTION_FAILURE","subscriptionCode","SelectSubscriptions","SELECT_SUBSCRIPTION_REQUEST","AddSubscription","SELECT_SUBSCRIPTION_SUCCESS","SELECT_SUBSCRIPTION_FAILURE","SELECT_SUBSCRIPTION_RESET","UsageActionCreator","GetUsage","GET_USAGE_REQUEST","commonServices","getUsage","GET_USAGE_SUCCESS","GET_USAGE_FAILURE","subscriptions","subscription","userSubscription","userError","userLoading","addSubscriptionSuccess","addSubscription","addError","addLoading","getSubscriptionsAndUserSubscription","description","replace","subscriptionValue","code","showSubscription","setShowSubscription","used","usage","totalDocument","striped","Number","toUpperCase","Subscription","invoicing","invoice","borderRadius","marginBottom","listOfPartner","borderBottom","partnerName","amountPay","toFixed","marginTop","costCollectByClient","sampleFile","process","axiosCustom","get","responseType","response","blob","Blob","saveAs","downloadSampleFile","location","setCollapse","selectedTab","setSelectedTab","getColumnForAllTables","tab","split","marginLeft","paddingRight","BsArrowsAngleContract","BsArrowsAngleExpand","collapse_summary","overflowX","minWidth","DocumentCoverage","DocumentRequirement","Usage","Invoice","Tabs","activeKey","fill","onSelect","Tab","eventKey","MyDocuments","SentDocumentRequests","ReceivedDocumentRequests","DownloadHistory","GetDownloadHistory","GET_DOWNLOAD_HISTORY_REQUEST","GET_DOWNLOAD_HISTORY_SUCCESS","GET_DOWNLOAD_HISTORY_FAILURE","SaveDownloadHistory","SAVE_DOWNLOAD_HISTORY_REQUEST","SAVE_DOWNLOAD_HISTORY_SUCCESS","SAVE_DOWNLOAD_HISTORY_FAILURE","SAVE_DOWNLOAD_HISTORY_RESET","DeleteDownloadHistory","DELETE_DOWNLOAD_HISTORY_REQUEST","DELETE_DOWNLOAD_HISTORY_SUCCESS","DELETE_DOWNLOAD_HISTORY_FAILURE","DELETE_DOWNLOAD_HISTORY_RESET"],"sourceRoot":""}