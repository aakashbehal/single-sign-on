{"version":3,"sources":["store/actions/common/types.actions.tsx","containers/DocumentManager/DocumentManager.module.sass","store/actions/summary.actions.tsx","components/modal/DeleteConfirm.tsx","components/Table/pagination.tsx","components/Table/Table.tsx","components/Common/AdvanceSearch.tsx","store/actions/downloadHistory.actions.tsx","components/CustomHooks/FileUploadHook.tsx","components/modal/DocumentUpload.tsx","components/Common/DocumentType.tsx","components/modal/ViewDocument.tsx","store/actions/myDocuments.actions.tsx","components/Common/Common.module.sass","components/modal/Modal.module.sass","containers/DocumentManager/MyDocuments.tsx","store/actions/receivedDocumentRequest.actions.tsx","containers/DocumentManager/ReceivedDocumentRequests.tsx","store/actions/sentDocumentRequest.actions.tsx","store/actions/user.actions.tsx","containers/DocumentManager/SentDocumentRequests.tsx","containers/DocumentManager/DownloadHistory.tsx","containers/DocumentManager/Documents.tsx"],"names":["TypesActionCreator","getDocTypes","type","dispatch","DocTypes","DOC_TYPES_REQUEST","commonServices","getFilterTypes","then","compliance","sort","a","b","keyvalue","DOC_TYPES_SUCCESS","payload","success","error","DOC_TYPES_FAILURE","failure","getCommunicationType","CommunicationType","COMMUNICATION_TYPE_REQUEST","types","COMMUNICATION_TYPE_SUCCESS","COMMUNICATION_TYPE_FAILURE","getBankruptcyType","BankruptcyType","BANKRUPTCY_TYPE_REQUEST","BANKRUPTCY_TYPE_SUCCESS","BANKRUPTCY_TYPE_FAILURE","getDocumentTypes","DocumentsType","DOCUMENTS_TYPE_REQUEST","DOCUMENTS_TYPE_SUCCESS","DOCUMENTS_TYPE_FAILURE","getProductTypes","ProductTypes","PRODUCT_TYPE_REQUEST","products","PRODUCT_TYPE_SUCCESS","PRODUCT_TYPE_FAILURE","module","exports","SummaryActionCreator","getReceiveSummary","RequestedDocumentSummary","REQUESTED_DOCUMENT_SUMMARY_REQUEST","summaryService","data","REQUESTED_DOCUMENT_SUMMARY_SUCCESS","REQUESTED_DOCUMENT_SUMMARY_FAILURE","getSentSummary","SentDocumentSummary","SENT_DOCUMENT_SUMMARY_REQUEST","SENT_DOCUMENT_SUMMARY_SUCCESS","SENT_DOCUMENT_SUMMARY_FAILURE","reRender","ReRender","RE_RENDER_REQUEST","setTimeout","RE_RENDER_RESET","DeleteConfirm","onHide","show","confirmDelete","text","actionText","details","deleteRef","useRef","useEffect","aria-labelledby","centered","size","animation","Header","closeButton","Title","id","Body","className","documentType","productName","requestedFrom","Footer","variant","ref","onClick","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","useState","totalPages","setTotalPages","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","max","min","style","marginTop","Row","Col","md","xs","First","disabled","Prev","Next","Last","CustomDropdown","trigger","menu","React","open","setOpen","cloneElement","map","menuItem","index","props","TableComponent","isLoading","onPaginationChange","totalCount","isPagination","actionArray","setCurrentPage","handleNavigate","colorArray","currencyColumns","sorting","sortElement","sortType","addEditArray","tableAction","parentComponent","loadingHeight","hideShareArray","searchCriteria","useDispatch","history","useHistory","isCheckAll","setIsCheckAll","isCheck","setIsCheck","headers","setHeaders","pageSize","setPageSize","setShow","pageSizes","showHideColumns","setShowHideColumns","length","Object","keys","filter","item","includes","handleClickHideShow","e","target","checked","columnsTemp","assign","columnUpdated","MiscActionCreator","saveColumn","servicingRequestIndicator","header","d","position","left","requestStatus","OverlayTrigger","placement","delay","hide","overlay","Tooltip","color","ragStatus","priorityIndicator","priorityExecution","sortBy","descElements","document","querySelectorAll","ascElements","Array","from","descElem","classList","remove","ascElem","querySelector","add","complianceSplitter","complianceIds","split","complianceId","pathname","search","clientId","clientAccountNumber","equabliAccountNumber","goToCompliance","serviceOfferedHandler","services","service","background","borderRadius","padding","marginRight","capacityHandler","textAlign","marginBottom","paddingLeft","count","commissionRateHandler","percentage","complianceHandler","collectionsHandler","amount","handleClick","Number","dueDateHandler","Date","dueDate","tableHeaderHandler","lineHeight","backgroundColor","Form","Control","onChange","li","folderName","cursor","indexOf","edit","view","minWidth","openSolModal","tableBodyHandler","zIndex","index2","slaStatus","checkType","display","alignItems","contacts","contact","name","phone","sharedWith","sW","email","marginLeft","charAt","viewDocument","handleDocumentName","href","justifyContent","Button","recordStatusVal","margin","delete","update","execute","undefined","upload","download","share","h","defaultChecked","width","Group","as","Label","column","sm","value","defaultValue","Table","striped","bordered","hover","responsive","page","AdvanceSearch","Styles","searchHandler","setAdvanceSearchObj","advanceSearchObj","showAdvanceSearch","setShowAdvanceSearch","advanceSearchRef","documentTypeRef","advanceSearchActive","setAdvanceSearchActive","generationDateFrom","generationDateTo","uploadDateFrom","uploadDateTo","shareDateFrom","shareDateTo","receivedDateFrom","receivedDateTo","dates","setDates","checkIfAdvanceSearchIsActive","debouncedSearch","debounce","criteria","handleReset","current","reset","dateHandler","date","dateTemp","search_input","my_document_search","onMouseDown","handleSearchInput","placeholder","advanceSearch","inActive","advance_search","onSubmit","preventDefault","advanceSearchTemp","document_type","document_name","original_account_number","client_account_number","equabli_account_number","portfolio_id","docTypeCode","documentName","dateFormatterForRequestDocManager","receiveDateFrom","receiveDateTo","originalAccountNumber","portfolioId","advanceSearchHandler","lg","format","monthPlaceholder","dayPlaceholder","yearPlaceholder","button_right","DownloadHistoryActionCreator","getDownloadHistory","requestPayload","GetDownloadHistory","GET_DOWNLOAD_HISTORY_REQUEST","downloadHistory","sent","GET_DOWNLOAD_HISTORY_SUCCESS","GET_DOWNLOAD_HISTORY_FAILURE","saveDownloadHistory","SaveDownloadHistory","SAVE_DOWNLOAD_HISTORY_REQUEST","SAVE_DOWNLOAD_HISTORY_SUCCESS","SAVE_DOWNLOAD_HISTORY_FAILURE","finally","SAVE_DOWNLOAD_HISTORY_RESET","deleteDownloadHistory","DeleteDownloadHistory","DELETE_DOWNLOAD_HISTORY_REQUEST","DELETE_DOWNLOAD_HISTORY_SUCCESS","DELETE_DOWNLOAD_HISTORY_FAILURE","DELETE_DOWNLOAD_HISTORY_RESET","FileUploadHook","files","state","setState","zipTargetFiles","zipFile","file","zip","require","matrixFile","generateAsync","content","File","DocumentUpload","accountId","addToast","useToasts","fileToUpload","dragActive","setDragActive","inputRef","setFiles","setUserLoggedIn","formSubmitted","setFormSubmitted","fileLengthSingle","fileSize","formError","setFormError","noMatrixFile","SetNoMatrixFile","user","userService","getUser","validateUpload","formObj","formIsValid","key","k","JSON","stringify","uploadFile","onSubmitHandler","config","API_URL","process","formData","FormData","append","axiosCustom","post","response","urls","handleResponse","fileUrl","responseFilePath","createMessage","appearance","autoDismiss","handleDrag","stopPropagation","handleFiles","tempFiles","onButtonClick","click","downloadSampleFile","sampleFile","get","responseType","blob","Blob","saveAs","Modal","Container","list_upload_container","list_upload","splice","deleteHandler","onDragEnter","accept","multiple","fontSize","fontWeight","onDragLeave","onDragOver","onDrop","dataTransfer","form_error","details_warning","DocumentTypes","forwardRef","selectedValue","isDisabled","useSelector","documentTypes","loading","setValue","useImperativeHandle","partnerName","agency","shortCode","ViewDocument","documentData","setDocumentType","imageUrl","setImageUrl","loadingImage","setLoadingImage","console","log","splitDocumentName","fileName","viewImage","getSignedURL","objectKey","filePath","center_document","minHeight","onLoad","src","alt","height","MyDocumentsActionCreator","getMyDocumentFolders","MyDocumentsFolder","MY_DOCUMENTS_FOLDER_REQUEST","myDocumentsService","MY_DOCUMENTS_FOLDER_SUCCESS","MY_DOCUMENTS_FOLDER_FAILURE","getMyDocumentList","MyDocumentsList","MY_DOCUMENTS_LIST_REQUEST","MY_DOCUMENTS_LIST_SUCCESS","MY_DOCUMENTS_LIST_FAILURE","resetDocumentList","MY_DOCUMENTS_LIST_RESET","MyDocuments","setSortElement","setSortType","pageCount","setPageCount","uploadDocModal","setUploadDocModal","columnsSaved","setColumnsSaved","folders","myDocuments","columns","defaultColumns","misc","allTableColumns","dC","tableName","columnNames","showDocumentListPage","pageNumber","textValue","searchObj","sortOrder","sortParam","downloadDocument","createZipForFolderDownload","documentPaths","obj","flag","handlePagination","ReceiveDocumentRequestActionCreator","GetReceiveDocumentRequest","GET_RECEIVE_DOCUMENT_REQUEST_REQUEST","receiveDocumentRequest","getReceiveDocumentRequest","GET_RECEIVE_DOCUMENT_REQUEST_SUCCESS","GET_RECEIVE_DOCUMENT_REQUEST_FAILURE","DeleteReceiveDocumentRequest","DELETE_RECEIVE_DOCUMENT_REQUEST_REQUEST","deleteReceiveDocumentRequest","DELETE_RECEIVE_DOCUMENT_REQUEST_SUCCESS","DELETE_RECEIVE_DOCUMENT_REQUEST_FAILURE","DELETE_RECEIVE_DOCUMENT_REQUEST_RESET","tenuresInit","statusCode","status","ReceivedDocumentRequests","aRef","showDeleteConfirm","setShowDeleteConfirm","setDetails","showDocument","setShowDocument","documentToShow","setDocumentToShow","receiveDocumentRequests","downloadRequest","downloadRequestSuccess","downloadRequestError","deleteRequest","deleteRequestSuccess","deleteRequestError","downloadHandler","documentId","fulFillHandler","handleDetails","SentDocumentRequestActionCreator","GetSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequestService","getSentDocumentRequest","GET_SENT_DOCUMENT_REQUEST_SUCCESS","GET_SENT_DOCUMENT_REQUEST_FAILURE","SentDocumentRequest","SENT_DOCUMENT_REQUEST_REQUEST","sentDocumentRequest","SENT_DOCUMENT_REQUEST_SUCCESS","SENT_DOCUMENT_REQUEST_FAILURE","SENT_DOCUMENT_REQUEST_RESET","DeleteDocumentRequest","DELETE_DOCUMENT_REQUEST_REQUEST","deleteDocumentRequest","DELETE_DOCUMENT_REQUEST_SUCCESS","DELETE_DOCUMENT_REQUEST_FAILURE","DELETE_DOCUMENT_REQUEST_RESET","UserActionCreator","ConnectedUsers","CONNECTED_USER_REQUEST","getConnectedUsers","users","CONNECTED_USER_SUCCESS","CONNECTED_USER_FAILURE","RequestNewDocument","sendRequestRef","defaultSelect","usersSelected","setUserSelected","handleRequest","labelKey","defaultSelected","allowNew","newSelectionPrefix","selected","selectedUpdated","s","firstName","principleId","orgType","orgCode","options","DocumentType","button_center","SentDocumentRequests","showBulkRequest","setShowBulkRequest","showRequestNewDocument","setShowRequestNewDocument","sentDocumentRequests","sendRequest","sendRequestSuccess","sendRequestError","DownloadHistory","saveDownload","saveDownloadSuccess","saveDownloadError","deleteDownloadHistorySuccess","deleteDownloadHistoryError","documentsize","downloadDate","downloadStatus","pause","ChartJS","register","ArcElement","Legend","ChartDataLabels","productsInit","portfolioInit","usersInit","documentCoverageArr","title","accountsDone","accountsTotal","cutout","plugins","datalabels","legend","DATA_REQUESTED","labels","datasets","label","borderColor","borderWidth","DATA_SENT","Documents","location","tenures","portfolios","documentCoverage","collapse","setCollapse","selectedTab","setSelectedTab","dataRequested","setDataRequested","dataSent","setDataSent","requestedSummary","summary","sentSummary","errorSent","loadingSent","loadingRequest","errorRequest","values","dataRequestedTemp","dataSentTemp","getColumnForAllTables","tab","memoRequested","memoSent","paddingRight","collapse_summary","inner_document_summary","tenure","portfolio","product","progress_container_outer","progress_container","ProgressTitle","ProgressBar","progressbar","now","ProgressDesc","clickable","chart_container","right_border","Tabs","activeKey","fill","onSelect","Tab","eventKey"],"mappings":"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","file":"static/js/6.c94848b9.chunk.js","sourcesContent":["import {\r\n    DocTypes,\r\n    CommunicationType,\r\n    BankruptcyType,\r\n    DocumentsType,\r\n    ProductTypes\r\n} from \"../../types.d\";\r\nimport { commonServices } from \"../../../services\"\r\n\r\nexport const TypesActionCreator = {\r\n\r\n    getDocTypes: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: DocTypes.DOC_TYPES_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocTypes.DOC_TYPES_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocTypes.DOC_TYPES_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                compliance => {\r\n                    compliance.sort((a, b) => {\r\n                        if (a.keyvalue > b.keyvalue) return 1\r\n                        else if (a.keyvalue < b.keyvalue) return -1\r\n                        else return 0\r\n                    })\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getCommunicationType: (type: any) => (dispatch: any) => {\r\n        const request = () => ({ type: CommunicationType.COMMUNICATION_TYPE_REQUEST })\r\n        const success = (types: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_SUCCESS, payload: types })\r\n        const failure = (error: any) => ({ type: CommunicationType.COMMUNICATION_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(type)\r\n            .then(\r\n                types => {\r\n                    dispatch(success(types))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getBankruptcyType: () => (dispatch: any) => {\r\n        const request = () => ({ type: BankruptcyType.BANKRUPTCY_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: BankruptcyType.BANKRUPTCY_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getFilterTypes(`bankruptcy_type`)\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getDocumentTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: DocumentsType.DOCUMENTS_TYPE_REQUEST })\r\n        const success = (compliance: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_SUCCESS, payload: compliance })\r\n        const failure = (error: any) => ({ type: DocumentsType.DOCUMENTS_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getDocumentTypes()\r\n            .then(\r\n                compliance => {\r\n                    dispatch(success(compliance))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getProductTypes: () => (dispatch: any) => {\r\n        const request = () => ({ type: ProductTypes.PRODUCT_TYPE_REQUEST })\r\n        const success = (products: any) => ({ type: ProductTypes.PRODUCT_TYPE_SUCCESS, payload: products })\r\n        const failure = (error: any) => ({ type: ProductTypes.PRODUCT_TYPE_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        commonServices.getProductTypes()\r\n            .then(\r\n                products => {\r\n                    dispatch(success(products))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner_document_summary\":\"DocumentManager_inner_document_summary__1xehM\",\"progressbar\":\"DocumentManager_progressbar__2Od-Q\",\"ProgressTitle\":\"DocumentManager_ProgressTitle__1hXuS\",\"ProgressDesc\":\"DocumentManager_ProgressDesc__2BzLN\",\"progress_container_outer\":\"DocumentManager_progress_container_outer__11FFH\",\"progress_container\":\"DocumentManager_progress_container__X0Dj6\",\"clickable\":\"DocumentManager_clickable__2DoGs\",\"chart_container\":\"DocumentManager_chart_container__2sV_1\",\"right_border\":\"DocumentManager_right_border__2EE-Y\",\"search_input\":\"DocumentManager_search_input__hJoxN\",\"search\":\"DocumentManager_search__3LBiF\",\"advanceSearch\":\"DocumentManager_advanceSearch__2ZsrR\",\"my_document_search\":\"DocumentManager_my_document_search__1UjVl\",\"collapse_summary\":\"DocumentManager_collapse_summary__1iDDw\",\"advance_search\":\"DocumentManager_advance_search__1Evgo\",\"hide\":\"DocumentManager_hide__RqSZ3\",\"show\":\"DocumentManager_show__oRApy\",\"active\":\"DocumentManager_active__30dZH\",\"inActive\":\"DocumentManager_inActive__2y9uq\",\"list_upload_container\":\"DocumentManager_list_upload_container__1v3Pa\",\"list_upload\":\"DocumentManager_list_upload__2y6p7\",\"form_error\":\"DocumentManager_form_error__3jlCD\",\"button_right\":\"DocumentManager_button_right__2TgaU\"};","import {\r\n    RequestedDocumentSummary,\r\n    SentDocumentSummary,\r\n    ReRender\r\n} from \"../types.d\";\r\nimport { summaryService } from \"../../services\"\r\n\r\nexport const SummaryActionCreator = {\r\n    getReceiveSummary: () => (dispatch: any) => {\r\n        const request = () => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_SUCCESS, payload: data })\r\n        const failure = () => ({ type: RequestedDocumentSummary.REQUESTED_DOCUMENT_SUMMARY_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        summaryService.getReceiveSummary()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    getSentSummary: () => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_REQUEST, payload: [] })\r\n        const success = (data: any) => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_SUCCESS, payload: data })\r\n        const failure = () => ({ type: SentDocumentSummary.SENT_DOCUMENT_SUMMARY_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        summaryService.getSentSummary()\r\n            .then(\r\n                data => {\r\n                    dispatch(success(data))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    },\r\n    reRender: () => (dispatch: any) => {\r\n        dispatch({ type: ReRender.RE_RENDER_REQUEST })\r\n        setTimeout(() => {\r\n            dispatch({ type: ReRender.RE_RENDER_RESET })\r\n        }, 1000)\r\n    }\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\n\r\nconst DeleteConfirm = ({ onHide, show, confirmDelete, text = \"Deletion\", actionText = 'Delete', details, type }) => {\r\n    const deleteRef: any = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        if (deleteRef !== null) {\r\n            // deleteRef.current.focus()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"sm\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Confirm {text}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            {\r\n                details && type === 'costConfiguration' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Cost\r\n                            Configuration for <b>{details.documentType}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'requiredDocuments' &&\r\n                < Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Required Document\r\n                            Configuration for <b>{details.productName}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'sentDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            {\r\n                details && type === 'receiveDocumentRequest'\r\n                && <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <p>\r\n                            Are you sure you want to delete Document\r\n                            Request for <b>{details.documentType}</b> requested from <b>{details.requestedFrom}</b>\r\n                        </p>\r\n                    </Container>\r\n                </Modal.Body>\r\n            }\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" ref={deleteRef} onClick={confirmDelete}>{actionText}</Button>\r\n                <Button variant=\"dark\" onClick={onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DeleteConfirm\r\n","import React, { useEffect, useState, useMemo } from \"react\"\r\nimport { Col, Row, Pagination } from \"react-bootstrap\"\r\n\r\n\r\nconst PaginationComponent = ({ total = 0, itemsPerPage = 1, currentPage = 1, onPageChange }: any) => {\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0) {\r\n            setTotalPages(Math.ceil(total / itemsPerPage))\r\n        } else {\r\n            setTotalPages(0)\r\n        }\r\n    }, [total, itemsPerPage, totalPages])\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages: any = [];\r\n        for (let i = Math.max(0, currentPage - 6); i < Math.min(currentPage + 5, totalPages); i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={i + 1 === currentPage} onClick={() => onPageChange(i + 1)}>\r\n                    {i + 1}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n        return pages\r\n    }, [totalPages, currentPage, onPageChange])\r\n\r\n    const showing = () => {\r\n        return (\r\n            <p>Showing {((currentPage - 1) * itemsPerPage) + 1} to {(currentPage * itemsPerPage) > total ? total : currentPage * itemsPerPage} of {total} records</p>\r\n        )\r\n    }\r\n\r\n    if (totalPages === 0) return null\r\n\r\n    return (\r\n        <div style={{ marginTop: '1rem' }}>\r\n            <Row>\r\n                <Col md={6} xs={12}>\r\n                    {showing()}\r\n                </Col>\r\n                <Col md={6} xs={12} >\r\n                    <Pagination className=\"justify-content-end\">\r\n                        <Pagination.First onClick={() => onPageChange(1)} disabled={currentPage === 1} />\r\n                        <Pagination.Prev onClick={() => onPageChange(currentPage - 1)} disabled={currentPage === 1} />\r\n                        {paginationItems}\r\n                        <Pagination.Next onClick={() => onPageChange(currentPage + 1)} disabled={currentPage === totalPages} />\r\n                        <Pagination.Last onClick={() => onPageChange(totalPages)} disabled={currentPage === totalPages} />\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default PaginationComponent","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Table, Col, Form, Row, OverlayTrigger, Tooltip, Button, Dropdown\r\n} from 'react-bootstrap';\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { TiArrowSortedDown, TiArrowSortedUp } from 'react-icons/ti';\r\nimport { BsCheck, BsX, BsUnlockFill, BsLockFill, BsEye, BsFileEarmarkText } from 'react-icons/bs';\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\nimport { BiPencil } from \"react-icons/bi\";\r\nimport { CgTrash } from \"react-icons/cg\"\r\nimport { VscRunAll } from \"react-icons/vsc\"\r\nimport { AiOutlineCloudDownload, AiOutlineCloudUpload, AiFillFolder, AiFillQuestionCircle, AiOutlineDelete, AiOutlineEye, AiFillFileExclamation, AiOutlineUpload } from \"react-icons/ai\"\r\nimport {\r\n    FcHighPriority, FcLowPriority, FcMediumPriority, FcCancel,\r\n} from 'react-icons/fc';\r\nimport { FiShare2 } from \"react-icons/fi\"\r\n\r\nimport { checkType } from '../../helpers/util';\r\nimport PaginationComponent from './pagination';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RiUser3Fill } from 'react-icons/ri';\r\nimport { MiscActionCreator } from '../../store/actions/common/misc.actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst TableComponent = ({\r\n    data,\r\n    isLoading,\r\n    map,\r\n    onPaginationChange,\r\n    totalCount,\r\n    isPagination = true,\r\n    actionArray = [],\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleNavigate,\r\n    colorArray = [],\r\n    currencyColumns = [],\r\n    sorting = true,\r\n    sortElement,\r\n    sortType,\r\n    addEditArray = {},\r\n    tableAction = [],\r\n    parentComponent = '',\r\n    loadingHeight = true,\r\n    hideShareArray = [],\r\n    searchCriteria\r\n}: any) => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState<any>([]);\r\n    const [headers, setHeaders] = useState<string[]>([]);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [show, setShow] = useState(false)\r\n    const pageSizes = [10, 50, 100];\r\n    const [showHideColumns, setShowHideColumns] = useState<any>(hideShareArray)\r\n\r\n    useEffect(() => {\r\n        if (isPagination) {\r\n            if (data && data.length > 0) {\r\n                onPaginationChange(pageSize, currentPage);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, pageSize]);\r\n\r\n    useEffect(() => {\r\n        if (hideShareArray.length > 0) {\r\n            setShowHideColumns(hideShareArray);\r\n        }\r\n    }, [hideShareArray])\r\n\r\n    useEffect(() => {\r\n        if (data.length > 0) {\r\n            let headers = Object.keys(map).filter(item => {\r\n                return showHideColumns.includes(item)\r\n            })\r\n            setHeaders(headers);\r\n        }\r\n    }, [showHideColumns, data])\r\n\r\n    const pageChangeHandler = (value: number) => {\r\n        setCurrentPage(value);\r\n    };\r\n\r\n    const sizeChangeHandler = (event: any) => {\r\n        setPageSize(event.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    const handleClickHideShow = e => {\r\n        let { id, checked } = e.target;\r\n        let columnsTemp = Object.assign([], showHideColumns)\r\n        let columnUpdated: any = []\r\n        if (!checked) {\r\n            columnUpdated = columnsTemp.filter(item => item !== id)\r\n        } else {\r\n            columnUpdated = [...columnsTemp, id]\r\n        }\r\n        setShowHideColumns(columnUpdated);\r\n        dispatch(MiscActionCreator.saveColumn({ parentComponent, showHideColumns: columnUpdated }))\r\n    };\r\n    //         \r\n\r\n    const sizeHandler = () => (\r\n        <Row className='table_top_section'>\r\n            {\r\n                !isLoading\r\n                && (parentComponent === 'account'\r\n                    || parentComponent === 'consumer'\r\n                    || parentComponent === 'inventory'\r\n                    || parentComponent === 'sol')\r\n                &&\r\n                <Button variant='dark' style={{ marginRight: '1rem' }} onClick={() => setShow(true)}>Download</Button>\r\n            }\r\n            {\r\n                !isLoading\r\n                && (\r\n                    parentComponent === 'myDocuments'\r\n                    || parentComponent === 'sentDocumentRequest'\r\n                    || parentComponent === 'receiveDocumentRequest'\r\n                    || parentComponent === 'documents'\r\n                )\r\n                && <>\r\n                    {\r\n                        (parentComponent === 'myDocuments' || parentComponent === 'documents') &&\r\n                        isCheck && isCheck.length > 0 &&\r\n                        <Button variant=\"dark\" style={{ marginRight: '1rem' }}>Export</Button>\r\n                    }\r\n                    <CustomDropdown\r\n                        trigger={<button style={{ cursor: 'pointer' }}>Show/Hide Columns</button>}\r\n                        menu={(Object.keys(map)).map((h) => {\r\n                            return <button\r\n                                onClick={() => { }}\r\n                            >\r\n                                <Form.Control\r\n                                    type='Checkbox'\r\n                                    id={h}\r\n                                    // disabled={h === 'folderName' || h === 'name'}\r\n                                    defaultChecked={showHideColumns.includes(h)}\r\n                                    style={{ cursor: 'pointer', width: 'auto', marginRight: \"1rem\" }}\r\n                                    onClick={handleClickHideShow}\r\n                                ></Form.Control>\r\n                                <span>\r\n                                    {map[h]}\r\n                                </span>\r\n                            </button>\r\n                        })}\r\n                    />\r\n                </>\r\n            }\r\n            <Form.Group as={Row}>\r\n                <Form.Label\r\n                    column\r\n                    md={3}\r\n                    sm={12}\r\n                    style={{ textAlign: 'right' }}>Size</Form.Label>\r\n                <Col md={9} sm={12}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"status\"\r\n                        onChange={(e) => sizeChangeHandler(e)}\r\n                        defaultValue={pageSize}>\r\n                        {\r\n                            pageSizes\r\n                            && pageSizes.map((size, index) => {\r\n                                return (<option key={`size_${index}`} value={size}>{size}</option>)\r\n                            })\r\n                        }\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n        </Row >\r\n    );\r\n\r\n    const servicingRequestIndicator = (header: any, d: any) => (\r\n        <>\r\n            <span style={{ position: 'absolute', left: '10px' }}>\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Approved'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Approved\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsCheck size={30} style={{ color: '#68c803' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Rejected'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Rejected\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <BsX size={30} style={{ color: 'red' }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Requested'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Requested\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <GiSandsOfTime size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n                {\r\n                    header === 'servicingRequestId'\r\n                    && d.requestStatus === 'Cancelled'\r\n                    && (\r\n                        <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={(\r\n                                <Tooltip id=\"tooltip-error\">\r\n                                    Cancelled\r\n                                </Tooltip>\r\n                            )}\r\n                        >\r\n                            <FcCancel size={30} style={{ color: d.ragStatus }} />\r\n                        </OverlayTrigger>\r\n                    )\r\n                }\r\n            </span>\r\n        </>\r\n    );\r\n\r\n    const priorityIndicator = (header: any, d: any) => (\r\n        <>\r\n            {\r\n                d.requestStatus === 'Requested'\r\n                && (\r\n                    <span style={{ position: 'absolute', left: '50px' }}>\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'High'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - High\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcHighPriority size={30} style={{ color: '#68c803' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Medium'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Medium\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcMediumPriority size={30} style={{ color: 'red' }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                        {\r\n                            header === 'servicingRequestId'\r\n                            && d.priorityExecution === 'Low'\r\n                            && (\r\n                                <OverlayTrigger\r\n                                    placement=\"right\"\r\n                                    delay={{ show: 250, hide: 400 }}\r\n                                    overlay={(\r\n                                        <Tooltip id=\"tooltip-error\">\r\n                                            Priority - Low\r\n                                        </Tooltip>\r\n                                    )}\r\n                                >\r\n                                    <FcLowPriority size={30} style={{ color: d.ragStatus }} />\r\n                                </OverlayTrigger>\r\n                            )\r\n                        }\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        </>\r\n    );\r\n\r\n    const sortBy = (header: any, type: any) => {\r\n        const descElements: any = document.querySelectorAll('.header_desc');\r\n        const ascElements: any = document.querySelectorAll('.header_asc');\r\n        Array.from(descElements).map((descElem: any) => descElem.classList.remove('active'));\r\n        Array.from(ascElements).map((ascElem: any) => ascElem.classList.remove('active'));\r\n        sortElement(header);\r\n        sortType(type);\r\n        const element: any = document.querySelector(`.${header}_${type}`);\r\n        element.classList.add('active');\r\n    };\r\n\r\n    const goToCompliance = (complianceId, data) => {\r\n        history.push({\r\n            pathname: `/search/${parentComponent === 'inventory' ? 'inventory' : 'account_search'}/compliance_details`,\r\n            search: `cId=${complianceId}&clientId=${data.clientId}&cAn=${data.clientAccountNumber}&aId=${data.equabliAccountNumber}`,\r\n        })\r\n    }\r\n\r\n    const complianceSplitter = (complianceIds, data) => {\r\n        if (!complianceIds) return ''\r\n        let split = complianceIds.split(',')\r\n        split = split.map((complianceId, index) => {\r\n            return <span id='index' key={`compliance_${index}`} onClick={() => goToCompliance(complianceId, data)} className=\"clickable_td_emp\">{complianceId}{index < split.length - 1 ? ', ' : ''} </span>\r\n        })\r\n        return split\r\n    }\r\n\r\n    /**======================================= */\r\n    /**Eligible partner handlers */\r\n    /**======================================= */\r\n    const keyContactsHandler = (contacts) => {\r\n        return (\r\n            contacts && contacts.map((contact, index) => {\r\n                return <p style={{ textAlign: 'left', paddingLeft: '1rem' }} key={`contact_${index}`}>\r\n                    <span>{contact.name}</span> <br />\r\n                    <span>{contact.phone}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const serviceOfferedHandler = (services) => {\r\n        return (\r\n            <div style={{\r\n                \"display\": \"flex\",\r\n                \"flexDirection\": \"row\",\r\n                \"flexWrap\": \"wrap\"\r\n            }}>\r\n                {\r\n                    services && services.map((service, index) => {\r\n                        return <p key={`service_${index}`} style={{ background: '#ff7765', color: 'white', borderRadius: '.3rem', padding: '.1rem .5rem', marginRight: '1rem' }}>{service}</p>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const capacityHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`capacity_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.count} Accounts/Week`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const commissionRateHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`commission_${index}`}>\r\n                    <span><b>{d.type}</b>: {`${d.percentage}%`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n    const complianceHandler = (data) => {\r\n        return (<p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }}>\r\n            <span><b>{data}%</b> of accounts receive disputes of complaints</span>\r\n        </p>\r\n        )\r\n    }\r\n    const collectionsHandler = (data) => {\r\n        return (\r\n            data && data.map((d, index) => {\r\n                return <p style={{ textAlign: 'left', marginBottom: '0', paddingLeft: '1rem' }} key={`collection_${index}`}>\r\n                    <span><b>{d.type}</b>: {`$${d.amount}`}</span>\r\n                </p>\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleAllSelect = () => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(data.map((li: any) => {\r\n            if (parentComponent === 'documents') {\r\n                return Number(li.id)\r\n            } else {\r\n                return li.folderName\r\n            }\r\n        }));\r\n        if (isCheckAll) {\r\n            setIsCheck([]);\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        let { id, checked } = e.target;\r\n        if (parentComponent === 'documents') {\r\n            id = Number(id)\r\n        }\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n            setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    const dueDateHandler = (data) => {\r\n        if (parentComponent === 'sentDocumentRequest' || parentComponent === 'receiveDocumentRequest') {\r\n            if (data.requestStatus === 'Open' && new Date(data.dueDate) >= new Date()) {\r\n                return '#b2e7d0' // green\r\n            } else if (data.requestStatus === 'Open' && new Date(data.dueDate) < new Date()) {\r\n                return '#fbbdc3' // red\r\n            } else if (data.requestStatus === 'Fulfilled') {\r\n                return 'white'\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * My Documents\r\n     * =============================================\r\n     */\r\n    const handleSharedWith = (sharedWith) => {\r\n        if (!sharedWith) {\r\n            return \"-\"\r\n        } else {\r\n            return (\r\n                <div className='share_With_parent'>\r\n                    {\r\n                        sharedWith && sharedWith.map((sW, index) => {\r\n                            return <OverlayTrigger\r\n                                key={`sw_${index}`}\r\n                                placement=\"bottom\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={(\r\n                                    <Tooltip id=\"tooltip-error\">\r\n                                        {sW.name} - {sW.email}\r\n                                    </Tooltip>\r\n                                )}\r\n                            >\r\n                                <span className='shared_with' style={{ marginLeft: index !== 0 ? '-.5rem' : '', marginBottom: '0' }}>{sW.name.charAt(0)}</span>\r\n                            </OverlayTrigger>\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleDocumentName = (data) => {\r\n        if (data['documentName']) {\r\n            return (<td\r\n                className={`clickable_td td_string`}\r\n            >\r\n                <div style={{\r\n                    display: 'inline-flex'\r\n                }}>\r\n                    <BsFileEarmarkText size={24} />\r\n                    <div className='file_name clickable_td_emp' onClick={() => addEditArray.viewDocument(data)}>\r\n                        {data['documentName']}\r\n                    </div>\r\n                </div >\r\n            </td >)\r\n        } else {\r\n            return <td\r\n                className='center_align_td'\r\n            >\r\n                <AiFillFileExclamation\r\n                    size={24}\r\n                />\r\n                {parentComponent === 'sentDocumentRequest' ? 'Pending' : 'Not Provided Yet'}\r\n            </td>\r\n        }\r\n    }\r\n\r\n    const tableHeaderHandler = () => {\r\n        return <thead>\r\n            <tr style={{ lineHeight: '35px', backgroundColor: '#000', color: 'white' }}>\r\n                {/* {isPagination && <th className=\"span1\">#</th>} */}\r\n                {(parentComponent === 'myRequests'\r\n                    || parentComponent === 'pendingForApproval'\r\n                    || parentComponent === 'pendingMyApproval'\r\n                ) && <th>#</th>}\r\n                {\r\n                    (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                    && <th className=\"span1\">\r\n                        <div\r\n                            className=\"table_header_container\"\r\n                            style={\r\n                                {\r\n                                    'minWidth': '20px',\r\n                                    'height': '30px',\r\n                                    'alignItems': 'center'\r\n                                }\r\n                            }>\r\n                            <Form.Control type='Checkbox' onChange={() => handleAllSelect()} style={{ cursor: 'pointer' }}></Form.Control>\r\n                        </div>\r\n                    </th>\r\n                }\r\n                {\r\n                    // eslint-disable-next-line array-callback-return\r\n                    headers && headers.map((header, index) => {\r\n                        if (header !== 'clientId'\r\n                            && header !== 'recordStatusVal'\r\n                            && header !== 'batchSchedulerGroupId'\r\n                            && header !== 'logDescription'\r\n                            && header !== 'queueId'\r\n                            && header !== 'slaStatus'\r\n                            && header !== 'alertDefinition'\r\n                            && header !== 'RFILink'\r\n                            && header !== 'auditLink'\r\n                        ) {\r\n                            return (\r\n                                <th\r\n                                    className=\"span1\"\r\n                                    key={`header_${index}`}\r\n                                >\r\n                                    <div\r\n                                        className=\"table_header_container\"\r\n                                        style={\r\n                                            {\r\n                                                'minWidth': [\"servicesOffered\", \"capacity\", \"commissionRate\", \"accountTypeServiced\", \"compliance\", \"collections\"].indexOf(header) !== -1\r\n                                                    ? '300px'\r\n                                                    : [\"preview\", \"upload\", \"download\", \"autoRenew\"].indexOf(header) !== -1 ? '110px' : '220px'\r\n                                            }\r\n                                        }>\r\n                                        <div>\r\n                                            {map[header] ? map[header] : header}\r\n                                        </div>\r\n                                        {\r\n                                            sorting\r\n                                            && (\r\n                                                <div className=\"sorting\">\r\n                                                    <TiArrowSortedUp size={12} className={`header_asc ${header}_asc`} onClick={() => sortBy(header, 'asc')} />\r\n                                                    <TiArrowSortedDown size={12} className={`header_desc ${header}_desc`} onClick={() => sortBy(header, 'desc')} />\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </th>\r\n                            );\r\n                        }\r\n\r\n                    })\r\n                }\r\n                {\r\n                    ((typeof addEditArray.edit !== 'undefined')\r\n                        || (typeof addEditArray.view !== 'undefined' && headers.indexOf('alertDefinition') !== -1))\r\n                    && <th className=\"span1\" style={{ minWidth: '130px' }}>Action Items</th>\r\n                }\r\n                {\r\n                    ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                    && <th className=\"span1\" style={{ minWidth: '130px', 'textAlign': 'center' }}>Action</th>\r\n                }\r\n                {\r\n                    (\r\n                        parentComponent === 'myDocuments'\r\n                        || parentComponent === 'documents'\r\n                        || parentComponent === 'sentDocumentRequest'\r\n                        || parentComponent === 'receiveDocumentRequest'\r\n                        || parentComponent === 'downloadHistory'\r\n                    )\r\n                    && <th className='span1' style={{ minWidth: '130px', textAlign: 'center' }}>Actions</th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n    }\r\n\r\n    const tableBodyHandler = () => {\r\n        return <tbody>\r\n            {\r\n                data && data.map((d: any, index: number) => (\r\n                    <tr\r\n                        key={`data_${index}`} style={{\r\n                            lineHeight: '30px',\r\n                            textAlign: 'center',\r\n                            position: 'relative',\r\n                            zIndex: 9,\r\n                            backgroundColor: dueDateHandler(d)\r\n                        }}\r\n\r\n                    >\r\n                        {/* {isPagination && <td>{index + (currentPage !== 1 ? ((currentPage - 1) * 10) : 0) + 1}</td>} */}\r\n                        {(parentComponent === 'myRequests'\r\n                            || parentComponent === 'pendingForApproval'\r\n                            || parentComponent === 'pendingMyApproval'\r\n                        ) && <th>{index + 1}</th>}\r\n                        {\r\n                            (parentComponent === 'myDocuments' || parentComponent === 'documents')\r\n                            && <th className=\"span1\">\r\n                                <div\r\n                                    className=\"table_header_container\"\r\n                                    style={\r\n                                        {\r\n                                            'minWidth': '20px',\r\n                                            'height': '30px',\r\n                                            'alignItems': 'center'\r\n                                        }\r\n                                    }>\r\n                                    <Form.Control\r\n                                        type='Checkbox'\r\n                                        id={parentComponent === 'documents' ? d.id : d.folderName}\r\n                                        checked={isCheck.includes(parentComponent === 'documents' ? d.id : d.folderName)}\r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onChange={handleClick}\r\n                                    ></Form.Control>\r\n                                </div>\r\n                            </th>\r\n                        }\r\n                        {\r\n                            // eslint-disable-next-line array-callback-return\r\n                            headers.map((header: any, index2) => {\r\n                                if (header !== 'clientId'\r\n                                    && header !== 'recordStatusVal'\r\n                                    && header !== 'batchSchedulerGroupId'\r\n                                    && header !== 'logDescription'\r\n                                    && header !== 'slaStatus'\r\n                                    && header !== 'queueId'\r\n                                    && header !== 'alertDefinition'\r\n                                    && header !== 'RFILink'\r\n                                    && header !== 'auditLink'\r\n                                ) {\r\n                                    if (actionArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={\r\n                                                    {\r\n                                                        background: header === 'complianceId' ? d.slaStatus : '',\r\n                                                        color: header === 'complianceId' && d.slaStatus ? 'white' : ''\r\n                                                    }\r\n                                                }\r\n                                                key={`data_2${index2}`}\r\n                                                className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            >\r\n                                                {\r\n                                                    servicingRequestIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    priorityIndicator(header, d)\r\n                                                }\r\n                                                {\r\n                                                    header === \"folderName\" && parentComponent === 'myDocuments' &&\r\n                                                    <div\r\n                                                        style={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center'\r\n                                                        }}\r\n                                                    >\r\n                                                        <AiFillFolder size={20} />\r\n                                                        <span\r\n                                                            style={{ paddingLeft: '.7rem' }}\r\n                                                            onClick={() => handleNavigate(d, header)}\r\n                                                            className=\"clickable_td_emp\"\r\n                                                        >\r\n                                                            {d[header]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    header !== \"folderName\" && parentComponent !== 'myDocuments' &&\r\n                                                    <span onClick={() => handleNavigate(d, header)} className=\"clickable_td_emp\">\r\n                                                        {d[header]}\r\n                                                    </span>\r\n                                                }\r\n\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    if (header === 'isValidationRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'isExcluded') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Y' : 'N'}</td>;\r\n                                    }\r\n                                    if (header === 'isAdditionalTimeRequired') {\r\n                                        return <td key={`data_2${index2}`}>{d[header] ? 'Yes' : 'No'}</td>;\r\n                                    }\r\n                                    if (header === 'keyContacts') {\r\n                                        return <td key={`data_2${index2}`}>{keyContactsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === 'servicesOffered'\r\n                                        || header === \"accountTypeServiced\"\r\n                                    ) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent === 'partnerSearch' && (header === 'accountType'\r\n                                        || header === 'productType')) {\r\n                                        return <td key={`data_2${index2}`}>{serviceOfferedHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"capacity\") {\r\n                                        return <td key={`data_2${index2}`}>{capacityHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"commissionRate\") {\r\n                                        return <td key={`data_2${index2}`}>{commissionRateHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"compliance\") {\r\n                                        return <td key={`data_2${index2}`}>{complianceHandler(d[header])}</td>\r\n                                    }\r\n                                    if (parentComponent !== 'partnerSearch' && header === \"collections\") {\r\n                                        return <td key={`data_2${index2}`}>{collectionsHandler(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"sharedWith\") {\r\n                                        return <td key={`data_2${index2}`}>{handleSharedWith(d[header])}</td>\r\n                                    }\r\n                                    if (header === \"preview\") {\r\n                                        return <td key={`data_2${index2}`}><BsFileEarmarkText size={24} /></td>\r\n                                    }\r\n                                    if (header === 'upload') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudUpload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'download') {\r\n                                        return <td key={`data_2${index2}`}><AiOutlineCloudDownload size={24} /></td>\r\n                                    }\r\n                                    if (header === 'fileName') {\r\n                                        return handleDocumentName(d)\r\n                                    }\r\n                                    if (!d[header]) {\r\n                                        return <td key={`data_2${index2}`}><b>-</b></td>\r\n                                    }\r\n                                    if (header === \"partnerStatus\") {\r\n                                        return <td key={`data_2${index2}`} style={{ textAlign: 'left' }}>\r\n                                            <span style={{\r\n                                                backgroundColor: d['partnerStatus'] === 'Equabli Recommended' ? '#ff7765' : d['partnerStatus'] === 'Equabli Approved' ? \"rgb(0, 235, 165)\" : '#00b5fc',\r\n                                                color: 'white',\r\n                                                padding: '.3rem 1rem',\r\n                                                borderRadius: '.3rem'\r\n                                            }}>{d[header]}</span><br />\r\n                                            {\r\n                                                (d['partnerStatus'] === 'Equabli Recommended' || d['partnerStatus'] === 'Equabli Approved')\r\n                                                && <>\r\n                                                    <b><a href={d['RFILink']}>Review RFI</a></b><br />\r\n                                                    <b><a href={d['auditLink']}>Review Audit</a></b>\r\n                                                </>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    if (header === 'executionStatusVal') {\r\n                                        return (<td >\r\n                                            <span style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                {d[header]}\r\n                                                <OverlayTrigger\r\n                                                    placement=\"right\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            {d['logDescription']}\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <AiFillQuestionCircle size={20} style={{ marginLeft: '1rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            </span>\r\n                                        </td>)\r\n                                    }\r\n                                    if (header === 'complianceIds') {\r\n                                        return (\r\n                                            <td className={`clickable_td ${checkType(d[header], header) ? 'td_number' : 'td_string'}`}>\r\n                                                {complianceSplitter(d[header], d)}\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                                    if (colorArray.includes(header)) {\r\n                                        return (\r\n                                            <td\r\n                                                style={{ backgroundColor: `${d[header]}` }}\r\n                                                key={`data_2${index2}`}\r\n                                            >{''}\r\n                                            </td>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <td\r\n                                            className={`${checkType(d[header], header) ? 'td_number' : 'td_string'}`}\r\n                                            key={`data_2${index2}`}\r\n                                        >\r\n                                            {currencyColumns.indexOf(header) !== -1 ? '$' : ''}\r\n                                            {' '}\r\n                                            {d[header]}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                        {\r\n                            ((typeof tableAction.openSolModal !== 'undefined') && headers.indexOf('dtClientStatute') !== -1)\r\n                            && <td key={`data_${index}`} className=\"span1\" >\r\n                                <Button variant=\"dark\" onClick={() => tableAction.openSolModal(d)}>Set SOL</Button>\r\n                            </td>\r\n                        }\r\n                        {\r\n                            typeof addEditArray.edit !== 'undefined'\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Edit\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BiPencil onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                && <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            View\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsEye onClick={() => addEditArray.edit(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal !== \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Delete\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <CgTrash onClick={() => addEditArray.delete(index)} size={20} style={{ margin: '0 .5rem', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Disabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to unlock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsLockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'red', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Enabled\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Click to lock\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <BsUnlockFill onClick={() => addEditArray.update(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                (\r\n                                                    d.recordStatusVal === \"Enabled\"\r\n                                                    || d.recordStatusVal === \"Disabled\"\r\n                                                )\r\n                                                && (typeof addEditArray.execute !== 'undefined')\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Execute\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <VscRunAll onClick={() => addEditArray.execute(index)} size={18} style={{ margin: '0 .5rem', color: 'rgb(76, 175, 80)', cursor: 'pointer' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                            {\r\n                                                d.recordStatusVal === \"Deleted\"\r\n                                                &&\r\n                                                <OverlayTrigger\r\n                                                    placement=\"bottom\"\r\n                                                    delay={{ show: 250, hide: 400 }}\r\n                                                    overlay={\r\n                                                        <Tooltip id={`tooltip-error`}>\r\n                                                            Deleted\r\n                                                        </Tooltip>\r\n                                                    }\r\n                                                >\r\n                                                    <FcCancel size={20} style={{ color: d.ragStatus, margin: '0 .5rem' }} />\r\n                                                </OverlayTrigger>\r\n                                            }\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            typeof addEditArray.view !== 'undefined'\r\n                            && d['alertDefinition'] !== undefined\r\n                            && (\r\n                                <>\r\n                                    <td key={`data_${index}`} className=\"span1\" >\r\n                                        <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                            {<p onClick={() => addEditArray.view(d['alertDefinition'])} style={{ margin: '0 .5rem', cursor: 'pointer', color: '#FF7765' }} >View Email</p>}\r\n                                        </span>\r\n                                    </td>\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                            (\r\n                                parentComponent === 'myDocuments'\r\n                                || parentComponent === 'documents'\r\n                                || parentComponent === 'sentDocumentRequest'\r\n                                || parentComponent === 'receiveDocumentRequest'\r\n                                || parentComponent === 'downloadHistory'\r\n                            )\r\n                            && <td key={`data_${index}`} className='span1' style={{ minWidth: '140px', textAlign: 'center' }}>\r\n                                {\r\n                                    typeof addEditArray.upload !== 'undefined'\r\n                                    && !d[\"documentName\"]\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Upload\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudUpload onClick={() => addEditArray.upload(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.view !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    View\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineEye onClick={() => addEditArray.view(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.download !== 'undefined'\r\n                                    && (\r\n                                        (parentComponent === 'receiveDocumentRequest' && d[\"documentName\"])\r\n                                        || parentComponent === 'myDocuments'\r\n                                        || parentComponent === 'documents'\r\n                                        || parentComponent === 'sentDocumentRequest'\r\n                                        || parentComponent === 'downloadHistory'\r\n                                    )\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Download\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineCloudDownload\r\n                                                style={{\r\n                                                    color: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"#bebebe\" : \"black\",\r\n                                                    cursor: parentComponent === 'sentDocumentRequest' && !d[\"documentName\"] ? \"not-allowed\" : 'pointer'\r\n                                                }}\r\n                                                onClick={() => {\r\n                                                    if (parentComponent === 'sentDocumentRequest' && !d[\"documentName\"]) {\r\n\r\n                                                    } else {\r\n                                                        addEditArray.download(d)\r\n                                                    }\r\n                                                }\r\n                                                } size={20} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.share !== 'undefined'\r\n                                    && <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Share\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <FiShare2 size={20} onClick={() => addEditArray.share(d)} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                        &nbsp;\r\n                                    </span>\r\n                                }\r\n                                {\r\n                                    typeof addEditArray.delete !== 'undefined'\r\n                                    &&\r\n                                    <span>\r\n                                        <OverlayTrigger\r\n                                            placement=\"bottom\"\r\n                                            delay={{ show: 250, hide: 400 }}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-error`}>\r\n                                                    Delete\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <AiOutlineDelete onClick={() => addEditArray.delete(d)} size={20} style={{ cursor: 'pointer' }} />\r\n                                        </OverlayTrigger>\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tbody>\r\n    }\r\n\r\n    const tableHandler = () => (\r\n        <>\r\n            {\r\n                tableHeaderHandler()\r\n            }\r\n            {\r\n                tableBodyHandler()\r\n            }\r\n        </>\r\n    );\r\n\r\n    const emptyTable = () => (\r\n        <thead>\r\n            <tr className='no_records' style={{ lineHeight: '35px', backgroundColor: '#e9ecef', textAlign: 'center' }}>\r\n                <th>No Records</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n\r\n    const loadingData = () => (\r\n        <div className={`table_loading ${loadingHeight ? null : 'no_min_height'}`} >\r\n            <CgSpinnerAlt className=\"spinner\" size={50} />\r\n        </div >\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"table_container\">\r\n            {isPagination && totalCount > 0 ? sizeHandler() : null}\r\n            <Table striped bordered hover responsive size=\"sm\" className=\"tableHeight\" style={{ marginBottom: 0 }}>\r\n                {totalCount > 0 ? tableHandler() : emptyTable()}\r\n            </Table>\r\n            {isLoading && loadingData()}\r\n            {isPagination && (\r\n                <PaginationComponent\r\n                    total={totalCount}\r\n                    itemsPerPage={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={(page: number) => pageChangeHandler(page)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CustomDropdown = ({ trigger, menu }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className=\"custom_dropdown\">\r\n            {React.cloneElement(trigger, {\r\n                onClick: handleOpen,\r\n            })}\r\n            {open ? (\r\n                <ul className=\"custom_menu\">\r\n                    {menu.map((menuItem, index) => (\r\n                        <li key={index} className=\"menu-item\">\r\n                            {React.cloneElement(menuItem, {\r\n                                onClick: () => {\r\n                                    menuItem.props.onClick();\r\n                                },\r\n                            })}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableComponent;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { debounce } from 'lodash';\r\nimport { CgOptions, CgSearch } from 'react-icons/cg'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport DocumentTypes from './DocumentType';\r\nimport { checkIfAdvanceSearchIsActive, dateFormatterForRequestDocManager } from '../../helpers/util';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst AdvanceSearch = ({ parentComponent, Styles, searchHandler, setAdvanceSearchObj, advanceSearchObj, showAdvanceSearch, setShowAdvanceSearch }: any) => {\r\n    const advanceSearchRef = useRef<any>();\r\n    const documentTypeRef = useRef<any>()\r\n    const [advanceSearchActive, setAdvanceSearchActive] = useState<any>(false);\r\n    const [dates, setDates] = useState<any>({\r\n        generationDateFrom: null,\r\n        generationDateTo: null,\r\n        uploadDateFrom: null,\r\n        uploadDateTo: null,\r\n        shareDateFrom: null,\r\n        shareDateTo: null,\r\n        receivedDateFrom: null,\r\n        receivedDateTo: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!checkIfAdvanceSearchIsActive(advanceSearchObj)) {\r\n            setAdvanceSearchActive(true)\r\n        } else {\r\n            setAdvanceSearchActive(false)\r\n        }\r\n    }, [advanceSearchObj])\r\n\r\n    const debouncedSearch = debounce(async (criteria) => {\r\n        searchHandler(criteria)\r\n    }, 500);\r\n\r\n    async function handleSearchInput(e) {\r\n        debouncedSearch(e.target.value);\r\n    }\r\n\r\n    const advanceSearchHandler = (e) => {\r\n        e.preventDefault()\r\n        setAdvanceSearchActive(false)\r\n        if (showAdvanceSearch) {\r\n            let advanceSearchTemp: any = Object.assign({}, advanceSearchObj)\r\n            const {\r\n                document_type,\r\n                document_name,\r\n                original_account_number,\r\n                client_account_number,\r\n                equabli_account_number,\r\n                portfolio_id\r\n            } = advanceSearchRef.current\r\n            //Common\r\n            advanceSearchTemp.docTypeCode = document_type.value !== \"\" ? document_type.value : null\r\n            advanceSearchTemp.documentName = document_name.value !== \"\" ? document_name.value : null\r\n            if (parentComponent === 'documents') {\r\n                // Document List\r\n                advanceSearchTemp.generationDateFrom = dates.generationDateFrom ? dateFormatterForRequestDocManager(dates.generationDateFrom) : null\r\n                advanceSearchTemp.generationDateTo = dates.generationDateTo ? dateFormatterForRequestDocManager(dates.generationDateTo) : null\r\n                advanceSearchTemp.uploadDateFrom = dates.uploadDateFrom ? dateFormatterForRequestDocManager(dates.uploadDateFrom) : null\r\n                advanceSearchTemp.uploadDateTo = dates.uploadDateTo ? dateFormatterForRequestDocManager(dates.uploadDateTo) : null\r\n                advanceSearchTemp.shareDateFrom = dates.shareDateFrom ? dateFormatterForRequestDocManager(dates.shareDateFrom) : null\r\n                advanceSearchTemp.shareDateTo = dates.shareDateTo ? dateFormatterForRequestDocManager(dates.shareDateTo) : null\r\n                advanceSearchTemp.receiveDateFrom = dates.receivedDateFrom ? dateFormatterForRequestDocManager(dates.receivedDateFrom) : null\r\n                advanceSearchTemp.receiveDateTo = dates.receivedDateTo ? dateFormatterForRequestDocManager(dates.receivedDateTo) : null\r\n            } else {\r\n                // Document Folder\r\n                advanceSearchTemp.originalAccountNumber = original_account_number.value !== \"\" ? original_account_number.value : null\r\n                advanceSearchTemp.clientAccountNumber = client_account_number.value !== \"\" ? client_account_number.value : null\r\n                advanceSearchTemp.equabliAccountNumber = equabli_account_number.value !== \"\" ? equabli_account_number.value : null\r\n                advanceSearchTemp.portfolioId = portfolio_id.value !== \"\" ? portfolio_id.value : null\r\n            }\r\n            setAdvanceSearchObj(advanceSearchTemp)\r\n        }\r\n    }\r\n\r\n    const handleReset = async () => {\r\n        // Common\r\n        documentTypeRef.current.reset();\r\n        advanceSearchRef.current[\"document_name\"].value = \"\"\r\n        if (parentComponent === 'documents') {\r\n            // Document list\r\n            setDates({\r\n                generationDateFrom: null,\r\n                generationDateTo: null,\r\n                uploadDateFrom: null,\r\n                uploadDateTo: null,\r\n                shareDateFrom: null,\r\n                shareDateTo: null,\r\n                receivedDateFrom: null,\r\n                receivedDateTo: null\r\n            })\r\n        } else {\r\n            // Document Folder\r\n            advanceSearchRef.current[\"original_account_number\"].value = \"\"\r\n            advanceSearchRef.current[\"client_account_number\"].value = \"\"\r\n            advanceSearchRef.current[\"equabli_account_number\"].value = \"\"\r\n        }\r\n        if (parentComponent === 'sentDocumentRequest') {\r\n            advanceSearchRef.current[\"portfolio_id\"].value = \"\"\r\n        }\r\n        setAdvanceSearchObj({})\r\n    }\r\n\r\n    const dateHandler = (from, date) => {\r\n        const dateTemp = Object.assign({}, dates)\r\n        dateTemp[from] = date\r\n        setDates(dateTemp)\r\n    }\r\n\r\n    return (\r\n        <Col md={parentComponent === 'sentDocumentRequest' ? 8 : 10} sm={parentComponent === 'sentDocumentRequest' ? 8 : 10} className={Styles.search_input}>\r\n            <CgSearch\r\n                size={20}\r\n                className={Styles.search} />\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"my_document_search\"\r\n                className={Styles.my_document_search}\r\n                onMouseDown={() => setShowAdvanceSearch(false)}\r\n                onChange={(e) => handleSearchInput(e)}\r\n                placeholder=\"Search\"\r\n            ></Form.Control>\r\n            <CgOptions\r\n                size={20}\r\n                className={`${Styles.advanceSearch} ${advanceSearchActive ? Styles.active : Styles.inActive}`}\r\n                onClick={() => setShowAdvanceSearch(!showAdvanceSearch)} />\r\n            <div className={`${Styles.advance_search} ${showAdvanceSearch ? Styles.show : Styles.hide}`}>\r\n                <Form ref={advanceSearchRef} onSubmit={(e) => advanceSearchHandler(e)}>\r\n                    <Row>\r\n                        <Col lg={12} md={12}>\r\n                            <Form.Group as={Col} className=\"mb-4 mt-4\">\r\n                                <Col md={12} sm={12}>\r\n                                    <Form.Control className=\"select_custom white\" type=\"text\" name=\"document_name\" />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">{parentComponent === 'myDocuments' ? \"Folder Name\" : \"Document Name\"}</Form.Label>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12} >\r\n                                    <DocumentTypes ref={documentTypeRef} />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">{parentComponent === 'myDocuments' ? \"Folder that contain Document Type\" : \"Document Type\"}</Form.Label>\r\n                            </Form.Group>\r\n                            {/* <Form.Group as={Col} className=\"mb-4\">\r\n                                <Col md={12} sm={12} >\r\n                                    <DocumentTypes ref={documentTypeNoRef} />\r\n                                </Col>\r\n                                <Form.Label className=\"label_custom white\">Folder that do not contain Document Type</Form.Label>\r\n                            </Form.Group> */}\r\n                            {\r\n                                parentComponent === 'sentDocumentRequest'\r\n                                &&\r\n                                <Form.Group as={Col} className=\"mb-4\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control\r\n                                            className=\"select_custom white\"\r\n                                            type=\"text\"\r\n                                            name=\"portfolio_id\" />\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Portfolio Id</Form.Label>\r\n                                </Form.Group>\r\n                            }\r\n                            {\r\n                                parentComponent !== 'documents'\r\n                                && <>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                className=\"select_custom white\"\r\n                                                type=\"text\"\r\n                                                name=\"original_account_number\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Original Account Number</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                className=\"select_custom white\"\r\n                                                type=\"text\"\r\n                                                name=\"client_account_number\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Client Account Number</Form.Label>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-4\">\r\n                                        <Col md={12} sm={12}>\r\n                                            <Form.Control\r\n                                                className=\"select_custom white\"\r\n                                                type=\"text\"\r\n                                                name=\"equabli_account_number\" />\r\n                                        </Col>\r\n                                        <Form.Label className=\"label_custom white\">Equabli Account Number</Form.Label>\r\n                                    </Form.Group>\r\n                                </>\r\n                            }\r\n                            {\r\n                                parentComponent === 'documents'\r\n                                && <>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"generationDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"generationDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Generation Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"generationDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"generationDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Generation Date To</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"uploadDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"uploadDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Upload Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"uploadDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"uploadDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Upload Date To</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"shareDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"shareDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Share Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"shareDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"shareDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Share Date To</Form.Label>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12}>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"receivedDateFrom\"]}\r\n                                                        onChange={(date) => dateHandler(\"receivedDateFrom\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Received Date From</Form.Label>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} className=\"mb-4\">\r\n                                                <Col md={12} sm={12}>\r\n                                                    <DatePicker\r\n                                                        format={'MM/dd/yyyy'}\r\n                                                        className=\"select_custom white\"\r\n                                                        monthPlaceholder={'mm'}\r\n                                                        dayPlaceholder={'dd'}\r\n                                                        value={dates[\"receivedDateTo\"]}\r\n                                                        onChange={(date) => dateHandler(\"receivedDateTo\", date)}\r\n                                                        yearPlaceholder={'yyyy'} />\r\n                                                </Col>\r\n                                                <Form.Label className=\"label_custom white\">Received Date To</Form.Label>\r\n                                            </Form.Group>\r\n\r\n                                        </Row>\r\n                                    </Col>\r\n                                </>\r\n                            }\r\n                            <Col className={Styles.button_right}>\r\n                                <Col>\r\n                                    <Button variant=\"dark\" type=\"submit\">Search</Button>{\" \"}\r\n                                    <Button variant=\"dark\" onClick={() => handleReset()}>Reset</Button>{\" \"}\r\n                                    <Button variant=\"\" onClick={() => setShowAdvanceSearch(false)}>Cancel</Button>{ }\r\n                                </Col>\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default AdvanceSearch","import {\r\n    GetDownloadHistory,\r\n    SaveDownloadHistory,\r\n    DeleteDownloadHistory\r\n} from \"../types.d\";\r\nimport { downloadHistory } from \"../../services\"\r\n\r\nexport const DownloadHistoryActionCreator = {\r\n    getDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetDownloadHistory.GET_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.getDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    saveDownloadHistory: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.saveDownloadHistory(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SaveDownloadHistory.SAVE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n    deleteDownloadHistory: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        downloadHistory.deleteDownloadHistory(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDownloadHistory.DELETE_DOWNLOAD_HISTORY_RESET }))\r\n    },\r\n}","import { useState } from \"react\"\r\n\r\nconst FileUploadHook = (files) => {\r\n    const [state, setState] = useState<any>(null)\r\n    const zipTargetFiles: any = async (files) => {\r\n        let zipFile: any = null\r\n        if (files.length === 1) {\r\n            setState({\r\n                zipFile,\r\n                file: files[0]\r\n            })\r\n        } else {\r\n            const zip = require('jszip')();\r\n            let matrixFile: any = null\r\n            for (let i = 0; i < files.length; i++) {\r\n                if (files[i].name === 'matrix.xlsx') {\r\n                    matrixFile = files[i]\r\n                }\r\n                if (files[i].type === 'application/zip' || files[i].type === \"application/x-zip-compressed\") {\r\n                    zipFile = files[i]\r\n                }\r\n                if (!zipFile && files[i].name !== 'matrix.xlsx') {\r\n                    zip.file(files[i].name, files[i]);\r\n                }\r\n            }\r\n            if (!zipFile) {\r\n                zip.generateAsync({ type: \"blob\" })\r\n                    .then((content) => {\r\n                        return new File([content], 'new.zip', { type: 'application/x-zip-compressed' })\r\n                    })\r\n                    .then((file) => {\r\n                        setState({\r\n                            matrixFile,\r\n                            file: file\r\n                        });\r\n                    })\r\n            } else {\r\n                setState({\r\n                    matrixFile,\r\n                    file: zipFile\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return [\r\n        state,\r\n        {\r\n            zipTargetFiles\r\n        }\r\n    ];\r\n}\r\n\r\nexport default FileUploadHook","import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport DatePicker from 'react-date-picker';\r\nimport { BsFileEarmarkPdf, BsFillFileEarmarkImageFill } from 'react-icons/bs';\r\nimport { CgSpinnerAlt, CgSoftwareUpload } from 'react-icons/cg';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\nimport { SiMicrosoftexcel } from 'react-icons/si';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { createMessage } from '../../helpers/messages';\r\nimport { axiosCustom, handleResponse } from '../../helpers/util';\r\nimport { userService } from '../../services';\r\nimport { SummaryActionCreator } from '../../store/actions/summary.actions';\r\nimport FileUploadHook from '../CustomHooks/FileUploadHook';\r\n\r\n\r\nconst DocumentUpload = ({ show, onHide, accountId, Styles, parentComponent, search, details = null }: any) => {\r\n    const { addToast } = useToasts();\r\n    const editRef = useRef<any>()\r\n    const dispatch = useDispatch();\r\n    const [fileToUpload, { zipTargetFiles }] = FileUploadHook(null)\r\n    const [dragActive, setDragActive] = React.useState(false);\r\n    const inputRef = React.useRef<any>(null);\r\n    const [files, setFiles] = useState<any>([])\r\n    const [userLoggedIn, setUserLoggedIn] = useState<any>(null)\r\n    const [dateFrom, setDateFrom] = useState<any>(null)\r\n    const [fileTypeSelected, setFileTypeSelected] = useState('')\r\n    const [formSubmitted, setFormSubmitted] = useState<any>(false)\r\n    const [formError, setFormError] = useState<any>({\r\n        fileLengthSingle: false,\r\n        fileSize: false\r\n    })\r\n    const [noMatrixFile, SetNoMatrixFile] = useState(false)\r\n    useEffect(() => {\r\n        const user = userService.getUser()\r\n        setUserLoggedIn(user)\r\n    }, [])\r\n\r\n    const validateUpload = (formObj) => {\r\n        let formIsValid = true;\r\n        const error: any = {\r\n            file: false\r\n        }\r\n        if (formObj.file === 0) {\r\n            error['fileLengthSingle'] = true\r\n        }\r\n        for (let key in formObj) {\r\n            if (!formObj[key] || formObj[key] === \"\") {\r\n                error[key] = true\r\n            }\r\n        }\r\n        for (let k in error) {\r\n            if (error[k]) {\r\n                formIsValid = false\r\n            }\r\n        }\r\n        setFormError(error)\r\n        return formIsValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileToUpload && JSON.stringify(fileToUpload) !== \"{}\") {\r\n            uploadFile()\r\n        }\r\n    }, [fileToUpload])\r\n\r\n    const onSubmitHandler = async (e: any) => {\r\n        e.preventDefault();\r\n        if (validateUpload({\r\n            file: files.length\r\n        })) {\r\n            setFormSubmitted(true)\r\n            zipTargetFiles(files)\r\n        }\r\n    }\r\n\r\n    const uploadFile = async () => {\r\n        SetNoMatrixFile(false)\r\n        const config = {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        let API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload`\r\n        const { file, matrixFile } = fileToUpload\r\n        if (parentComponent === 'myDocument' && files.length > 1 && !matrixFile) {\r\n            setFormSubmitted(false)\r\n            SetNoMatrixFile(true)\r\n            return\r\n        }\r\n        let formData: any = new FormData()\r\n        try {\r\n            if (file.type === 'application/zip' || file.type === 'application/x-zip-compressed') {\r\n                formData.append(\"files\", file);\r\n                formData.append(\"files\", matrixFile)\r\n                formData.append(\"fileUploadJson\", JSON.stringify({ \"bulkType\": \"upload\", \"orgType\": 'CT' }))\r\n                API_URL = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk`\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const urls = handleResponse(response)\r\n                const responseFilePath = await axiosCustom.post(`${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/upload/bulk/read`,\r\n                    {\r\n                        \"orgType\": \"CT\",\r\n                        \"excelUrl\": urls.response.fileUrl[1],\r\n                        \"zipUrl\": urls.response.fileUrl[0],\r\n                        \"bulkType\": \"upload\"\r\n                    }\r\n                )\r\n                const data = handleResponse(responseFilePath)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            } else {\r\n                formData.append(\"file\", file);\r\n                formData.append(\"orgType\", \"CT\")\r\n                const response = await axiosCustom.post(API_URL, formData, config)\r\n                const data = handleResponse(response)\r\n                addToast(createMessage('success', `uploaded`, 'File'), { appearance: 'success', autoDismiss: true })\r\n                setFormSubmitted(false)\r\n                onHide()\r\n            }\r\n            dispatch(SummaryActionCreator.getReceiveSummary())\r\n            dispatch(SummaryActionCreator.getSentSummary())\r\n            search()\r\n        } catch (error: any) {\r\n            setFormSubmitted(false)\r\n            addToast(createMessage('error', `uploading`, 'file'), { appearance: 'error', autoDismiss: false })\r\n            throw error\r\n        }\r\n    }\r\n\r\n    const fileSizeHandler = (event) => {\r\n        const tempError = Object.assign({}, formError)\r\n        // 5MB limit\r\n        if ((event.target.files[0].size / 1024 / 1024) > 50) {\r\n            setFormError({ ...tempError, fileSize: true })\r\n            setFormSubmitted(true)\r\n        } else {\r\n            setFormError({ ...tempError, fileSize: false })\r\n            setFormSubmitted(false)\r\n        }\r\n    }\r\n\r\n    // handle drag events\r\n    const handleDrag = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n            setDragActive(true);\r\n        } else if (e.type === \"dragleave\") {\r\n            setDragActive(false);\r\n        }\r\n    };\r\n\r\n    const handleFiles = (file) => {\r\n        let tempFiles = Object.assign([], files)\r\n        if (tempFiles.length === 0) {\r\n            tempFiles = Array.from(file)\r\n        } else {\r\n            tempFiles = [...tempFiles, ...Array.from(file)]\r\n        }\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    // triggers when file is dropped\r\n    const handleDrop = function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setDragActive(false);\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            handleFiles(e.dataTransfer.files);\r\n        }\r\n    };\r\n\r\n    // triggers when file is selected with click\r\n    const handleChange = function (e) {\r\n        e.preventDefault();\r\n        if (e.target.files && e.target.files[0]) {\r\n            handleFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    // triggers the input when the button is clicked\r\n    const onButtonClick = () => {\r\n        inputRef.current.click();\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        let tempFiles = Object.assign([], files)\r\n        tempFiles.splice(index, 1);\r\n        setFiles(tempFiles)\r\n    }\r\n\r\n    const downloadSampleFile = () => {\r\n        let sampleFile = ''\r\n        if (parentComponent === 'myDocument') {\r\n            sampleFile = \"./sample_file_upload.xlsx\"\r\n        } else {\r\n            sampleFile = `${process.env.REACT_APP_BASE_FILE}/${process.env.REACT_APP_FILE_UPLOAD_SERVICE}/file/download`\r\n        }\r\n        axiosCustom.get(sampleFile, { responseType: 'arraybuffer' })\r\n            .then((response) => {\r\n                var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n                saveAs(blob, 'SendRequestDocumentSample.xlsx');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\" >\r\n                    {\r\n                        (\r\n                            parentComponent === 'myDocument'\r\n                            || parentComponent === 'documents'\r\n                        )\r\n                            ? \"Upload New Document\"\r\n                            :\r\n                            (parentComponent === 'sentDocumentRequest'\r\n                                ? 'Upload file for bulk document request'\r\n                                : '')\r\n                    }\r\n                    {\r\n\r\n                        parentComponent === 'receiveDocumentRequest'\r\n                        && \"Upload File to FulFill the request\"\r\n                    }\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                    <Col sm={12}>\r\n                        <div className={Styles.list_upload_container}>\r\n                            {\r\n                                files && files.length > 0 && files.map((file, index) => {\r\n                                    return <div className={Styles.list_upload} key={`file_${index}`}>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                                {\r\n                                                    file.type === 'application/pdf'\r\n                                                    && <BsFileEarmarkPdf />\r\n                                                }\r\n                                                {\r\n                                                    (file.type === 'image/png' || file.type === 'image/jpeg')\r\n                                                    && <BsFillFileEarmarkImageFill />\r\n                                                }\r\n                                                {\r\n                                                    file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                                                    && <SiMicrosoftexcel />\r\n                                                }\r\n                                                <span style={{ marginLeft: '.5rem' }}>{file.name}</span>\r\n                                            </div>\r\n                                            <MdOutlineDelete onClick={() => deleteHandler(index)} size={25} style={{ marginRight: '.5rem', color: 'red', cursor: 'pointer' }} />\r\n                                        </div>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Col md={12} sm={12}>\r\n                            <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\r\n                                <input\r\n                                    ref={inputRef}\r\n                                    type=\"file\"\r\n                                    id=\"input-file-upload\"\r\n                                    accept=\"image/png, image/jpeg, application/pdf, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    multiple={true}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label id=\"label-file-upload\" className={dragActive ? \"drag-active\" : \"\"}>\r\n                                    <div>\r\n                                        <CgSoftwareUpload size={60} color={'#5070e1'} onClick={onButtonClick} cursor='pointer' />\r\n                                        <p style={{ fontSize: '1.5rem', color: '#99a2b0', margin: 0 }}>Drop Files here or <span onClick={onButtonClick} style={{ color: '#5070e1', fontWeight: 'bold', fontSize: '2.2rem', cursor: 'pointer' }}>Click here</span></p>\r\n                                        <p style={{ color: '#b0b8c3' }}>*Please note that png, jpeg, pdf files are allowed</p>\r\n                                    </div>\r\n                                </label>\r\n                                {dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} onDragLeave={handleDrag} onDragOver={handleDrag} onDrop={handleDrop}></div>}\r\n                            </form>\r\n                            <span className={Styles.form_error}><small>{formError[\"fileLengthSingle\"] ? 'File is required' : ''}</small></span>\r\n                            <span className={Styles.form_error}><small>{noMatrixFile ? 'Matrix File is required' : ''}</small></span>\r\n                        </Col>\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ padding: '1rem 4rem 2rem' }} className=\"sent_bulk_request\">\r\n                {\r\n                    formSubmitted &&\r\n                    <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n                }\r\n                <Col sm={12} className='no_padding'>\r\n                    <Button variant=\"dark\" type=\"submit\" disabled={formSubmitted} onClick={onSubmitHandler} style={{ width: '100%' }}>Upload</Button>\r\n                </Col>\r\n                {\r\n                    parentComponent === 'myDocument'\r\n                    && files.length > 1\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the <b>Matrix file</b> and update the columns to help system establish connection between the files being uploaded and system.</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n                {\r\n                    parentComponent === 'sentDocumentRequest'\r\n                    && <Col sm={12} className='no_padding'>\r\n                        <br />\r\n                        <p>Please download the sample file to get idea about the fields you need to pass to raise bulk document request</p>\r\n                        <Col sm={12} className='no_padding'>\r\n                            <Button variant=\"dark\" type=\"submit\" onClick={downloadSampleFile} style={{ width: '100%' }}>Download Sample File</Button>\r\n                        </Col>\r\n                    </Col>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default DocumentUpload","import React, { useEffect, useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { Form, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AiFillWarning } from \"react-icons/ai\"\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport Styles from \"./Common.module.sass\"\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\n\r\nconst DocumentTypes = forwardRef(({ selectedValue = '', isDisabled = false }: { selectedValue?: string, isDisabled?: boolean }, ref) => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        documentTypes,\r\n        loading,\r\n        error\r\n    }: any = useSelector((state: any) => ({\r\n        documentTypes: state.types.documentType.data,\r\n        loading: state.types.documentType.loading,\r\n        error: state.types.documentType.error,\r\n    }))\r\n\r\n    const [value, setValue] = useState(selectedValue)\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        reset() {\r\n            setValue(\"\");\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (documentTypes && documentTypes.length === 0 && !error) {\r\n            dispatch(TypesActionCreator.getDocumentTypes())\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [documentTypes])\r\n\r\n    return (\r\n        <>\r\n            {error &&\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={\r\n                        <Tooltip id={`tooltip-error`}>\r\n                            Error in fetching\r\n                        </Tooltip>\r\n                    }\r\n                >\r\n                    <AiFillWarning size={20} className={Styles.details_warning} />\r\n                </OverlayTrigger>\r\n            }\r\n            {\r\n                !error && loading &&\r\n                <CgSpinnerAlt size={20} className={`spinner ${Styles.details_warning}`} />\r\n            }\r\n            <Form.Control\r\n                as=\"select\"\r\n                name=\"document_type\"\r\n                value={value}\r\n                className=\"select_custom\"\r\n                onChange={(e) => { setValue(e.target.value) }}>\r\n                <option></option>\r\n                {\r\n                    documentTypes && documentTypes.sort(function (a, b) {\r\n                        if (a.partnerName < b.partnerName) { return -1; }\r\n                        if (a.partnerName > b.partnerName) { return 1; }\r\n                        return 0;\r\n\r\n                    }).map((agency: any, index: number) => {\r\n                        return (\r\n                            <option\r\n                                key={`agency_${index}`}\r\n                                value={agency.shortCode}\r\n                            >\r\n                                {agency.documentType}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n            </Form.Control>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default DocumentTypes","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button, Container } from \"react-bootstrap\"\r\nimport { CgSpinnerAlt } from 'react-icons/cg';\r\nimport { getSignedURL } from '../../helpers/util';\r\n\r\n\r\nimport Styles from \"./Modal.module.sass\";\r\n\r\nconst ViewDocument = ({ onHide, show, documentData }) => {\r\n\r\n    const [documentType, setDocumentType] = useState('')\r\n    const [imageUrl, setImageUrl] = useState<any>(\"\")\r\n    const [loadingImage, setLoadingImage] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(documentData)\r\n        const splitDocumentName = documentData.fileName ? documentData.fileName.split('.') : documentData.documentName.split('.')\r\n        setDocumentType(splitDocumentName[splitDocumentName.length - 1])\r\n    }, [documentData])\r\n\r\n    useEffect(() => {\r\n        viewImage()\r\n    }, [documentType])\r\n\r\n    const viewImage = async () => {\r\n        if (documentType === 'pdf' || documentType === 'png') {\r\n            setLoadingImage(true)\r\n        }\r\n        let fileUrl = await getSignedURL(documentData.objectKey || documentData.filePath)\r\n        setImageUrl(fileUrl)\r\n    }\r\n\r\n    const handleNoPreview = () => {\r\n        return <p>Preview not available, Please download</p>\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"lg\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <p>{documentData.fileName || documentData.documentName}</p>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document} style={{ minHeight: '3rem' }}>\r\n                    {\r\n                        loadingImage\r\n                        && <CgSpinnerAlt className=\"spinner\" size={50} style={{ position: 'absolute' }} />\r\n                    }\r\n                    {\r\n                        documentType === 'png'\r\n                        && <img onLoad={() => setLoadingImage(false)} src={imageUrl} alt={documentData.fileName} width=\"100%\" />\r\n                    }\r\n                    {\r\n                        documentType === 'pdf'\r\n                        && <object data={imageUrl}\r\n                            onLoad={() => setLoadingImage(false)}\r\n                            width=\"800\"\r\n                            height=\"500\">\r\n                        </object>\r\n                    }\r\n                    {\r\n                        (\r\n                            documentType === 'txt'\r\n                            || documentType === 'xlsx'\r\n                        )\r\n                        && handleNoPreview()\r\n                    }\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default ViewDocument\r\n","import { MyDocumentsFolder, MyDocumentsList } from \"../types.d\"\r\nimport { myDocumentsService } from \"../../services\"\r\n\r\nexport const MyDocumentsActionCreator = {\r\n    getMyDocumentFolders: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsFolder.MY_DOCUMENTS_FOLDER_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentFolders(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    getMyDocumentList: (payload) => (dispatch: any) => {\r\n        const request = () => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_REQUEST })\r\n        const success = (user: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_SUCCESS, payload: user })\r\n        const failure = (error: any) => ({ type: MyDocumentsList.MY_DOCUMENTS_LIST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        myDocumentsService.getMyDocumentList(payload)\r\n            .then(\r\n                user => {\r\n                    dispatch(success(user))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n    resetDocumentList: () => (dispatch: any) => {\r\n        dispatch(() => dispatch({ type: MyDocumentsList.MY_DOCUMENTS_LIST_RESET }))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_warning\":\"Common_details_warning__2lu-3\",\"form_multiple\":\"Common_form_multiple__1IGof\",\"tag_item\":\"Common_tag_item__FjigF\",\"tag_item_button\":\"Common_tag_item_button__19IVB\",\"error\":\"Common_error__2RdGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi_select_container\":\"Modal_multi_select_container__2TE8W\",\"checkbox_wrapper\":\"Modal_checkbox_wrapper__3YO7R\",\"label_select\":\"Modal_label_select__qIb3F\",\"download_modal\":\"Modal_download_modal__2Q8Qv\",\"center_document\":\"Modal_center_document__1lIsg\"};","import { useState, useEffect } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { checkIfAdvanceSearchIsActive, createZipForFolderDownload } from \"../../helpers/util\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\n\r\nconst MyDocuments = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const { addToast } = useToasts();\r\n    const [sortElement, setSortElement] = useState('modifiedDate')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [advanceSearchObj, setAdvanceSearchObj] = useState({});\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([]);\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n\r\n    const { folders,\r\n        columns,\r\n        totalCount,\r\n        error,\r\n        loading,\r\n        defaultColumns\r\n    } = useSelector((state: any) => ({\r\n        folders: state.myDocuments.folders.data,\r\n        columns: state.myDocuments.folders.columns,\r\n        totalCount: state.myDocuments.folders.totalCount,\r\n        error: state.myDocuments.folders.error,\r\n        loading: state.myDocuments.folders.loading,\r\n        defaultColumns: state.misc.allTableColumns.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [advanceSearchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].columnNames)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n    const showDocumentListPage = (data) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (\r\n        pageSize = pageCount,\r\n        pageNumber = 1,\r\n        textValue = null,\r\n        sort = sortType,\r\n        column = sortElement\r\n    ) => {\r\n        let searchObj: any = {\r\n            pageSize,\r\n            pageNumber,\r\n            folderName: textValue,\r\n            sortOrder: sort,\r\n            sortParam: column\r\n        }\r\n        if (!checkIfAdvanceSearchIsActive(advanceSearchObj)) {\r\n            searchObj = { ...searchObj, ...advanceSearchObj }\r\n        }\r\n        dispatch(MyDocumentsActionCreator.getMyDocumentFolders(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadDocument = async (document) => {\r\n        addToast(createMessage('info', `DOWNLOAD_STARTED`, ''), { appearance: 'info', autoDismiss: true })\r\n        await createZipForFolderDownload(document.documentPaths, document.folderName)\r\n        addToast(createMessage('info', `DOWNLOAD_SUCCESSFUL`, ''), { appearance: 'success', autoDismiss: true })\r\n    }\r\n\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'myDocuments'}\r\n                    Styles={Styles}\r\n                    searchHandler={(criteria) => search(pageCount, 1, criteria)}\r\n                    setAdvanceSearchObj={(obj) => setAdvanceSearchObj(obj)}\r\n                    advanceSearchObj={advanceSearchObj}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag) => setShowAdvanceSearch(flag)}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Upload Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={folders}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"folderName\": \"Name\",\r\n                    \"fileSize\": \"Size\",\r\n                    \"modifiedDate\": \"Modified Date\",\r\n                    \"shareDate\": \"Shared Date\",\r\n                    \"receiveDate\": \"Received Date\",\r\n                    \"shareBy\": \"Shared By\",\r\n                    \"sharedWith\": \"Shared With\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data, column) => showDocumentListPage(data)}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'myDocuments'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadDocument(data),\r\n                        share: (data) => console.log(`share action`),\r\n                        view: (data) => showDocumentListPage(data),\r\n                        delete: (data) => console.log(`Delete Action`)\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload\r\n                show={uploadDocModal}\r\n                onHide={() => setUploadDocModal(false)}\r\n                accountId={123}\r\n                Styles={Styles}\r\n                parentComponent=\"myDocument\"\r\n                search={search} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default MyDocuments\r\n\r\n","import {\r\n    GetReceiveDocumentRequest,\r\n    DownloadDocumentRequest,\r\n    DeleteReceiveDocumentRequest\r\n} from \"../types.d\";\r\nimport { receiveDocumentRequest } from \"../../services\"\r\n\r\nexport const ReceiveDocumentRequestActionCreator = {\r\n    getReceiveDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetReceiveDocumentRequest.GET_RECEIVE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.getReceiveDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    DownloadDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.downloadDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DownloadDocumentRequest.DOWNLOAD_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        receiveDocumentRequest.deleteReceiveDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteReceiveDocumentRequest.DELETE_RECEIVE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs, Modal, Container } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { debounce } from \"lodash\"\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { SentDocumentRequestActionCreator } from \"../../store/actions/sentDocumentRequest.actions\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { TypesActionCreator } from \"../../store/actions/common/types.actions\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { ReceiveDocumentRequestActionCreator } from \"../../store/actions/receivedDocumentRequest.actions\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { checkIfAdvanceSearchIsActive, getSignedURL } from \"../../helpers/util\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\n\r\nconst ReceivedDocumentRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const aRef = useRef<any>()\r\n    const { addToast } = useToasts();\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('requestDate')\r\n    const [sortType, setSortType] = useState('desc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [showBulkRequest, setShowBulkRequest] = useState(false)\r\n    const [showRequestNewDocument, setShowRequestNewDocument] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n    const [details, setDetails] = useState<any>(null);\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [advanceSearchObj, setAdvanceSearchObj] = useState({});\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([])\r\n\r\n    const {\r\n        receiveDocumentRequests,\r\n        totalCount,\r\n        columns,\r\n        loading,\r\n        error,\r\n        downloadRequest,\r\n        downloadRequestSuccess,\r\n        downloadRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError,\r\n        defaultColumns\r\n    } = useSelector((state: any) => ({\r\n        receiveDocumentRequests: state.receiveDocumentRequest.data,\r\n        totalCount: state.receiveDocumentRequest.totalCount,\r\n        columns: state.receiveDocumentRequest.columns,\r\n        loading: state.receiveDocumentRequest.loading,\r\n        error: state.receiveDocumentRequest.error,\r\n        downloadRequest: state.receiveDocumentRequest.downloadRequest,\r\n        downloadRequestSuccess: state.receiveDocumentRequest.downloadRequestSuccess,\r\n        downloadRequestError: state.receiveDocumentRequest.downloadRequestError,\r\n        deleteRequest: state.receiveDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.receiveDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.receiveDocumentRequest.deleteRequestError,\r\n        defaultColumns: state.misc.allTableColumns.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [advanceSearchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].columnNames)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n\r\n    useEffect(() => {\r\n        // if (sendRequestSuccess) {\r\n        //     addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n        //     setShowRequestNewDocument(false);\r\n        //     search(pageCount, currentPage)\r\n        // }\r\n        // if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [\r\n        // sendRequestSuccess,\r\n        // sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (\r\n        pageSize = pageCount,\r\n        pageNumber = 1,\r\n        textValue = null,\r\n        sort = sortType,\r\n        column = sortElement\r\n    ) => {\r\n        let searchObj: any = {\r\n            pageSize,\r\n            pageNumber,\r\n            documentName: textValue,\r\n            sortOrder: sort,\r\n            sortParam: column\r\n        }\r\n        if (!checkIfAdvanceSearchIsActive(advanceSearchObj)) {\r\n            searchObj = { ...searchObj, ...advanceSearchObj }\r\n        }\r\n        dispatch(ReceiveDocumentRequestActionCreator.getReceiveDocumentRequest(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(ReceiveDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n        dispatch(SummaryActionCreator.reRender())\r\n    }\r\n\r\n    const handleDetails = (document) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const downloadHandler = async (document) => {\r\n        //download file\r\n        let filePath = await getSignedURL(document.filePath)\r\n        aRef.current.href = filePath;\r\n        aRef.current.download = document.documentName;\r\n        aRef.current.click();\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.documentId]))\r\n    }\r\n\r\n    const fulFillHandler = () => {\r\n        search()\r\n        dispatch(SummaryActionCreator.reRender())\r\n    }\r\n\r\n    return (<>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'receiveDocumentRequest'}\r\n                    Styles={Styles}\r\n                    searchHandler={(criteria) => search(pageCount, 1, criteria)}\r\n                    setAdvanceSearchObj={(obj) => setAdvanceSearchObj(obj)}\r\n                    advanceSearchObj={advanceSearchObj}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag) => setShowAdvanceSearch(flag)}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setUploadDocModal(true)}>Fulfill Bulk Request</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={receiveDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillmentDate\": \"Fulfillment Date\",\r\n                    \"fileName\": \"Document Name\",\r\n                    \"requestedFrom\": \"Requested By\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'receiveDocumentRequest'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadHandler(data),\r\n                        upload: (data) => setUploadDocModal(true),\r\n                        delete: (data) => handleDetails(data),\r\n                        viewDocument: (data) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n        {\r\n            uploadDocModal\r\n            && <DocumentUpload\r\n                show={uploadDocModal}\r\n                onHide={() => setUploadDocModal(false)}\r\n                accountId={123}\r\n                Styles={Styles}\r\n                parentComponent=\"receiveDocumentRequest\"\r\n                search={() => fulFillHandler()}\r\n                details={details}\r\n            />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='receiveDocumentRequest'\r\n            />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default ReceivedDocumentRequests\r\n\r\n","import { GetSentDocumentRequest, SentDocumentRequest, DeleteDocumentRequest } from \"../types.d\";\r\nimport { sentDocumentRequestService } from \"../../services\"\r\n\r\nexport const SentDocumentRequestActionCreator = {\r\n    getSentDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: GetSentDocumentRequest.GET_SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.getSentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            )\r\n    },\r\n\r\n    sentDocumentRequest: (requestPayload) => (dispatch: any) => {\r\n        const request = () => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.sentDocumentRequest(requestPayload)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: SentDocumentRequest.SENT_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n    deleteDocumentRequest: (id) => (dispatch: any) => {\r\n        const request = () => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_REQUEST })\r\n        const success = (sent: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_SUCCESS, payload: sent })\r\n        const failure = (error: any) => ({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_FAILURE, payload: error })\r\n\r\n        dispatch(request())\r\n\r\n        sentDocumentRequestService.deleteDocumentRequest(id)\r\n            .then(\r\n                sent => {\r\n                    dispatch(success(sent))\r\n                },\r\n                error => {\r\n                    dispatch(failure(error))\r\n                }\r\n            ).finally(() => dispatch({ type: DeleteDocumentRequest.DELETE_DOCUMENT_REQUEST_RESET }))\r\n    },\r\n}","import { ConnectedUsers } from \"../types.d\";\r\nimport { userService } from \"../../services\"\r\n\r\nexport const UserActionCreator = {\r\n    getConnectedUsers: () => (dispatch: any) => {\r\n        const request = () => ({ type: ConnectedUsers.CONNECTED_USER_REQUEST, payload: [] })\r\n        const success = (users: any) => ({ type: ConnectedUsers.CONNECTED_USER_SUCCESS, payload: users })\r\n        const failure = () => ({ type: ConnectedUsers.CONNECTED_USER_FAILURE, payload: [] })\r\n\r\n        dispatch(request())\r\n\r\n        userService.getConnectedUsers()\r\n            .then(\r\n                users => {\r\n                    dispatch(success(users))\r\n                },\r\n                error => {\r\n                    dispatch(failure())\r\n                }\r\n            )\r\n    }\r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\nimport { Typeahead } from \"react-bootstrap-typeahead\"\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs, Modal, Container } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { debounce } from \"lodash\"\r\n\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { SentDocumentRequestActionCreator } from \"../../store/actions/sentDocumentRequest.actions\";\r\nimport DocumentUpload from \"../../components/modal/DocumentUpload\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport DeleteConfirm from \"../../components/modal/DeleteConfirm\";\r\nimport { UserActionCreator } from \"../../store/actions/user.actions\";\r\nimport { checkIfAdvanceSearchIsActive, getSignedURL } from \"../../helpers/util\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport ViewDocument from \"../../components/modal/ViewDocument\";\r\nimport DocumentTypes from \"../../components/Common/DocumentType\";\r\nimport AdvanceSearch from \"../../components/Common/AdvanceSearch\";\r\n\r\nconst SentDocumentRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const aRef = useRef<any>()\r\n    const { addToast } = useToasts();\r\n\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('id')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [showBulkRequest, setShowBulkRequest] = useState(false)\r\n    const [showRequestNewDocument, setShowRequestNewDocument] = useState(false);\r\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n    const [details, setDetails] = useState<any>(null);\r\n    const [showDocument, setShowDocument] = useState(false)\r\n    const [documentToShow, setDocumentToShow] = useState(null);\r\n    const [advanceSearchObj, setAdvanceSearchObj] = useState({});\r\n    const [columnsSaved, setColumnsSaved] = useState<any>([])\r\n\r\n    const {\r\n        sentDocumentRequests,\r\n        totalCount,\r\n        columns,\r\n        loading,\r\n        error,\r\n        sendRequest,\r\n        sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequest,\r\n        deleteRequestSuccess,\r\n        deleteRequestError,\r\n        defaultColumns\r\n    } = useSelector((state: any) => ({\r\n        sentDocumentRequests: state.sentDocumentRequest.data,\r\n        totalCount: state.sentDocumentRequest.totalCount,\r\n        columns: state.sentDocumentRequest.columns,\r\n        loading: state.sentDocumentRequest.loading,\r\n        error: state.sentDocumentRequest.error,\r\n        sendRequest: state.sentDocumentRequest.sendRequest,\r\n        sendRequestSuccess: state.sentDocumentRequest.sendRequestSuccess,\r\n        sendRequestError: state.sentDocumentRequest.sendRequestError,\r\n        deleteRequest: state.sentDocumentRequest.deleteRequest,\r\n        deleteRequestSuccess: state.sentDocumentRequest.deleteRequestSuccess,\r\n        deleteRequestError: state.sentDocumentRequest.deleteRequestError,\r\n        defaultColumns: state.misc.allTableColumns.data\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [advanceSearchObj, sortElement, sortType])\r\n\r\n    useEffect(() => {\r\n        if (!loading && columns.length === 0 && (defaultColumns && defaultColumns.length > 0)) {\r\n            const columns = defaultColumns.filter((dC) => {\r\n                if (dC.tableName === 'documentFolder') {\r\n                    return dC\r\n                }\r\n            })\r\n            setColumnsSaved(columns[0].columnNames)\r\n        } else {\r\n            setColumnsSaved(columns)\r\n        }\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        if (sendRequestSuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            setShowRequestNewDocument(false);\r\n            search(pageCount, currentPage)\r\n            setTimeout(() => {\r\n                dispatch(SummaryActionCreator.reRender())\r\n            }, 1000)\r\n        }\r\n        if (sendRequestError) { addToast(createMessage('error', `sending`, 'document request'), { appearance: 'error', autoDismiss: false }); }\r\n        if (deleteRequestSuccess) {\r\n            addToast(createMessage('success', `deleted`, 'Required Documents'), { appearance: 'success', autoDismiss: true });\r\n            setShowDeleteConfirm(false)\r\n            search(pageCount, currentPage)\r\n            dispatch(SummaryActionCreator.reRender())\r\n        }\r\n        if (deleteRequestError) { addToast(createMessage('error', `deleting`, 'required Documents'), { appearance: 'error', autoDismiss: false }); }\r\n    }, [sendRequestSuccess,\r\n        sendRequestError,\r\n        deleteRequestSuccess,\r\n        deleteRequestError])\r\n\r\n    const search = (\r\n        pageSize = pageCount,\r\n        pageNumber = 0,\r\n        textValue = null,\r\n        sort = sortType,\r\n        column = sortElement\r\n    ) => {\r\n        let searchObj: any = {\r\n            pageSize,\r\n            pageNumber,\r\n            documentName: textValue,\r\n            sortOrder: sort,\r\n            sortParam: column\r\n        }\r\n        if (!checkIfAdvanceSearchIsActive(advanceSearchObj)) {\r\n            searchObj = { ...searchObj, ...advanceSearchObj }\r\n        }\r\n        dispatch(SentDocumentRequestActionCreator.getSentDocumentRequest(searchObj))\r\n        setShowAdvanceSearch(false)\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const deleteAlert = () => {\r\n        dispatch(SentDocumentRequestActionCreator.deleteDocumentRequest(details.id))\r\n    }\r\n\r\n    const handleDetails = (document) => {\r\n        setDetails(document)\r\n        setShowDeleteConfirm(true)\r\n    }\r\n\r\n    const downloadHandler = async (document) => {\r\n        //download file\r\n        let filePath = await getSignedURL(document.filePath)\r\n        aRef.current.href = filePath;\r\n        aRef.current.download = document.documentName;\r\n        aRef.current.click();\r\n        dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.documentId]))\r\n    }\r\n\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col sm={12}>\r\n            <Row>\r\n                <AdvanceSearch\r\n                    parentComponent={'sentDocumentRequest'}\r\n                    Styles={Styles}\r\n                    searchHandler={(criteria) => search(pageCount, 1, criteria)}\r\n                    setAdvanceSearchObj={(obj) => setAdvanceSearchObj(obj)}\r\n                    advanceSearchObj={advanceSearchObj}\r\n                    showAdvanceSearch={showAdvanceSearch}\r\n                    setShowAdvanceSearch={(flag) => setShowAdvanceSearch(flag)}\r\n                />\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowBulkRequest(true)}>Import Bulk Request</Button>\r\n                </Col>\r\n                <Col md={2} sm={2}>\r\n                    <Button variant=\"dark\" style={{ width: \"100%\" }} onClick={() => setShowRequestNewDocument(true)}>Request New Document</Button>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n        </Col>\r\n        <Col>\r\n            <TableComponent\r\n                data={sentDocumentRequests}\r\n                isLoading={loading}\r\n                map={{\r\n                    \"documentType\": \"Requested Document\",\r\n                    \"originalAccountNumber\": \"Original Account Number\",\r\n                    \"equabliAccountNumber\": \"Equabli Account Number\",\r\n                    \"clientAccountNumber\": \"Client Account Number\",\r\n                    \"requestDate\": \"Requested Date\",\r\n                    \"dueDate\": \"Due Date\",\r\n                    \"fulfillmentDate\": \"Fulfillment Date\",\r\n                    \"fileName\": \"File Name\",\r\n                    \"requestedFrom\": \"Requested From\",\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={[]}\r\n                handleNavigate={() => { }}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'sentDocumentRequest'}\r\n                searchCriteria={{}}\r\n                hideShareArray={columnsSaved}\r\n                addEditArray={\r\n                    {\r\n                        download: (data) => downloadHandler(data),\r\n                        delete: (data) => handleDetails(data),\r\n                        viewDocument: (data) => {\r\n                            setShowDocument(true)\r\n                            setDocumentToShow(data)\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n\r\n        {\r\n            showRequestNewDocument\r\n            && <RequestNewDocument show={showRequestNewDocument} onHide={() => setShowRequestNewDocument(false)} dispatch={dispatch} />\r\n        }\r\n        {\r\n            showBulkRequest\r\n            && <DocumentUpload show={showBulkRequest} onHide={() => setShowBulkRequest(false)} accountId={123} Styles={Styles} parentComponent=\"sentDocumentRequest\" />\r\n        }\r\n        {\r\n            showDeleteConfirm\r\n            && <DeleteConfirm\r\n                show={showDeleteConfirm}\r\n                onHide={() => setShowDeleteConfirm(false)}\r\n                confirmDelete={() => deleteAlert()}\r\n                details={details}\r\n                type='sentDocumentRequest'\r\n            />\r\n        }\r\n        {\r\n            showDocument &&\r\n            <ViewDocument show={showDocument} onHide={() => setShowDocument(false)} documentData={documentToShow} />\r\n        }\r\n\r\n    </>)\r\n}\r\n\r\nconst RequestNewDocument = ({ show, onHide, dispatch }) => {\r\n    const ref = useRef<any>();\r\n    const sendRequestRef = useRef<any>()\r\n    const [defaultSelect, setDefaultSelect] = useState<any>([])\r\n    const [usersSelected, setUserSelected] = useState<any>([])\r\n\r\n    const {\r\n        users,\r\n        loading,\r\n        error\r\n    } = useSelector((state: any) => ({\r\n        users: state.users.data,\r\n        loading: state.users.loading,\r\n        error: state.users.error\r\n    }))\r\n\r\n    useEffect(() => {\r\n        dispatch(UserActionCreator.getConnectedUsers())\r\n    }, [])\r\n\r\n    const handleRequest = (e) => {\r\n        e.preventDefault()\r\n        const {\r\n            originalAccountNumber,\r\n            clientAccountNumber,\r\n            docTypeCode\r\n        } = sendRequestRef.current\r\n        dispatch(SentDocumentRequestActionCreator.sentDocumentRequest({\r\n            \"sendRequests\": usersSelected,\r\n            \"originalAccountNumber\": originalAccountNumber.value,\r\n            \"clientAccountNumber\": clientAccountNumber.value,\r\n            \"docTypeCode\": docTypeCode.value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            size=\"xl\"\r\n            animation={true}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Request New Document\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            < Modal.Body className=\"show-grid\">\r\n                <Container className={Styles.center_document}>\r\n                    <Form ref={sendRequestRef} onSubmit={(e) => handleRequest(e)}>\r\n                        <br />\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Typeahead\r\n                                            isLoading={loading}\r\n                                            id=\"public-methods-example\"\r\n                                            labelKey=\"firstName\"\r\n                                            multiple\r\n                                            defaultSelected={defaultSelect}\r\n                                            ref={ref}\r\n                                            allowNew={true}\r\n                                            newSelectionPrefix='Not a Platform User: '\r\n                                            onChange={(selected) => {\r\n                                                let selectedUpdated = selected.map((s: any) => {\r\n                                                    let temp = {\r\n                                                        \"firstName\": s.firstName,\r\n                                                        \"principleId\": s.principleId,\r\n                                                        \"orgTypeCode\": s.orgType,\r\n                                                        \"orgCode\": s.orgCode\r\n                                                    }\r\n                                                    return temp\r\n                                                })\r\n                                                setUserSelected(selectedUpdated)\r\n                                            }}\r\n                                            options={users}\r\n                                        />\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Send Request To</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Portfolio Id</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row> */}\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"originalAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Original Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={6} className=\"no_padding\">\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <Col md={12} sm={12}>\r\n                                        <Form.Control type=\"text\" name=\"clientAccountNumber\"></Form.Control>\r\n                                    </Col>\r\n                                    <Form.Label className=\"label_custom white\">Client Account Number</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={12} md={6} >\r\n                                <Form.Group as={Col} className=\"mb-5\">\r\n                                    <DocumentTypes />\r\n                                    <Form.Label className=\"label_custom white\">Document Type</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Col className={Styles.button_center}>\r\n                            <Button variant=\"dark\" type=\"submit\" style={{ width: '100%' }}>Request</Button>{\" \"}\r\n                        </Col>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default SentDocumentRequests\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport { Col, Form, Row, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MyDocumentsActionCreator } from \"../../store/actions/myDocuments.actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TableComponent from \"../../components/Table/Table\";\r\nimport { DownloadHistoryActionCreator } from \"../../store/actions/downloadHistory.actions\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { createMessage } from \"../../helpers/messages\";\r\nimport { getSignedURL } from \"../../helpers/util\";\r\n\r\nconst DownloadHistory = () => {\r\n    const dispatch = useDispatch();\r\n    const { addToast } = useToasts();\r\n    const aRef = useRef<any>()\r\n    const history = useHistory();\r\n    const [showAdvanceSearch, setShowAdvanceSearch] = useState(false);\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [uploadDocModal, setUploadDocModal] = useState(false)\r\n\r\n    const {\r\n        data,\r\n        totalCount,\r\n        error,\r\n        loading,\r\n        saveDownload,\r\n        saveDownloadSuccess,\r\n        saveDownloadError,\r\n        deleteDownloadHistory,\r\n        deleteDownloadHistorySuccess,\r\n        deleteDownloadHistoryError\r\n    } = useSelector((state: any) => ({\r\n        data: state.downloadHistory.data,\r\n        totalCount: state.downloadHistory.totalCount,\r\n        error: state.downloadHistory.error,\r\n        loading: state.downloadHistory.loading,\r\n        saveDownload: state.downloadHistory.saveDownload,\r\n        saveDownloadSuccess: state.downloadHistory.saveDownloadSuccess,\r\n        saveDownloadError: state.downloadHistory.saveDownloadError,\r\n        deleteDownloadHistory: state.downloadHistory.deleteDownloadHistory,\r\n        deleteDownloadHistorySuccess: state.downloadHistory.deleteDownloadHistorySuccess,\r\n        deleteDownloadHistoryError: state.downloadHistory.deleteDownloadHistoryError\r\n    }))\r\n\r\n    useEffect(() => {\r\n        search(pageCount, currentPage)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (deleteDownloadHistorySuccess) {\r\n            addToast(createMessage('success', `Sent`, 'Document Request'), { appearance: 'success', autoDismiss: true });\r\n            search(pageCount, currentPage)\r\n        }\r\n        if (deleteDownloadHistoryError) {\r\n\r\n        }\r\n    }, [deleteDownloadHistorySuccess, deleteDownloadHistoryError])\r\n\r\n    const showDocumentListPage = (data, column) => {\r\n        history.push({\r\n            pathname: '/documents/document_list',\r\n            search: `account_id=${data.folderName}`,\r\n        });\r\n    }\r\n\r\n    const search = (pageSize = pageCount, pageNumber = 0) => {\r\n        dispatch(DownloadHistoryActionCreator.getDownloadHistory({\r\n            pageSize,\r\n            pageNumber\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n    const handlePagination = (pageSize: number, pageNumber: number) => {\r\n        setPageCount(pageSize)\r\n        search(pageSize, pageNumber)\r\n    }\r\n\r\n    const downloadHandler = async (document) => {\r\n        //download file\r\n        let filePath = await getSignedURL(document.filePath)\r\n        aRef.current.href = filePath;\r\n        aRef.current.download = document.fileName;\r\n        aRef.current.click();\r\n        // dispatch(DownloadHistoryActionCreator.saveDownloadHistory([document.id]))\r\n    }\r\n\r\n    return (<>\r\n        <a href=\"\" ref={aRef} target=\"_blank\"></a>\r\n        <Col>\r\n            <TableComponent\r\n                data={data}\r\n                isLoading={loading}\r\n                map={{\r\n                    documentName: \"Document Name\",\r\n                    documentsize: \"Size\",\r\n                    downloadDate: \"Download Date\",\r\n                    downloadStatus: \"Status\"\r\n                }}\r\n                totalCount={totalCount}\r\n                actionArray={['folderName']}\r\n                handleNavigate={(data, column) => showDocumentListPage(data, column)}\r\n                currencyColumns={[]}\r\n                sortElement={(header) => setSortElement(header)}\r\n                sortType={(type) => setSortType(type)}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                parentComponent={'downloadHistory'}\r\n                searchCriteria={{}}\r\n                hideShareArray={[\r\n                    \"documentName\",\r\n                    \"documentsize\",\r\n                    \"downloadDate\",\r\n                    \"downloadStatus\"\r\n                ]}\r\n                addEditArray={\r\n                    {\r\n                        pause: (data) => console.log(`pause Action`),\r\n                        download: (data) => downloadHandler(data),\r\n                        delete: (data) => {\r\n                            dispatch(DownloadHistoryActionCreator.deleteDownloadHistory(data.id))\r\n                        }\r\n                    }\r\n                }\r\n                onPaginationChange={(\r\n                    pageSize: number, pageNumber: number\r\n                ) => handlePagination(pageSize, pageNumber)}></TableComponent >\r\n        </Col>\r\n    </>)\r\n}\r\n\r\nexport default DownloadHistory;","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Col, Form, Row, ProgressBar, Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport Styles from \"./DocumentManager.module.sass\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport { CgOptions, CgSearch } from \"react-icons/cg\";\r\n\r\nimport { BsArrowsAngleContract, BsArrowsAngleExpand } from \"react-icons/bs\"\r\nimport MyDocuments from \"./MyDocuments\";\r\nimport ReceivedDocumentRequests from \"./ReceivedDocumentRequests\";\r\nimport SentDocumentRequests from \"./SentDocumentRequests\";\r\nimport DownloadHistory from \"./DownloadHistory\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SummaryActionCreator } from \"../../store/actions/summary.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MiscActionCreator } from \"../../store/actions/common/misc.actions\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\r\n\r\nconst tenuresInit = [\r\n    {\r\n        statusCode: 'current_month',\r\n        status: 'Current Month'\r\n    }\r\n]\r\nconst productsInit = [\r\n    {\r\n        statusCode: 'all_products',\r\n        status: 'All Products'\r\n    }\r\n]\r\nconst portfolioInit = [\r\n    {\r\n        statusCode: 'all_portfolio',\r\n        status: 'All Portfolio'\r\n    }\r\n]\r\nconst usersInit = [\r\n    {\r\n        statusCode: 'all_users',\r\n        status: 'All Users'\r\n    }\r\n]\r\n\r\nconst documentCoverageArr = [\r\n    {\r\n        percentage: 60,\r\n        title: 'Signed Contract or Term & Conditions',\r\n        accountsDone: 558,\r\n        accountsTotal: 931,\r\n        type: 'Signed contract or T&C'\r\n    },\r\n    {\r\n        percentage: 60,\r\n        title: 'Last Activity Statement',\r\n        accountsDone: 249,\r\n        accountsTotal: 416,\r\n        type: 'Last Activity Statement'\r\n    },\r\n    {\r\n        percentage: 10,\r\n        title: 'Charge-off Statement',\r\n        accountsDone: 42,\r\n        accountsTotal: 416,\r\n        type: 'Charge-off Statement'\r\n    },\r\n    {\r\n        percentage: 30,\r\n        title: 'Copy of Truth in Lending Disclosure',\r\n        accountsDone: 65,\r\n        accountsTotal: 215,\r\n        type: 'Lending Disclosure'\r\n    }\r\n];\r\n\r\nconst options = {\r\n    // responsive: true,\r\n    // maintainAspectRatio: false,\r\n    cutout: 100,\r\n    plugins: {\r\n        datalabels: {\r\n            color: 'white',\r\n            padding: 6,\r\n        },\r\n        legend: {\r\n            position: 'bottom' as const,\r\n        },\r\n    },\r\n}\r\n\r\nexport const DATA_REQUESTED = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\nexport const DATA_SENT = {\r\n    labels: ['Fulfilled', 'Open', 'Overdue'],\r\n    datasets: [\r\n        {\r\n            label: 'Total',\r\n            data: [],\r\n            backgroundColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f'\r\n            ],\r\n            borderColor: [\r\n                '#53d591',\r\n                'rgba(255, 206, 86, 1)',\r\n                '#fc3f3f',\r\n            ],\r\n            borderWidth: 1,\r\n        },\r\n    ],\r\n};\r\n\r\n\r\nconst Documents = ({ location }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const [tenures, setTenures] = useState(tenuresInit)\r\n    const [products, setProducts] = useState(productsInit)\r\n    const [portfolios, setPortfolios] = useState(portfolioInit)\r\n    const [users, setUsers] = useState(usersInit)\r\n    const [documentCoverage, setDocumentCoverage] = useState(documentCoverageArr)\r\n    const [sortElement, setSortElement] = useState('originalAccountNumber')\r\n    const [sortType, setSortType] = useState('asc');\r\n    const [pageCount, setPageCount] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [collapse, setCollapse] = useState(false);\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [dataRequested, setDataRequested] = useState<any>({\r\n        labels: ['Fulfilled', 'Open', 'Overdue'],\r\n        datasets: [\r\n            {\r\n                label: 'Total',\r\n                data: [],\r\n                backgroundColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f'\r\n                ],\r\n                borderColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    })\r\n    const [dataSent, setDataSent] = useState<any>({\r\n        labels: ['Fulfilled', 'Open', 'Overdue'],\r\n        datasets: [\r\n            {\r\n                label: 'Total',\r\n                data: [],\r\n                backgroundColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f'\r\n                ],\r\n                borderColor: [\r\n                    '#53d591',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    '#fc3f3f',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    })\r\n\r\n    const {\r\n        requestedSummary,\r\n        sentSummary,\r\n        errorSent,\r\n        loadingSent,\r\n        loadingRequest,\r\n        errorRequest,\r\n        reRender,\r\n    } = useSelector((state: any) => ({\r\n        requestedSummary: state.summary.requestedSummary,\r\n        sentSummary: state.summary.sentSummary,\r\n        errorSent: state.summary.errorSent,\r\n        loadingSent: state.summary.loadingSent,\r\n        loadingRequest: state.summary.loadingRequest,\r\n        errorRequest: state.summary.errorRequest,\r\n        reRender: state.summary.reRender\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (JSON.stringify(requestedSummary) !== \"{}\") {\r\n            delete requestedSummary.total\r\n            let labels = ['Fulfilled', 'Open', 'Overdue']\r\n            let values = Object.values(requestedSummary)\r\n            const dataRequestedTemp: any = Object.assign({}, DATA_REQUESTED)\r\n            dataRequestedTemp.labels = labels\r\n            dataRequestedTemp.datasets[0].data = values\r\n            setDataRequested(dataRequestedTemp)\r\n        }\r\n        if (JSON.stringify(sentSummary) !== \"{}\") {\r\n            delete sentSummary.total\r\n            let labels = ['Fulfilled', 'Open', 'Overdue']\r\n            let values = Object.values(sentSummary)\r\n            const dataSentTemp: any = Object.assign({}, DATA_SENT)\r\n            dataSentTemp.labels = labels\r\n            dataSentTemp.datasets[0].data = values\r\n            setDataSent(dataSentTemp)\r\n        }\r\n    }, [requestedSummary, sentSummary])\r\n\r\n    useEffect(() => {\r\n        dispatch(SummaryActionCreator.getSentSummary())\r\n        dispatch(SummaryActionCreator.getReceiveSummary())\r\n        dispatch(MiscActionCreator.getColumnForAllTables())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (reRender) {\r\n            setDataSent({\r\n                labels: ['Fulfilled', 'Open', 'Overdue'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Total',\r\n                        data: [],\r\n                        backgroundColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f'\r\n                        ],\r\n                        borderColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            })\r\n            setDataRequested({\r\n                labels: ['Fulfilled', 'Open', 'Overdue'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Total',\r\n                        data: [],\r\n                        backgroundColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f'\r\n                        ],\r\n                        borderColor: [\r\n                            '#53d591',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            '#fc3f3f',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            })\r\n            dispatch(SummaryActionCreator.getSentSummary())\r\n            dispatch(SummaryActionCreator.getReceiveSummary())\r\n        }\r\n    }, [reRender])\r\n\r\n    useEffect(() => {\r\n        const tab = location.pathname.split('/')\r\n        setSelectedTab(tab[tab.length - 1])\r\n    }, [location])\r\n\r\n    const memoRequested = useMemo(() => {\r\n        // console.log(`should re render request`, JSON.stringify(dataRequested))\r\n        // if (dataRequested && dataRequested.datasets && dataRequested.datasets[0].data.length > 0) {\r\n        return <Doughnut data={dataRequested} options={options} />\r\n        // }\r\n    }, [dataRequested])\r\n\r\n    const memoSent = useMemo(() => {\r\n        // console.log(`should re render sent`, JSON.stringify(dataSent))\r\n        // if (dataSent && dataSent.datasets && dataSent.datasets[0].data.length > 0) {\r\n        return <Doughnut data={dataSent} options={options} />\r\n        // }\r\n    }, [dataSent])\r\n\r\n    /**\r\n     * function is used in pagination\r\n     * @param pageSize \r\n     * @param pageNumber \r\n     */\r\n\r\n    const documentSummary = () => {\r\n        return <Col sm={12} className=\"form_container\">\r\n            <Row>\r\n                <Col sm={11}><h4 style={{ marginLeft: '1rem' }}>Document Summary</h4></Col>\r\n                <Col sm={1} style={{ textAlign: 'right', paddingRight: '2rem', cursor: 'pointer' }} onClick={() => setCollapse((collapse) => !collapse)}>\r\n                    {!collapse && <BsArrowsAngleContract size={20} />}\r\n                    {collapse && <BsArrowsAngleExpand size={20} />}\r\n                </Col>\r\n            </Row>\r\n            <Col sm={12} className={collapse ? Styles.collapse_summary : ''}>\r\n                <Row>\r\n                    <Col sm={5}>\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Coverage</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col >\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row >\r\n                                <hr />\r\n                                <Col sm={12} className={`no_padding ${Styles.progress_container_outer}`}>\r\n                                    {\r\n                                        documentCoverage && documentCoverage.length > 0\r\n                                        && documentCoverage.map((dC, index) => {\r\n                                            return (\r\n                                                <div key={`dC_${index}`} className={Styles.progress_container}>\r\n                                                    <p className={Styles.ProgressTitle}><b>{dC.title}</b></p>\r\n                                                    <ProgressBar className={Styles.progressbar} now={dC.percentage} label={`${dC.percentage}%`} />\r\n                                                    <p className={Styles.ProgressDesc}><span className={Styles.clickable}>{dC.accountsDone}</span> out of <b>{dC.accountsTotal}</b> accounts has {dC.type}</p>\r\n                                                    <hr />\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n\r\n                                    }\r\n                                </Col>\r\n                            </Form >\r\n                        </Col >\r\n                    </Col >\r\n                    <Col sm={5}  >\r\n                        <Col sm={12} className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Document Requirement</h5>\r\n                            <br />\r\n                            <Form\r\n                            // ref={formSearchAccount} onSubmit={(e) => onSubmitHandler(e)}\r\n                            >\r\n                                <Row>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4\">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (tenures && tenures.length > 0) &&\r\n                                                        tenures.map((tenure: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={tenure.statusCode}>{tenure.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Tenure</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (portfolios && portfolios.length > 0) &&\r\n                                                        portfolios.map((portfolio: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={portfolio.statusCode}>{portfolio.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Portfolio</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col lg={6} md={12} className=\"no_padding\">\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (products && products.length > 0) &&\r\n                                                        products.map((product: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={product.statusCode}>{product.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Products</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} className=\"mb-4 \">\r\n                                            <Col md={12} sm={12} className=\"no_padding\">\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    name=\"service_offered\"\r\n                                                    className=\"select_custom white\">\r\n                                                    {\r\n                                                        (users && users.length > 0) &&\r\n                                                        users.map((user: any, index: number) => {\r\n                                                            return <option key={`cr_${index}`} value={user.statusCode}>{user.status}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                            <Form.Label className=\"label_custom white\">Users</Form.Label>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col sm={6} className={`${Styles.chart_container} ${Styles.right_border}`}>\r\n                                        <h5>Sent Requests</h5>\r\n                                        {\r\n                                            !loadingSent &&\r\n                                            memoSent\r\n                                        }\r\n                                    </Col>\r\n                                    <Col sm={6} className={Styles.chart_container}>\r\n                                        <h5>Received Requests</h5>\r\n                                        {\r\n                                            !loadingRequest &&\r\n                                            memoRequested\r\n                                        }\r\n                                        {/* JSON.stringify(requestedSummary) !== \"{}\"\r\n                                            &&  */}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Col>\r\n                    <Col sm={2} >\r\n                        <Col className={Styles.inner_document_summary}\r\n                            style={{\r\n                                borderWidth: collapse ? '0' : '1px',\r\n                                background: collapse ? '#e9ecef' : 'white'\r\n                            }}>\r\n                            <h5>Usage</h5>\r\n                            <br />\r\n                            <Col sm={12} className=\"no_padding\">\r\n                                <div className={Styles.progress_container}>\r\n                                    <ProgressBar className={Styles.progressbar} now={60} label={`60%`} />\r\n                                    <br />\r\n                                    <p><b>11.58 GB used out of 15 GB</b></p>\r\n                                    <p><b>Total 15K documents</b></p>\r\n                                    <Button variant=\"dark\">Upgrade Your Plan</Button>\r\n                                </div>\r\n                            </Col>\r\n                        </Col>\r\n                    </Col>\r\n                </Row >\r\n            </Col >\r\n        </Col >\r\n    }\r\n    const handleSelect = (e) => {\r\n        history.push({\r\n            pathname: `/documents/${e}`\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                documentSummary()\r\n            }\r\n            <br />\r\n            <Col className=\"no_padding\">\r\n                <Tabs\r\n                    activeKey={selectedTab}\r\n                    id=\"fill-tab-example\"\r\n                    fill\r\n                    className=\"mb-3\"\r\n                    onSelect={handleSelect}\r\n                >\r\n                    <Tab eventKey=\"my_documents\" title=\"My Documents\">\r\n                        {selectedTab === \"my_documents\" && <MyDocuments />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"sent_document_requests\" title=\"Sent Document Requests\">\r\n                        {selectedTab === \"sent_document_requests\" && <SentDocumentRequests />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"received_document_requests\" title=\"Received Document Request\">\r\n                        {selectedTab === \"received_document_requests\" && <ReceivedDocumentRequests />}\r\n                    </Tab>\r\n                    <Tab eventKey=\"download_history\" title=\"Download History\">\r\n                        {selectedTab === \"download_history\" && <DownloadHistory />}\r\n                    </Tab>\r\n                    {/*<Tab eventKey=\"templates\" title=\"\">\r\n                    </Tab> */}\r\n                </Tabs >\r\n            </Col >\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Documents"],"sourceRoot":""}